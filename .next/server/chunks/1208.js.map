{"version":3,"file":"1208.js","mappings":"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","sources":["webpack://mistswap-interface/./src/components/CurrencyLogo/index.tsx","webpack://mistswap-interface/./src/components/Logo/index.tsx","webpack://mistswap-interface/./src/hooks/useENSContentHash.ts","webpack://mistswap-interface/./src/hooks/useHttpLocations.ts"],"sourcesContent":["import { ChainId, Currency, WNATIVE } from '@mistswapdex/sdk'\nimport React, { FunctionComponent, useMemo } from 'react'\n\nimport Logo from '../Logo'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport useHttpLocations from '../../hooks/useHttpLocations'\n\nconst BLOCKCHAIN = {\n  [ChainId.SMARTBCH]: 'smartbch',\n  [ChainId.SMARTBCH_AMBER]: 'amber',\n}\n\nfunction getCurrencySymbol(currency) {\n  if (currency.symbol === 'WBCH') {\n    return 'bch'\n  }\n  return currency.symbol.toLowerCase()\n}\n\nexport function getCurrencyLogoUrls(currency) {\n  const urls = []\n\n  urls.push(`https://raw.githubusercontent.com/mistswapdex/icons/master/token/${getCurrencySymbol(currency)}.jpg`)\n  if (currency.chainId in BLOCKCHAIN) {\n    urls.push(\n      `https://raw.githubusercontent.com/mistswapdex/assets/master/blockchains/${BLOCKCHAIN[currency.chainId]}/assets/${\n        currency.address\n      }/logo.png`\n    )\n    urls.push(\n      `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/${BLOCKCHAIN[currency.chainId]}/assets/${\n        currency.address\n      }/logo.png`\n    )\n  }\n\n  return urls\n}\n\nconst BitcoinCashLogo = 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/bch.jpg'\n\nconst LOGO: { readonly [chainId in ChainId]?: string } = {\n  [ChainId.SMARTBCH]: BitcoinCashLogo,\n  [ChainId.SMARTBCH_AMBER]: BitcoinCashLogo,\n}\n\ninterface CurrencyLogoProps {\n  currency?: Currency\n  size?: string | number\n  style?: React.CSSProperties\n  className?: string\n  squared?: boolean\n}\n\nconst unknown = 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/unknown.png'\n\nconst CurrencyLogo: FunctionComponent<CurrencyLogoProps> = ({\n  currency,\n  size = '24px',\n  style,\n  className = '',\n  ...rest\n}) => {\n  const uriLocations = useHttpLocations(\n    currency instanceof WrappedTokenInfo ? currency.logoURI || currency.tokenInfo.logoURI : undefined\n  )\n\n  const srcs = useMemo(() => {\n    if (!currency) {\n      return [unknown]\n    }\n\n    if (currency.isNative || currency.equals(WNATIVE[currency.chainId])) {\n      return [LOGO[currency.chainId], unknown]\n    }\n\n    if (currency.isToken) {\n      const defaultUrls = [...getCurrencyLogoUrls(currency)]\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, ...defaultUrls, unknown]\n      }\n      return defaultUrls\n    }\n  }, [currency, uriLocations])\n\n  return <Logo srcs={srcs} width={size} height={size} alt={currency?.symbol} className={className} {...rest} />\n}\n\nexport default CurrencyLogo\n","import React, { FC, useState } from 'react'\n\nimport { IconProps } from 'react-feather'\nimport Image from '../Image'\nimport { classNames } from '../../functions'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport type LogoProps = {\n  srcs: string[]\n  width: string | number\n  height: string | number\n  alt?: string\n} & IconProps\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: FC<LogoProps> = ({ srcs, width, height, style, alt = '', className, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n  const src = srcs.find((src) => !BAD_SRCS[src])\n  return (\n    <div className=\"rounded\" style={{ width, height, ...style }}>\n      <Image\n        src={src || 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/unknown.png'}\n        loader={() => src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n        width={width}\n        height={height}\n        alt={alt}\n        layout=\"fixed\"\n        className={classNames('rounded', className)}\n        {...rest}\n      />\n    </div>\n  )\n}\n\nexport default Logo\n","import { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\nimport { isZero } from '../functions'\nimport { namehash } from '@ethersproject/hash'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): {\n  loading: boolean\n  contenthash: string | null\n} {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { contenthashToUri, uriToHttp } from '../functions/convert'\n\nimport { parseENSAddress } from '../functions/ens'\nimport useENSContentHash from './useENSContentHash'\nimport { useMemo } from 'react'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    } else {\n      return uri ? uriToHttp(uri) : []\n    }\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n"],"names":["ChainId","WNATIVE","React","useMemo","Logo","WrappedTokenInfo","useHttpLocations","BLOCKCHAIN","SMARTBCH","SMARTBCH_AMBER","getCurrencySymbol","currency","symbol","toLowerCase","getCurrencyLogoUrls","urls","push","chainId","address","BitcoinCashLogo","LOGO","unknown","CurrencyLogo","size","style","className","rest","uriLocations","logoURI","tokenInfo","undefined","srcs","isNative","equals","isToken","defaultUrls","useState","Image","classNames","BAD_SRCS","width","height","alt","refresh","src","find","i","useENSRegistrarContract","useENSResolverContract","isZero","namehash","useSingleCallResult","useENSContentHash","ensName","ensNodeArgument","error","registrarContract","resolverAddressResult","resolverAddress","result","resolverContract","contenthash","loading","contenthashToUri","uriToHttp","parseENSAddress","uri","ens","resolvedContentHash"],"sourceRoot":""}