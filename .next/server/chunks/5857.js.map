{"version":3,"file":"5857.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;CAGA;;AACA;AAMA;AACA;AACA;AACA,MAAMI,uBAA4D,GAAG,EAArE,EAGA;;AACA,MAAMC,mBAAmC,GAAG;AAC1C,GAACH,8DAAD,GAAoB,CAACC,qDAAO,CAACD,8DAAD,CAAR,CADsB;AAE1C,GAACA,oEAAD,GAA0B,CAACC,qDAAO,CAACD,oEAAD,CAAR;AAFgB,CAA5C,EAKA;;AACO,MAAMM,6BAA6C,mCACrDH,mBADqD;AAExD,GAACH,8DAAD,GAAoB,CAAC,GAAGG,mBAAmB,CAACH,8DAAD,CAAvB,EAA2CD,6DAA3C,CAFoC;AAGxD,GAACC,oEAAD,GAA0B,CAAC,GAAGG,mBAAmB,CAACH,oEAAD,CAAvB;AAH8B,EAAnD;AAMA,MAAMO,gBAEZ,GAAG;AACF,GAACP,8DAAD,qBACKE,uBADL;AADE,CAFG;AAQP;AACA;AACA;AACA;;AACO,MAAMM,YAEZ,GAAG,EAFG;AAIP;AACA;AACA;;AACO,MAAMC,YAA4B,GAAG;AAC1C,GAACT,8DAAD,GAAoB,CAClB,GAAGG,mBAAmB,CAACH,8DAAD,CADJ,EAElBD,6DAFkB,EAGlBD,0DAAI,CAACE,8DAAD,CAHc,CADsB;AAM1C,GAACA,oEAAD,GAA0B,CACxB,GAAGG,mBAAmB,CAACH,oEAAD,CADE,EAExBF,0DAAI,CAACE,oEAAD,CAFoB;AANgB,CAArC,EAYP;;AACO,MAAMU,4BAA4C,mCACpDP,mBADoD;AAEvD,GAACH,8DAAD,GAAoB,CAAC,GAAGG,mBAAmB,CAACH,8DAAD,CAAvB,EAA2CD,6DAA3C,CAFmC;AAGvD,GAACC,oEAAD,GAA0B,CAAC,GAAGG,mBAAmB,CAACH,oEAAD,CAAvB;AAH6B,EAAlD;AAMA,MAAMW,YAEZ,GAAG;AACF,GAACX,8DAAD,GAAoB,CAChB,CAACF,0DAAI,CAACE,8DAAD,CAAL,EAAyBC,qDAAO,CAACD,8DAAD,CAAhC,CADgB,CADlB;AAIF,GAACA,oEAAD,GAA0B,CACtB,CAACF,0DAAI,CAACE,oEAAD,CAAL,EAA+BC,qDAAO,CAACD,oEAAD,CAAtC,CADsB;AAJxB,CAFG","sources":["webpack://mistswap-interface/./src/config/routing.ts"],"sourcesContent":["import {\n    MIST, XMIST, FLEXUSD\n} from '../config/tokens'\n// a list of tokens by chain\nimport { ChainId, Currency, Token, WNATIVE } from '@mistswapdex/sdk'\n\ntype ChainTokenList = {\n  readonly [chainId: number]: Token[]\n}\n\n// List of all mirror's assets addresses.\n// Last pulled from : https://whitelist.mirror.finance/eth/tokenlists.json\n// TODO: Generate this programmatically ?\nconst MIRROR_ADDITIONAL_BASES: { [tokenAddress: string]: Token[] } = {\n}\n\n// TODO: SDK should have two maps, WETH map and WNATIVE map.\nconst WRAPPED_NATIVE_ONLY: ChainTokenList = {\n  [ChainId.SMARTBCH]: [WNATIVE[ChainId.SMARTBCH]],\n  [ChainId.SMARTBCH_AMBER]: [WNATIVE[ChainId.SMARTBCH_AMBER]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WRAPPED_NATIVE_ONLY,\n  [ChainId.SMARTBCH]: [...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH], FLEXUSD],\n  [ChainId.SMARTBCH_AMBER]: [...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH_AMBER]],\n}\n\nexport const ADDITIONAL_BASES: {\n  [chainId: number]: { [tokenAddress: string]: Token[] }\n} = {\n  [ChainId.SMARTBCH]: {\n    ...MIRROR_ADDITIONAL_BASES,\n  },\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: {\n  [chainId: number]: { [tokenAddress: string]: Token[] }\n} = {}\n\n/**\n * Shows up in the currency select for swap and add liquidity\n */\nexport const COMMON_BASES: ChainTokenList = {\n  [ChainId.SMARTBCH]: [\n    ...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH],\n    FLEXUSD,\n    MIST[ChainId.SMARTBCH],\n  ],\n  [ChainId.SMARTBCH_AMBER]: [\n    ...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH_AMBER],\n    MIST[ChainId.SMARTBCH_AMBER],\n  ],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WRAPPED_NATIVE_ONLY,\n  [ChainId.SMARTBCH]: [...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH], FLEXUSD],\n  [ChainId.SMARTBCH_AMBER]: [...WRAPPED_NATIVE_ONLY[ChainId.SMARTBCH_AMBER]],\n}\n\nexport const PINNED_PAIRS: {\n  readonly [chainId in ChainId]?: [Token, Token][]\n} = {\n  [ChainId.SMARTBCH]: [\n      [MIST[ChainId.SMARTBCH], WNATIVE[ChainId.SMARTBCH]],\n  ],\n  [ChainId.SMARTBCH_AMBER]: [\n      [MIST[ChainId.SMARTBCH_AMBER], WNATIVE[ChainId.SMARTBCH_AMBER]]\n  ],\n}\n"],"names":["MIST","FLEXUSD","ChainId","WNATIVE","MIRROR_ADDITIONAL_BASES","WRAPPED_NATIVE_ONLY","SMARTBCH","SMARTBCH_AMBER","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","COMMON_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS"],"sourceRoot":""}