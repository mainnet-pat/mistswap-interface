{"version":3,"file":"7735.js","mappings":"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","sources":["webpack://mistswap-interface/./src/config/token-lists.ts","webpack://mistswap-interface/./src/constants/index.ts","webpack://mistswap-interface/./src/functions/bentobox.ts","webpack://mistswap-interface/./src/functions/contract.ts","webpack://mistswap-interface/./src/functions/convert/basisPointsToPercent.ts","webpack://mistswap-interface/./src/functions/convert/contenthashToUri.ts","webpack://mistswap-interface/./src/functions/convert/uriToHttp.ts","webpack://mistswap-interface/./src/functions/convert/index.ts","webpack://mistswap-interface/./src/functions/currency/getCurrency.ts","webpack://mistswap-interface/./src/functions/currency/currencyId.ts","webpack://mistswap-interface/./src/functions/currency/maxAmountSpend.ts","webpack://mistswap-interface/./src/functions/currency/index.ts","webpack://mistswap-interface/./src/functions/currency/wrappedCurrency.ts","webpack://mistswap-interface/./src/functions/ens.ts","webpack://mistswap-interface/./src/functions/format.ts","webpack://mistswap-interface/./src/functions/index.ts","webpack://mistswap-interface/./src/functions/kashi.ts","webpack://mistswap-interface/./src/functions/list.ts","webpack://mistswap-interface/./src/functions/math.ts","webpack://mistswap-interface/./src/functions/parse.ts","webpack://mistswap-interface/./src/functions/prices.ts","webpack://mistswap-interface/./src/functions/rebase.ts","webpack://mistswap-interface/./src/functions/retry.ts","webpack://mistswap-interface/./src/functions/styling.ts","webpack://mistswap-interface/./src/functions/trade.ts","webpack://mistswap-interface/./src/functions/validate.ts"],"sourcesContent":["const BA_LIST = 'https://raw.githubusercontent.com/The-Blockchain-Association/sec-notice-list/master/ba-sec-list.json'\n\n// used to mark unsupported tokens, these are hosted lists of unsupported tokens\n/**\n * @TODO add list from blockchain association\n */\nexport const UNSUPPORTED_LIST_URLS: string[] = [BA_LIST]\n\nconst ZHESTO_LIST = 'https://raw.githubusercontent.com/zh/sep20tokens/main/smartbch.tokenlist.json'\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  ZHESTO_LIST,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [ZHESTO_LIST]\n","import { ChainId, JSBI, Percent } from '@mistswapdex/sdk'\n\nexport const POOL_DENY = ['14', '29', '45', '30']\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\n\nexport const MERKLE_ROOT =\n  'https://raw.githubusercontent.com/sushiswap/sushi-vesting/master/merkle/week-19/merkle-10959148-11824101.json'\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 30 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 30\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n]\n\nexport const ANALYTICS_URL: { [chainId in ChainId]?: string } = {\n  // [ChainId.SMARTBCH]: 'https://analytics.mistswap.fi',\n}\n\nexport const EIP_1559_ACTIVATION_BLOCK: { [chainId in ChainId]?: number } = {}\n","import { BigNumber } from '@ethersproject/bignumber'\n\nexport function toAmount(token, shares: BigNumber): BigNumber {\n  return shares.mulDiv(token.bentoAmount, token.bentoShare)\n}\n\nexport function toShare(token, amount: BigNumber): BigNumber {\n  return amount.mulDiv(token.bentoShare, token.bentoAmount)\n}\n","// NOTE: Try not to add anything to thie file, it's almost entirely refactored out.\n\nimport { ChainId, ROUTER_ADDRESS } from '@mistswapdex/sdk'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\n\nimport { AddressZero } from '@ethersproject/constants'\nimport ArcherSwapRouterABI from '../constants/abis/archer-router.json'\nimport { Contract } from '@ethersproject/contracts'\nimport IUniswapV2Router02ABI from '../constants/abis/uniswap-v2-router-02.json'\nimport IUniswapV2Router02NoETHABI from '../constants/abis/uniswap-v2-router-02-no-eth.json'\nimport { isAddress } from '../functions/validate'\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function getRouterAddress(chainId?: ChainId) {\n  if (!chainId) {\n    throw Error(`Undefined 'chainId' parameter '${chainId}'.`)\n  }\n  return ROUTER_ADDRESS[chainId]\n}\n\n// account is optional\nexport function getRouterContract(chainId: number, library: Web3Provider, account?: string): Contract {\n  return getContract(\n    getRouterAddress(chainId),\n    IUniswapV2Router02ABI,\n    library,\n    account\n  )\n}\n\nexport function getArcherRouterContract(chainId: number, library: Web3Provider, account?: string): Contract {\n  return getContract('', ArcherSwapRouterABI, library, account)\n}\n","import { JSBI, Percent } from '@mistswapdex/sdk'\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n","import { decode, toB58String } from 'multihashes'\nimport { getCodec, rmPrefix } from 'multicodec'\n\nimport CID from 'cids'\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      } else {\n        return `ipns://${toB58String(cid.multihash)}`\n      }\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return ['https' + uri.substr(4), uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","export { basisPointsToPercent } from './basisPointsToPercent'\nexport { contenthashToUri } from './contenthashToUri'\nexport { uriToHttp } from './uriToHttp'\n","import { AddressZero } from '@ethersproject/constants'\nimport { ChainId, FLEXUSD_ADDRESS } from '@mistswapdex/sdk'\n\ntype Currency = { address: string; decimals: number }\n\n// Pricing currency\n// TODO: Check decimals and finish table\nexport const USD_CURRENCY: { [chainId in ChainId]?: Currency } = {\n  [ChainId.SMARTBCH]: {\n    address: FLEXUSD_ADDRESS[ChainId.SMARTBCH],\n    decimals: 18,\n  },\n}\n\nexport function getCurrency(chainId: ChainId): Currency {\n  return (\n    USD_CURRENCY[chainId] || {\n      address: AddressZero,\n      decimals: 18,\n    }\n  )\n}\n","import { ChainId, Currency } from '@mistswapdex/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency.isNative) return 'BCH'\n\n  if (currency.isToken) return currency.address\n  throw new Error('invalid currency')\n}\n\n// export function currencyId(\n//   currency: Currency,\n//   chainId = ChainId.MAINNET\n// ): string {\n//   if (currency === Currency.getNativeCurrency(chainId))\n//     return Currency.getNativeCurrencySymbol(chainId);\n//   if (currency instanceof Token) return currency.address;\n//   throw new Error(\"invalid currency\");\n// }\n","import { Currency, CurrencyAmount, JSBI } from '@mistswapdex/sdk'\n\nconst MIN_NATIVE_CURRENCY_FOR_GAS: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency.isNative) {\n    if (JSBI.greaterThan(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)) {\n      return CurrencyAmount.fromRawAmount(\n        currencyAmount.currency,\n        JSBI.subtract(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)\n      )\n    } else {\n      return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.BigInt(0))\n    }\n  }\n  return currencyAmount\n}\n","export * from './currencyId'\nexport * from './getCurrency'\nexport * from './wrappedCurrency'\nexport * from './maxAmountSpend'\n","import { ChainId, Currency, NATIVE, WNATIVE } from '@mistswapdex/sdk'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n\n  // if (formattedChainId && currency.equals(WBCH_EXTENDED[formattedChainId]))\n  //   return ExtendedEther.onChain(currency.chainId)\n\n  if (currency.chainId in ChainId && currency.equals(WNATIVE[currency.chainId])) return NATIVE[currency.chainId]\n\n  return currency\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from '@ethersproject/hash'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n\nconst ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n","// CONVENTION formatFoo -> string\n\nimport { Currency, CurrencyAmount, Fraction, JSBI, Price } from '@mistswapdex/sdk'\n\nimport { BigNumberish } from '@ethersproject/bignumber'\nimport { formatUnits } from '@ethersproject/units'\nimport Numeral from 'numeral'\nimport { getAddress } from '@ethersproject/address'\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const formatK = (value: string) => {\n  return Numeral(value).format('0.[00]a')\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  try {\n    const parsed = getAddress(address)\n    return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n  } catch (error) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n}\n\n// shorten string to its maximum length using three dots\nexport function shortenString(string: string, length: number): string {\n  if (!string) return ''\n  if (length < 5) return string\n  if (string.length <= length) return string\n  return string.slice(0, 4) + '...' + string.slice(string.length - length + 5, string.length)\n}\n\n// using a currency library here in case we want to add more in future\nconst priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n})\n\nexport function formatPercent(percentString: any) {\n  const percent = parseFloat(percentString)\n  if (!percent || percent === Infinity || percent === 0) {\n    return '0%'\n  }\n  if (percent < 0.0001 && percent > 0) {\n    return '< 0.0001%'\n  }\n  if (percent < 0 && percent > -0.0001) {\n    return '< 0.0001%'\n  }\n  const fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  if (Number(fixedPercent) > 0) {\n    if (Number(fixedPercent) > 100) {\n      return `${percent?.toFixed(0).toLocaleString()}%`\n    } else {\n      return `${fixedPercent}%`\n    }\n  } else {\n    return `${fixedPercent}%`\n  }\n}\n\nexport const formatNumber = (number: any, usd = false, scale = true, decimals = 0) => {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0.00' : '0'\n  }\n  const num = parseFloat(number)\n\n  if (num > 500000000 && scale) {\n    return (usd ? '$' : '') + formatK(num.toFixed(decimals))\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0.00'\n    }\n    return '0'\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000 || num < -1000) {\n    return (\n      (num > 1000 ? '' : '-') +\n      (usd ? '$' : '') +\n      Number(parseFloat(String(Math.abs(num))).toFixed(decimals)).toLocaleString()\n    )\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return '$' + Number(parseFloat(String(num)).toFixed(4))\n    } else {\n      const usdString = priceFormatter.format(num)\n      return '$' + usdString.slice(1, usdString.length)\n    }\n  }\n\n  return parseFloat(String(num)).toPrecision(4)\n}\n\nexport function formatNumberScale(number: any, usd = false) {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0.00' : '0'\n  }\n  const num = parseFloat(number)\n  const wholeNumberLength = String(Math.floor(num)).length\n\n  if (wholeNumberLength >= 13) return (usd ? '$' : '') + (num / Math.pow(10, 12)).toFixed(1) + 'T'\n  if (wholeNumberLength >= 10) return (usd ? '$' : '') + (num / Math.pow(10, 9)).toFixed(1) + 'B'\n  if (wholeNumberLength >= 7) return (usd ? '$' : '') + (num / Math.pow(10, 6)).toFixed(1) + 'M'\n  if (wholeNumberLength >= 4) return (usd ? '$' : '') + (num / Math.pow(10, 3)).toFixed(1) + 'K'\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  return (usd ? '$' : '') + num.toFixed(2)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport const formatBalance = (value: BigNumberish, decimals = 18, maxFraction = 0) => {\n  const formatted = formatUnits(value, decimals)\n  if (maxFraction > 0) {\n    const split = formatted.split('.')\n    if (split.length > 1) {\n      return split[0] + '.' + split[1].substr(0, maxFraction)\n    }\n  }\n  return formatted\n}\n\nexport function formatCurrencyAmount(amount: CurrencyAmount<Currency> | undefined, sigFigs: number) {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return '<0.00001'\n  }\n\n  return amount.toSignificant(sigFigs)\n}\n\nexport function formatPrice(price: Price<Currency, Currency> | undefined, sigFigs: number) {\n  if (!price) {\n    return '-'\n  }\n\n  if (parseFloat(price.toFixed(sigFigs)) < 0.0001) {\n    return '<0.0001'\n  }\n\n  return price.toSignificant(sigFigs)\n}\n\nexport function formatDateAgo(date: Date) {\n  const currentDate = new Date()\n  const secondsAgo = Math.floor((currentDate.getTime() - date.getTime()) / 1000)\n\n  if (secondsAgo < 60) return `${secondsAgo} Second${secondsAgo === 1 ? '' : 's'} Ago`\n  if (secondsAgo < 3600) return `${Math.floor(secondsAgo / 60)} Minute${secondsAgo / 120 >= 1 ? 's' : ''} Ago`\n  if (secondsAgo < 86400) return `${Math.floor(secondsAgo / 3600)} Hour${secondsAgo / 7200 >= 1 ? 's' : ''} Ago`\n  if (secondsAgo < 2592000) return `${Math.floor(secondsAgo / 86400)} Day${secondsAgo / 172800 >= 1 ? 's' : ''} Ago`\n  if (secondsAgo < 31536000)\n    return `${Math.floor(secondsAgo / 2592000)} Month${secondsAgo / 5184000 >= 1 ? 's' : ''} Ago`\n\n  return `${Math.floor(secondsAgo / 31536000)} Year${secondsAgo / 63072000 >= 1 ? 's' : ''} Ago`\n}\n","export * from './array'\nexport * from './convert'\nexport * from './currency'\nexport * from './bentobox'\nexport * from './block'\nexport * from './ens'\nexport * from './contract'\nexport * from './format'\nexport * from './kashi'\nexport * from './list'\nexport * from './math'\nexport * from './parse'\nexport * from './prices'\nexport * from './rebase'\nexport * from './retry'\nexport * from './styling'\nexport * from './trade'\nexport * from './validate'\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport {\n  FACTOR_PRECISION,\n  FULL_UTILIZATION_MINUS_MAX,\n  INTEREST_ELASTICITY,\n  MAXIMUM_INTEREST_PER_YEAR,\n  MAXIMUM_TARGET_UTILIZATION,\n  MINIMUM_INTEREST_PER_YEAR,\n  MINIMUM_TARGET_UTILIZATION,\n  PROTOCOL_FEE,\n  PROTOCOL_FEE_DIVISOR,\n  STARTING_INTEREST_PER_YEAR,\n} from '@mistswapdex/sdk'\nimport { ZERO, e10 } from './math'\n\nimport { getCurrency } from './currency/getCurrency'\n\nexport function accrue(pair: any, amount: BigNumber, includePrincipal = false): BigNumber {\n  return amount\n    .mul(pair.accrueInfo.interestPerSecond)\n    .mul(pair.elapsedSeconds)\n    .div(e10(18))\n    .add(includePrincipal ? amount : ZERO)\n}\n\nexport function accrueTotalAssetWithFee(pair: any): {\n  elastic: BigNumber\n  base: BigNumber\n} {\n  const extraAmount = pair.totalBorrow.elastic\n    .mul(pair.accrueInfo.interestPerSecond)\n    .mul(pair.elapsedSeconds.add('3600')) // Project an hour into the future\n    .div(e10(18))\n  const feeAmount = extraAmount.mul(PROTOCOL_FEE).div(PROTOCOL_FEE_DIVISOR) // % of interest paid goes to fee\n  const feeFraction = feeAmount.mulDiv(pair.totalAsset.base, pair.currentAllAssets.value)\n  return {\n    elastic: pair.totalAsset.elastic,\n    base: pair.totalAsset.base.add(feeFraction),\n  }\n}\n\nexport function interestAccrue(pair: any, interest: BigNumber): BigNumber {\n  if (pair.totalBorrow.base.eq(0)) {\n    return STARTING_INTEREST_PER_YEAR\n  }\n  if (pair.elapsedSeconds.lte(0)) {\n    return interest\n  }\n\n  let currentInterest = interest\n  if (pair.utilization.lt(MINIMUM_TARGET_UTILIZATION)) {\n    const underFactor = MINIMUM_TARGET_UTILIZATION.sub(pair.utilization).mulDiv(\n      FACTOR_PRECISION,\n      MINIMUM_TARGET_UTILIZATION\n    )\n    const scale = INTEREST_ELASTICITY.add(underFactor.mul(underFactor).mul(pair.elapsedSeconds))\n    currentInterest = currentInterest.mul(INTEREST_ELASTICITY).div(scale)\n\n    if (currentInterest.lt(MINIMUM_INTEREST_PER_YEAR)) {\n      currentInterest = MINIMUM_INTEREST_PER_YEAR // 0.25% APR minimum\n    }\n  } else if (pair.utilization.gt(MAXIMUM_TARGET_UTILIZATION)) {\n    const overFactor = pair.utilization\n      .sub(MAXIMUM_TARGET_UTILIZATION)\n      .mul(FACTOR_PRECISION.div(FULL_UTILIZATION_MINUS_MAX))\n    const scale = INTEREST_ELASTICITY.add(overFactor.mul(overFactor).mul(pair.elapsedSeconds))\n    currentInterest = currentInterest.mul(scale).div(INTEREST_ELASTICITY)\n    if (currentInterest.gt(MAXIMUM_INTEREST_PER_YEAR)) {\n      currentInterest = MAXIMUM_INTEREST_PER_YEAR // 1000% APR maximum\n    }\n  }\n  return currentInterest\n}\n\nexport function getUSDValue(amount: BigNumberish, token: any): BigNumber {\n  return BigNumber.from(amount)\n    .mul(token.usd)\n    .div(e10(token?.decimals ? token.decimals : token.tokenInfo.decimals))\n}\n\nexport function getUSDString(amount: BigNumberish, token: any): string {\n  return BigNumber.from(amount)\n    .mul(token.usd)\n    .div(e10(token?.decimals ? token.decimals : token.tokenInfo.decimals))\n    .toFixed(getCurrency(token?.chainId ? token.chainId : token.tokenInfo.chainId).decimals)\n}\n\nexport function easyAmount(\n  amount: BigNumber,\n  token: any\n): { value: BigNumber; string: string; usdValue: BigNumber; usd: string } {\n  return {\n    value: amount,\n    string: amount.toFixed(token?.decimals ? token.decimals : token.tokenInfo.decimals),\n    usdValue: getUSDValue(amount, token),\n    usd: getUSDString(amount, token),\n  }\n}\n\nexport function takeFee(amount: BigNumber): BigNumber {\n  return amount.mul(BigNumber.from(9)).div(BigNumber.from(10))\n}\n\nexport function addBorrowFee(amount: BigNumber): BigNumber {\n  return amount.mul(BigNumber.from(10005)).div(BigNumber.from(10000))\n}\n\nexport function getFraction({\n  totalAssetBase,\n  totalAssetElastic,\n  totalBorrowElastic,\n  token0: { totalSupplyBase, totalSupplyElastic },\n}) {\n  return totalAssetBase / (Number(totalAssetElastic) + (totalBorrowElastic * totalSupplyBase) / totalSupplyElastic)\n}\n","import { contenthashToUri, uriToHttp } from './convert'\n\nimport Ajv from 'ajv'\nimport { DEFAULT_LIST_OF_LISTS } from '../config/token-lists'\nimport { TokenList } from '@uniswap/token-lists'\nimport { Version } from '@uniswap/token-lists'\nimport { parseENSAddress } from './ens'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.debug(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.debug('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.debug('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n\n// use ordering of default list of lists to assign priority\nexport function sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  else if (first > second) return -1\n  return 0\n}\n\nexport function listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\n\nexport const ZERO = BigNumber.from('0')\n\nexport function e10(exponent: BigNumber | number | string): BigNumber {\n  return BigNumber.from('10').pow(BigNumber.from(exponent))\n}\n\nexport function minimum(...values: BigNumberish[]): BigNumber {\n  let lowest = BigNumber.from(values[0])\n  for (let i = 1; i < values.length; i++) {\n    const value = BigNumber.from(values[i])\n    if (value.lt(lowest)) {\n      lowest = value\n    }\n  }\n  return lowest\n}\n\nexport function maximum(...values: BigNumberish[]): BigNumber {\n  let highest = BigNumber.from(values[0])\n  for (let i = 1; i < values.length; i++) {\n    const value = BigNumber.from(values[i])\n    if (value.gt(highest)) {\n      highest = value\n    }\n  }\n  return highest\n}\n","import { Currency, CurrencyAmount, JSBI } from '@mistswapdex/sdk'\n\nimport { parseUnits } from '@ethersproject/units'\n\nexport function parseBalance(value: string, decimals = 18) {\n  return parseUnits(value || '0', decimals)\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount<T extends Currency>(value?: string, currency?: T): CurrencyAmount<T> | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n","import {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n} from '../constants'\nimport { ChainId, Currency, CurrencyAmount, Fraction, JSBI, Percent, Trade, TradeType } from '@mistswapdex/sdk'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './convert'\n\nconst THIRTY_BIPS_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(THIRTY_BIPS_FEE)\n\nconst TWENTY_FIVE_BIPS_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst FIVE_BIPS_FEE = new Percent(JSBI.BigInt(5), JSBI.BigInt(10000))\n\nexport function formatExecutionPrice(\n  trade: Trade<Currency, Currency, TradeType>,\n  inverted?: boolean,\n  chainId?: ChainId\n): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n// computes realized lp fee as a percent\nexport function computeRealizedLPFeePercent(trade: Trade<Currency, Currency, TradeType>): Percent {\n  let percent: Percent\n  if (trade instanceof Trade) {\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n    percent = ONE_HUNDRED_PERCENT.subtract(\n      trade.route.pairs.reduce<Percent>(\n        (currentFee: Percent): Percent => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n        ONE_HUNDRED_PERCENT\n      )\n    )\n  }\n\n  return new Percent(percent.numerator, percent.denominator)\n}\n\n// computes price breakdown for the trade\nexport function computeRealizedLPFeeAmount(\n  trade?: Trade<Currency, Currency, TradeType> | null\n): CurrencyAmount<Currency> | undefined {\n  if (trade) {\n    const realizedLPFee = computeRealizedLPFeePercent(trade)\n\n    // the amount of the input that accrues to LPs\n    return CurrencyAmount.fromRawAmount(trade.inputAmount.currency, trade.inputAmount.multiply(realizedLPFee).quotient)\n  }\n\n  return undefined\n}\n\nconst IMPACT_TIERS = [\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  ALLOWED_PRICE_IMPACT_LOW,\n]\n\ntype WarningSeverity = 0 | 1 | 2 | 3 | 4\n\nexport function warningSeverity(priceImpact: Percent | undefined): WarningSeverity {\n  if (!priceImpact) return 4\n  let impact: WarningSeverity = IMPACT_TIERS.length as WarningSeverity\n  for (const impactLevel of IMPACT_TIERS) {\n    if (impactLevel.lessThan(priceImpact)) return impact\n    impact--\n  }\n  return 0\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\ninterface Rebase {\n  base: BigNumber\n  elastic: BigNumber\n}\n\nexport function rebase(value: BigNumber, from: BigNumber, to: BigNumber): BigNumber {\n  return from ? value.mul(to).div(from) : BigNumber.from(0)\n}\n\nexport function toElastic(total: Rebase, base: BigNumber, roundUp: boolean): BigNumber {\n  let elastic: BigNumber\n  if (total.base.eq(BigNumber.from(0))) {\n    elastic = base\n  } else {\n    elastic = base.mul(total.elastic).div(total.base)\n    if (roundUp && elastic.mul(total.base).div(total.elastic).lt(base)) {\n      elastic = elastic.add(1)\n    }\n  }\n\n  return elastic\n}\n","function wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  public isCancelledError: true = true\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {\n  public isRetryableError: true = true\n}\n\nexport interface RetryOptions {\n  n: number\n  minWait: number\n  maxWait: number\n}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: RetryOptions\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !error.isRetryableError) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n","export function classNames(...classes: string[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n","import {\n  Currency,\n  CurrencyAmount,\n  Fraction,\n  JSBI,\n  Percent,\n  Token,\n  Trade,\n  TradeType,\n  currencyEquals,\n} from '@mistswapdex/sdk'\nimport { ONE_HUNDRED_PERCENT, ZERO_PERCENT } from '../constants'\n\nimport { BigNumber } from '@ethersproject/bignumber'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade<Currency, Currency, TradeType> | undefined | null,\n  tradeB: Trade<Currency, Currency, TradeType> | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeB.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Comparing incomparable trades')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  } else {\n    return tradeA.executionPrice.asFraction\n      .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n      .lessThan(tradeB.executionPrice)\n  }\n}\n\n// add 20%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000 + 2000)).div(BigNumber.from(10000))\n}\n\n// hardcoded for smartbch\nexport function getGasPrice(): BigNumber {\n  return BigNumber.from(1050000000)\n}\n\nconst ONE = new Fraction(1, 1)\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n\nexport function computeFiatValuePriceImpact(\n  fiatValueInput: CurrencyAmount<Token> | undefined | null,\n  fiatValueOutput: CurrencyAmount<Token> | undefined | null\n): Percent | undefined {\n  if (!fiatValueOutput || !fiatValueInput) return undefined\n  if (!fiatValueInput.currency.equals(fiatValueOutput.currency)) return undefined\n  if (JSBI.equal(fiatValueInput.quotient, JSBI.BigInt(0))) return undefined\n  const pct = ONE_HUNDRED_PERCENT.subtract(fiatValueOutput.divide(fiatValueInput))\n  return new Percent(pct.numerator, pct.denominator)\n}\n","// CONVENTION isFoo -> boolean\n\nimport { ChainId, Currency, Token } from '@mistswapdex/sdk'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TokenAddressMap } from '../state/lists/hooks'\nimport { getAddress } from '@ethersproject/address'\n\n/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport function isZero(hexNumberString: string): boolean {\n  return /^0x0*$/.test(hexNumberString)\n}\n\nexport const isEmptyValue = (text: string) =>\n  BigNumber.isBigNumber(text)\n    ? BigNumber.from(text).isZero()\n    : text === '' || text.replace(/0/g, '').replace(/\\./, '') === ''\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function isTokenOnList(tokenAddressMap: TokenAddressMap, token?: Token): boolean {\n  return Boolean(token?.isToken && tokenAddressMap[token.chainId]?.[token.address])\n}\n"],"names":["BA_LIST","UNSUPPORTED_LIST_URLS","ZHESTO_LIST","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","JSBI","Percent","POOL_DENY","AVERAGE_BLOCK_TIME_IN_SECS","MERKLE_ROOT","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","ANALYTICS_URL","EIP_1559_ACTIVATION_BLOCK","toAmount","token","shares","mulDiv","bentoAmount","bentoShare","toShare","amount","ROUTER_ADDRESS","AddressZero","ArcherSwapRouterABI","Contract","IUniswapV2Router02ABI","isAddress","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","address","ABI","Error","getRouterAddress","chainId","getRouterContract","getArcherRouterContract","basisPointsToPercent","num","decode","toB58String","getCodec","rmPrefix","CID","hexToUint8Array","hex","startsWith","substr","length","arr","Uint8Array","i","parseInt","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","codec","data","cid","multihash","name","digest","trim","uriToHttp","uri","protocol","split","toLowerCase","hash","match","ChainId","FLEXUSD_ADDRESS","USD_CURRENCY","SMARTBCH","decimals","getCurrency","currencyId","currency","isNative","isToken","CurrencyAmount","MIN_NATIVE_CURRENCY_FOR_GAS","maxAmountSpend","currencyAmount","undefined","greaterThan","quotient","fromRawAmount","subtract","NATIVE","WNATIVE","unwrappedToken","equals","namehash","REGISTRAR_ABI","constant","inputs","type","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","provider","resolveENSContentHash","ensName","ensRegistrarContract","resolver","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","Fraction","formatUnits","Numeral","getAddress","capitalize","s","charAt","toUpperCase","slice","formatK","value","format","shortenAddress","chars","parsed","substring","error","shortenString","string","priceFormatter","Intl","NumberFormat","style","minimumFractionDigits","formatPercent","percentString","percent","parseFloat","Infinity","fixedPercent","toFixed","Number","toLocaleString","formatNumber","number","usd","scale","isNaN","String","Math","abs","usdString","toPrecision","formatNumberScale","wholeNumberLength","floor","pow","escapeRegExp","replace","formatBalance","maxFraction","formatted","formatCurrencyAmount","sigFigs","equal","divide","decimalScale","lessThan","toSignificant","formatPrice","price","formatDateAgo","date","currentDate","Date","secondsAgo","getTime","BigNumber","FACTOR_PRECISION","FULL_UTILIZATION_MINUS_MAX","INTEREST_ELASTICITY","MAXIMUM_INTEREST_PER_YEAR","MAXIMUM_TARGET_UTILIZATION","MINIMUM_INTEREST_PER_YEAR","MINIMUM_TARGET_UTILIZATION","PROTOCOL_FEE","PROTOCOL_FEE_DIVISOR","STARTING_INTEREST_PER_YEAR","ZERO","e10","accrue","pair","includePrincipal","mul","accrueInfo","interestPerSecond","elapsedSeconds","div","add","accrueTotalAssetWithFee","extraAmount","totalBorrow","elastic","feeAmount","feeFraction","totalAsset","base","currentAllAssets","interestAccrue","interest","eq","lte","currentInterest","utilization","lt","underFactor","sub","gt","overFactor","getUSDValue","from","tokenInfo","getUSDString","easyAmount","usdValue","takeFee","addBorrowFee","getFraction","totalAssetBase","totalAssetElastic","totalBorrowElastic","token0","totalSupplyBase","totalSupplyElastic","Ajv","schema","tokenListValidator","allErrors","compile","getTokenList","listUrl","parsedENS","urls","contentHashUri","console","debug","translatedUri","url","isLast","response","fetch","ok","json","validationErrors","errors","reduce","memo","dataPath","message","sortByListPriority","urlA","urlB","first","includes","indexOf","MAX_SAFE_INTEGER","second","listVersionLabel","version","major","minor","patch","exponent","minimum","values","lowest","maximum","highest","parseUnits","parseBalance","tryParseAmount","typedValueParsed","toString","Trade","THIRTY_BIPS_FEE","INPUT_FRACTION_AFTER_FEE","TWENTY_FIVE_BIPS_FEE","FIVE_BIPS_FEE","formatExecutionPrice","trade","inverted","executionPrice","invert","inputAmount","symbol","outputAmount","computeRealizedLPFeePercent","route","pairs","currentFee","multiply","numerator","denominator","computeRealizedLPFeeAmount","realizedLPFee","IMPACT_TIERS","warningSeverity","priceImpact","impact","impactLevel","rebase","to","toElastic","total","roundUp","wait","ms","Promise","resolve","setTimeout","waitRandom","min","max","round","random","CancelledError","constructor","RetryableError","retry","fn","n","minWait","maxWait","completed","rejectCancelled","promise","reject","result","isRetryableError","cancel","classNames","classes","filter","Boolean","join","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","asFraction","calculateGasMargin","getGasPrice","ONE","calculateSlippageAmount","slippage","computeFiatValuePriceImpact","fiatValueInput","fiatValueOutput","pct","isZero","hexNumberString","test","isEmptyValue","text","isBigNumber","isTokenOnList","tokenAddressMap"],"sourceRoot":""}