{"version":3,"file":"4779.js","mappings":"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","sources":["webpack://mistswap-interface/./src/functions/filtering.ts","webpack://mistswap-interface/./src/hooks/Tokens.ts","webpack://mistswap-interface/./src/state/lists/hooks.ts","webpack://mistswap-interface/./src/state/lists/wrappedTokenInfo.ts","webpack://mistswap-interface/./src/state/user/actions.ts","webpack://mistswap-interface/./src/state/user/hooks.tsx"],"sourcesContent":["import { Token } from '@mistswapdex/sdk'\nimport { TokenInfo } from '@uniswap/token-lists'\nimport { isAddress } from './validate'\nimport { useMemo } from 'react'\n\nconst alwaysTrue = () => true\n\n/**\n * Create a filter function to apply to a token for whether it matches a particular search query\n * @param search the search query to apply to the token\n */\nexport function createTokenFilterFunction<T extends Token | TokenInfo>(search: string): (tokens: T) => boolean {\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    const lower = searchingAddress.toLowerCase()\n    return (t: T) => ('isToken' in t ? searchingAddress === t.address : lower === t.address.toLowerCase())\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) return alwaysTrue\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return ({ name, symbol }: T): boolean => Boolean((symbol && matchesSearch(symbol)) || (name && matchesSearch(name)))\n}\n\nexport function filterTokens<T extends Token | TokenInfo>(tokens: T[], search: string): T[] {\n  return tokens.filter(createTokenFilterFunction(search))\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      } else if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      } else {\n        return rest.push(token)\n      }\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ChainId, Currency, NATIVE, Token, WNATIVE, WNATIVE_ADDRESS, currencyEquals } from '@mistswapdex/sdk'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { TokenAddressMap, useAllLists, useInactiveListUrls, useUnsupportedTokenList } from './../state/lists/hooks'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\nimport { WrappedTokenInfo } from './../state/lists/wrappedTokenInfo'\nimport { arrayify } from '@ethersproject/bytes'\nimport { createTokenFilterFunction } from '../functions/filtering'\nimport { isAddress } from '../functions/validate'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useCombinedActiveList } from '../state/lists/hooks'\nimport { useMemo } from 'react'\nimport { useUserAddedTokens } from '../state/user/hooks'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    if (typeof tokenMap[chainId] === 'undefined') {\n      return {};\n    }\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{\n      [address: string]: Token\n    }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap, token) => {\n              tokenMap[token.address] = token\n              return tokenMap\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls }\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, false)\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useSearchInactiveTokenLists(search: string | undefined, minResults = 10): WrappedTokenInfo[] {\n  const lists = useAllLists()\n  const inactiveUrls = useInactiveListUrls()\n  const { chainId } = useActiveWeb3React()\n  const activeTokens = useAllTokens()\n  return useMemo(() => {\n    if (!search || search.trim().length === 0) return []\n    const tokenFilter = createTokenFilterFunction(search)\n    const result: WrappedTokenInfo[] = []\n    const addressSet: { [address: string]: true } = {}\n    for (const url of inactiveUrls) {\n      const list = lists[url].current\n      if (!list) continue\n      for (const tokenInfo of list.tokens) {\n        if (tokenInfo.chainId === chainId && tokenFilter(tokenInfo)) {\n          const wrapped = new WrappedTokenInfo(tokenInfo, list)\n          if (!(wrapped.address in activeTokens) && !addressSet[wrapped.address]) {\n            addressSet[wrapped.address] = true\n            result.push(wrapped)\n            if (result.length >= minResults) return result\n          }\n        }\n      }\n    }\n    return result\n  }, [activeTokens, chainId, inactiveUrls, lists, minResults, search])\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currency.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  const useNative = currencyId?.toUpperCase() === 'BCH'\n\n  if (useNative) {\n    currencyId = WNATIVE_ADDRESS[chainId]\n  }\n\n  const token = useToken(useNative ? undefined : currencyId)\n\n  // const extendedEther = useMemo(() => (chainId ? ExtendedEther.onChain(chainId) : undefined), [chainId])\n  // const weth = chainId ? WBCH_EXTENDED[chainId] : undefined\n\n  const native = useMemo(() => (chainId ? NATIVE[chainId] : undefined), [chainId])\n  if (useNative) return native;\n\n  const wnative = chainId ? WNATIVE[chainId] : undefined\n  if (wnative?.address?.toLowerCase() === currencyId?.toLowerCase()) return wnative\n\n  return token\n}\n","import { AppState } from '..'\nimport { ChainId } from '@mistswapdex/sdk'\nimport DEFAULT_TOKEN_LIST from '@mistswapdex/default-token-list'\nimport { TokenList } from '@uniswap/token-lists'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/token-lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../constants/token-lists/mistswap-v2-unsupported.tokenlist.json'\nimport { WrappedTokenInfo } from './wrappedTokenInfo'\nimport { sortByListPriority } from '../../functions/list'\nimport { useAppSelector } from '../hooks'\nimport { useMemo } from 'react'\n\nexport type TokenAddressMap = Readonly<{\n  [chainId: number]: Readonly<{\n    [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\n  }>\n}>\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>((tokenMap, tokenInfo) => {\n    const token = new WrappedTokenInfo(tokenInfo, list)\n    if (tokenMap[token.chainId]?.[token.address] !== undefined) {\n      console.error(new Error(`Duplicate token! ${token.address}`))\n      return tokenMap\n    }\n    return {\n      ...tokenMap,\n      [token.chainId]: {\n        ...tokenMap[token.chainId],\n        [token.address]: {\n          token,\n          list,\n        },\n      },\n    }\n  }, {})\n  listCache?.set(list, map)\n  return map\n}\n\nconst TRANSFORMED_DEFAULT_TOKEN_LIST = listToTokenMap(DEFAULT_TOKEN_LIST)\n\nexport function useAllLists(): AppState['lists']['byUrl'] {\n  return useAppSelector((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.SMARTBCH]: { ...map1[ChainId.SMARTBCH], ...map2[ChainId.SMARTBCH] },\n    [ChainId.SMARTBCH_AMBER]: { ...map1[ChainId.SMARTBCH_AMBER], ...map2[ChainId.SMARTBCH_AMBER] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n  return useMemo(() => {\n    if (!urls) return {}\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            return combineMaps(allTokens, listToTokenMap(current))\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, {})\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useAppSelector((state) => state.lists.activeListUrls)?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  return combineMaps(activeTokens, TRANSFORMED_DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return useMemo(\n    () => combineMaps(localUnsupportedListMap, loadedUnsupportedListMap),\n    [localUnsupportedListMap, loadedUnsupportedListMap]\n  )\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Currency, Token } from '@mistswapdex/sdk'\nimport { Tags, TokenInfo } from '@uniswap/token-lists'\n\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { isAddress } from '../../functions/validate'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n/**\n * Token instances created from token info on a token list.\n */\nexport class WrappedTokenInfo implements Token {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n  public readonly list: TokenList\n\n  public readonly tokenInfo: TokenInfo\n\n  constructor(tokenInfo: TokenInfo, list: TokenList) {\n    this.tokenInfo = tokenInfo\n    this.list = list\n  }\n\n  private _checksummedAddress: string | null = null\n\n  public get address(): string {\n    if (this._checksummedAddress) return this._checksummedAddress\n    const checksummedAddress = isAddress(this.tokenInfo.address)\n    if (!checksummedAddress) throw new Error(`Invalid token address: ${this.tokenInfo.address}`)\n    return (this._checksummedAddress = checksummedAddress)\n  }\n\n  public get chainId(): number {\n    return this.tokenInfo.chainId\n  }\n\n  public get decimals(): number {\n    return this.tokenInfo.decimals\n  }\n\n  public get name(): string {\n    return this.tokenInfo.name\n  }\n\n  public get symbol(): string {\n    return this.tokenInfo.symbol\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n\n  private _tags: TagInfo[] | null = null\n  public get tags(): TagInfo[] {\n    if (this._tags !== null) return this._tags\n    if (!this.tokenInfo.tags) return (this._tags = [])\n    const listTags = this.list.tags\n    if (!listTags) return (this._tags = [])\n\n    return (this._tags = this.tokenInfo.tags.map((tagId) => {\n      return {\n        ...listTags[tagId],\n        id: tagId,\n      }\n    }))\n  }\n\n  equals(other: Currency): boolean {\n    return other.chainId === this.chainId && other.isToken && other.address.toLowerCase() === this.address.toLowerCase()\n  }\n\n  sortsBefore(other: Token): boolean {\n    if (this.equals(other)) throw new Error('Addresses should not be equal')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserFarmFilter = createAction<{ userFarmFilter: string }>('user/updateUserFarmFilter')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{\n  userSingleHopOnly: boolean\n}>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{\n  userSlippageTolerance: number | 'auto'\n}>('user/updateUserSlippageTolerance')\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{\n  serializedToken: SerializedToken\n}>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{\n  chainId: number\n  address: string\n}>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{\n  serializedPair: SerializedPair\n}>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{\n  chainId: number\n  tokenAAddress: string\n  tokenBAddress: string\n}>('user/removeSerializedPair')\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning')\nexport const updateUserArcherUseRelay = createAction<{\n  userArcherUseRelay: boolean\n}>('user/updateUserArcherUseRelay')\nexport const updateUserArcherGasPrice = createAction<{\n  userArcherGasPrice: string\n}>('user/updateUserArcherGasPrice')\nexport const updateUserArcherETHTip = createAction<{\n  userArcherETHTip: string\n}>('user/updateUserArcherETHTip')\nexport const updateUserArcherGasEstimate = createAction<{\n  userArcherGasEstimate: string\n}>('user/updateUserArcherGasEstimate')\nexport const updateUserArcherTipManualOverride = createAction<{\n  userArcherTipManualOverride: boolean\n}>('user/updateUserArcherTipManualOverride')\n","import { AppDispatch, AppState } from '..'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../config/routing'\nimport { ChainId, FACTORY_ADDRESS, JSBI, Pair, Percent, Token, computePairAddress } from '@mistswapdex/sdk'\nimport {\n  SerializedPair,\n  SerializedToken,\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  toggleURLWarning,\n  updateUserArcherETHTip,\n  updateUserArcherGasEstimate,\n  updateUserArcherGasPrice,\n  updateUserArcherTipManualOverride,\n  updateUserArcherUseRelay,\n  updateUserDarkMode,\n  updateUserFarmFilter,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from './actions'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { useCallback, useMemo } from 'react'\n\nimport flatMap from 'lodash/flatMap'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport { useAllTokens } from '../../hooks/Tokens'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useAppSelector(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function getFarmFilter(): string {\n  return useAppSelector((state) => state.user.userFarmFilter)\n}\n\nexport function useUpdateFarmFilter(): (filter: string) => void {\n  // const dispatch = useAppDispatch()\n  // dispatch(updateUserFarmFilter({ userFarmFilter: filter }))\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (filter: string) => {\n      dispatch(updateUserFarmFilter({ userFarmFilter: filter }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useIsExpertMode(): boolean {\n  return useAppSelector((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const singleHopOnly = useAppSelector((state) => state.user.userSingleHopOnly)\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch]\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useSetUserSlippageTolerance(): (slippageTolerance: Percent | 'auto') => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (userSlippageTolerance: Percent | 'auto') => {\n      let value: 'auto' | number\n      try {\n        value =\n          userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10_000).quotient)\n      } catch (error) {\n        value = 'auto'\n      }\n      dispatch(\n        updateUserSlippageTolerance({\n          userSlippageTolerance: value,\n        })\n      )\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\nexport function useUserSlippageTolerance(): Percent | 'auto' {\n  const userSlippageTolerance = useAppSelector((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  return useMemo(\n    () => (userSlippageTolerance === 'auto' ? 'auto' : new Percent(userSlippageTolerance, 10_000)),\n    [userSlippageTolerance]\n  )\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useAppSelector(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useAppSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs')\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal')\n  if (!FACTORY_ADDRESS[tokenA.chainId]) throw new Error('No V2 factory address on this chain')\n\n  return new Token(\n    tokenA.chainId,\n    computePairAddress({ factoryAddress: FACTORY_ADDRESS[tokenA.chainId], tokenA, tokenB }),\n    18,\n    'UNI-V2',\n    'Uniswap V2'\n  )\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport function useUserArcherUseRelay(): [boolean, (newUseRelay: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const useRelay = useSelector<AppState, AppState['user']['userArcherUseRelay']>(\n    (state) => state.user.userArcherUseRelay\n  )\n\n  const setUseRelay = useCallback(\n    (newUseRelay: boolean) => {\n      dispatch(updateUserArcherUseRelay({ userArcherUseRelay: newUseRelay }))\n    },\n    [dispatch]\n  )\n\n  return [useRelay, setUseRelay]\n}\n\nexport function useUserArcherGasPrice(): [string, (newGasPrice: string) => void] {\n  const dispatch = useAppDispatch()\n  const userGasPrice = useSelector<AppState, AppState['user']['userArcherGasPrice']>((state) => {\n    return state.user.userArcherGasPrice\n  })\n\n  const setUserGasPrice = useCallback(\n    (newGasPrice: string) => {\n      dispatch(updateUserArcherGasPrice({ userArcherGasPrice: newGasPrice }))\n    },\n    [dispatch]\n  )\n\n  return [userGasPrice, setUserGasPrice]\n}\n\nexport function useUserArcherETHTip(): [string, (newETHTip: string) => void] {\n  const dispatch = useAppDispatch()\n  const userETHTip = useSelector<AppState, AppState['user']['userArcherETHTip']>((state) => {\n    return state.user.userArcherETHTip\n  })\n\n  const setUserETHTip = useCallback(\n    (newETHTip: string) => {\n      dispatch(updateUserArcherETHTip({ userArcherETHTip: newETHTip }))\n    },\n    [dispatch]\n  )\n\n  return [userETHTip, setUserETHTip]\n}\n\nexport function useUserArcherGasEstimate(): [string, (newGasEstimate: string) => void] {\n  const dispatch = useAppDispatch()\n  const userGasEstimate = useSelector<AppState, AppState['user']['userArcherGasEstimate']>((state) => {\n    return state.user.userArcherGasEstimate\n  })\n\n  const setUserGasEstimate = useCallback(\n    (newGasEstimate: string) => {\n      dispatch(\n        updateUserArcherGasEstimate({\n          userArcherGasEstimate: newGasEstimate,\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  return [userGasEstimate, setUserGasEstimate]\n}\n\nexport function useUserArcherTipManualOverride(): [boolean, (newManualOverride: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const userTipManualOverride = useSelector<AppState, AppState['user']['userArcherTipManualOverride']>((state) => {\n    return state.user.userArcherTipManualOverride\n  })\n\n  const setUserTipManualOverride = useCallback(\n    (newManualOverride: boolean) => {\n      dispatch(\n        updateUserArcherTipManualOverride({\n          userArcherTipManualOverride: newManualOverride,\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  return [userTipManualOverride, setUserTipManualOverride]\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance: Percent): Percent {\n  const allowedSlippage = useUserSlippageTolerance()\n  return useMemo(\n    () => (allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage),\n    [allowedSlippage, defaultSlippageTolerance]\n  )\n}\n"],"names":["isAddress","useMemo","alwaysTrue","createTokenFilterFunction","search","searchingAddress","lower","toLowerCase","t","address","lowerSearchParts","split","filter","s","length","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","name","symbol","Boolean","filterTokens","tokens","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","rest","map","token","push","trim","NATIVE","Token","WNATIVE","WNATIVE_ADDRESS","NEVER_RELOAD","useSingleCallResult","useAllLists","useInactiveListUrls","useUnsupportedTokenList","useBytes32TokenContract","useTokenContract","WrappedTokenInfo","arrayify","parseBytes32String","useActiveWeb3React","useCombinedActiveList","useUserAddedTokens","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","useAllTokens","allTokens","useTokens","useUnsupportedTokens","unsupportedTokensMap","useSearchInactiveTokenLists","minResults","lists","inactiveUrls","activeTokens","tokenFilter","result","addressSet","url","list","current","tokenInfo","wrapped","useIsTokenActive","useIsUserAddedToken","currency","find","equals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","useToken","tokenAddress","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","decimals","loading","useCurrency","currencyId","useNative","toUpperCase","native","wnative","ChainId","DEFAULT_TOKEN_LIST","UNSUPPORTED_LIST_URLS","UNSUPPORTED_TOKEN_LIST","sortByListPriority","useAppSelector","listCache","WeakMap","listToTokenMap","get","console","error","Error","set","TRANSFORMED_DEFAULT_TOKEN_LIST","state","byUrl","combineMaps","map1","map2","SMARTBCH","SMARTBCH_AMBER","useCombinedTokenMapFromUrls","urls","slice","sort","currentUrl","useActiveListUrls","activeListUrls","includes","allActiveListUrls","localUnsupportedListMap","loadedUnsupportedListMap","useIsListActive","constructor","_checksummedAddress","checksummedAddress","logoURI","tags","_tags","listTags","tagId","id","other","isToken","sortsBefore","createAction","updateMatchesDarkMode","updateUserDarkMode","updateUserFarmFilter","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning","updateUserArcherUseRelay","updateUserArcherGasPrice","updateUserArcherETHTip","updateUserArcherGasEstimate","updateUserArcherTipManualOverride","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","FACTORY_ADDRESS","JSBI","Percent","computePairAddress","shallowEqual","useDispatch","useSelector","useAppDispatch","useCallback","flatMap","serializeToken","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","getFarmFilter","userFarmFilter","useUpdateFarmFilter","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useSetUserSlippageTolerance","userSlippageTolerance","value","toNumber","multiply","quotient","useUserSlippageTolerance","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","serializedTokensMap","values","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","toV2LiquidityToken","tokenA","tokenB","factoryAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","base","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","memo","sorted","key","useUserArcherUseRelay","useRelay","userArcherUseRelay","setUseRelay","newUseRelay","useUserArcherGasPrice","userGasPrice","userArcherGasPrice","setUserGasPrice","newGasPrice","useUserArcherETHTip","userETHTip","userArcherETHTip","setUserETHTip","newETHTip","useUserArcherGasEstimate","userGasEstimate","userArcherGasEstimate","setUserGasEstimate","newGasEstimate","useUserArcherTipManualOverride","userTipManualOverride","userArcherTipManualOverride","setUserTipManualOverride","newManualOverride","useUserSlippageToleranceWithDefault","defaultSlippageTolerance","allowedSlippage"],"sourceRoot":""}