{"version":3,"file":"5579.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;CAEA;;;;AACA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACzB,SAAOA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,GAAiBA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAjB,GAAgCD,GAAvC;AACD,CAFD;;AAIA,MAAME,gBAAgB,GAAG,CAAC;AAAEF,EAAAA,GAAF;AAAOG,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AACpD,QAAMC,MAAM,GAAG,CAAE,SAAQF,KAAM,EAAhB,CAAf;;AACA,MAAIC,OAAJ,EAAa;AACXC,IAAAA,MAAM,CAACC,IAAP,CAAa,WAAUF,OAAQ,EAA/B;AACD;;AACD,QAAMG,YAAY,GAAGF,MAAM,CAACG,IAAP,CAAY,GAAZ,CAArB;AACA,SAAQ,kBAAiBD,YAAa,IAAGR,SAAS,CAACC,GAAD,CAAM,EAAxD;AACD,CAPD;;AASA,MAAMS,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAW;AAC3B,cAAcD,CAAE,aAAYC,CAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBD,CAAE,aAAYC,CAAE;AACjC,wBAAwBD,CAAE,aAAYC,CAAE;AACxC,sDAAsDD,CAAE,SAAQA,CAAE;AAClE,OAZA;;AAcA,MAAME,QAAQ,GAAIC,GAAD,IAAU,QAAgCC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,QAAjB,CAA0B,QAA1B,CAAhC,GAAsEC,CAAjG;;AAEA,MAAME,KAAK,GAAG,QAQR;AAAA,MARS;AACbnB,IAAAA,GADa;AAEbG,IAAAA,KAAK,GAAGiB,SAFK;AAGbC,IAAAA,MAAM,GAAGD,SAHI;AAIbE,IAAAA,MAAM,GAAGF,SAJI;AAKbG,IAAAA,MAAM,GAAGH,SALI;AAMbI,IAAAA,KAAK,GAAGJ;AANK,GAQT;AAAA,MADDK,IACC;;AACJ,QAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACP,MAAD,CAAP,EAAiB,EAAjB,CAAR,IAAgC,EAAhC,IAAsCM,QAAQ,CAACC,MAAM,CAACzB,KAAD,CAAP,EAAgB,EAAhB,CAAR,IAA+B,EAArF;AACA,sBACE;AAAK,SAAK,EAAE;AAAEA,MAAAA,KAAF;AAASkB,MAAAA;AAAT,KAAZ;AAA+B,aAAS,EAAC,yBAAzC;AAAA,cACGK,OAAO,gBACN,mDAAC,+CAAD;AACE,YAAM,EAAE,MAAM1B,GADhB;AAEE,SAAG,EAAEA,GAFP;AAGE,WAAK,EAAEG,KAHT;AAIE,YAAM,EAAEkB,MAJV;AAKE,YAAM,EAAEC,MALV;AAME,iBAAW,EAAC,MANd;AAOE,iBAAW,EAAG,6BAA4BV,QAAQ,CAACH,OAAO,CAACN,KAAD,EAAQkB,MAAR,CAAR,CAAyB;AAP7E,OAQMI,IARN,EADM,gBAYN,mDAAC,+CAAD;AACE,YAAM,EAAE,MAAMzB,GADhB;AAEE,SAAG,EAAEA,GAFP;AAGE,WAAK,EAAEG,KAHT;AAIE,YAAM,EAAEkB,MAJV;AAKE,YAAM,EAAEC,MALV;AAME,iBAAW,EAAC;AANd,OAOMG,IAPN;AAbJ,IADF;AA0BD,CApCD;;AAsCA,iEAAeN,KAAf","sources":["webpack://mistswap-interface/./src/components/Image/index.tsx"],"sourcesContent":["import NextImage from 'next/image'\n\n// Cloudflare Loader\nconst normalize = (src) => {\n  return src[0] === '/' ? src.slice(1) : src\n}\n\nconst cloudFlareLoader = ({ src, width, quality }) => {\n  const params = [`width=${width}`]\n  if (quality) {\n    params.push(`quality=${quality}`)\n  }\n  const paramsString = params.join(',')\n  return `/cdn-cgi/image/${paramsString}/${normalize(src)}`\n}\n\nconst shimmer = (w, h) => `\n<svg width=\"${w}\" height=\"${h}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <defs>\n    <linearGradient id=\"g\">\n      <stop stop-color=\"#333\" offset=\"20%\" />\n      <stop stop-color=\"#222\" offset=\"50%\" />\n      <stop stop-color=\"#333\" offset=\"70%\" />\n    </linearGradient>\n  </defs>\n  <rect width=\"${w}\" height=\"${h}\" fill=\"#333\" />\n  <rect id=\"r\" width=\"${w}\" height=\"${h}\" fill=\"url(#g)\" />\n  <animate xlink:href=\"#r\" attributeName=\"x\" from=\"-${w}\" to=\"${w}\" dur=\"1s\" repeatCount=\"indefinite\"  />\n</svg>`\n\nconst toBase64 = (str) => (typeof window === 'undefined' ? Buffer.from(str).toString('base64') : window.btoa(str))\n\nconst Image = ({\n  src,\n  width = undefined,\n  height = undefined,\n  layout = undefined,\n  loader = undefined,\n  style = undefined,\n  ...rest\n}) => {\n  const useBlur = parseInt(String(height), 10) >= 40 && parseInt(String(width), 10) >= 40\n  return (\n    <div style={{ width, height }} className=\"overflow-hidden rounded\">\n      {useBlur ? (\n        <NextImage\n          loader={() => src}\n          src={src}\n          width={width}\n          height={height}\n          layout={layout}\n          placeholder=\"blur\"\n          blurDataURL={`data:image/svg+xml;base64,${toBase64(shimmer(width, height))}`}\n          {...rest}\n        />\n      ) : (\n        <NextImage\n          loader={() => src}\n          src={src}\n          width={width}\n          height={height}\n          layout={layout}\n          placeholder=\"empty\"\n          {...rest}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Image\n"],"names":["NextImage","normalize","src","slice","cloudFlareLoader","width","quality","params","push","paramsString","join","shimmer","w","h","toBase64","str","Buffer","from","toString","window","btoa","Image","undefined","height","layout","loader","style","rest","useBlur","parseInt","String"],"sourceRoot":""}