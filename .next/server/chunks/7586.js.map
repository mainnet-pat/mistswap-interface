{"version":3,"file":"7586.js","mappings":"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","sources":["webpack://mistswap-interface/./src/components/CloseIcon/index.tsx","webpack://mistswap-interface/./src/components/DoubleGlowShadow/index.tsx","webpack://mistswap-interface/./src/components/DoubleLogo/index.tsx","webpack://mistswap-interface/./src/components/Input/Address/index.tsx","webpack://mistswap-interface/./src/components/Input/Numeric/index.tsx","webpack://mistswap-interface/./src/components/Input/Percent/index.tsx","webpack://mistswap-interface/./src/components/Input/index.tsx","webpack://mistswap-interface/./src/components/ModalHeader/index.tsx","webpack://mistswap-interface/./src/components/Toggle/index.tsx","webpack://mistswap-interface/./src/components/TransactionSettings/index.tsx","webpack://mistswap-interface/./src/components/Settings/index.tsx","webpack://mistswap-interface/./src/components/Badge/index.tsx","webpack://mistswap-interface/./src/hooks/useLimitOrders.ts","webpack://mistswap-interface/./src/features/exchange-v1/limit-order/MyOrders.tsx","webpack://mistswap-interface/./src/features/trade/Header.tsx","webpack://mistswap-interface/./src/functions/explorer.ts","webpack://mistswap-interface/./src/hooks/useENS.ts","webpack://mistswap-interface/./src/hooks/useENSAddress.ts","webpack://mistswap-interface/./src/hooks/useCurrentBlockTimestamp.ts","webpack://mistswap-interface/./src/hooks/useTransactionDeadline.ts","webpack://mistswap-interface/./src/hooks/useAddTokenToMetaMask.ts","webpack://mistswap-interface/./src/modals/TransactionConfirmationModal/index.tsx"],"sourcesContent":["import { X } from 'react-feather'\n\nconst CloseIcon = (props) => <X className=\"cursor-pointer\" {...props} />\n\nexport default CloseIcon\n","import { isMobile } from 'react-device-detect'\nimport { FC } from 'react'\nimport { classNames } from '../../functions'\n\nconst DoubleGlowShadow: FC<{ className?: string }> = ({ children, className }) => {\n  if (isMobile) {\n    return <div className=\"shadow-swap\">{children}</div>\n  }\n\n  return (\n    <div className={classNames(className, 'relative w-full max-w-2xl')}>\n      <div className=\"absolute top-1/4 -left-10 bg-purple bottom-4 w-3/5 rounded-full z-0 filter blur-[150px]\" />\n      <div className=\"absolute bottom-1/4 -right-10 bg-purple top-4 w-3/5 rounded-full z-0  filter blur-[150px]\" />\n      <div className=\"relative filter drop-shadow\">{children}</div>\n    </div>\n  )\n}\n\nexport default DoubleGlowShadow\n","import { Currency } from '@mistswapdex/sdk'\nimport CurrencyLogo from '../CurrencyLogo'\nimport React from 'react'\nimport { classNames } from '../../functions'\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n  className?: string\n  logoClassName?: string\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 16,\n  className,\n  logoClassName,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <div className={classNames('flex items-center space-x-2', className)}>\n      <CurrencyLogo className={logoClassName} currency={currency0} size={size.toString() + 'px'} />\n      <CurrencyLogo className={logoClassName} currency={currency1} size={size.toString() + 'px'} />\n    </div>\n  )\n}\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\nimport useENS from '../../../hooks/useENS'\n\nconst inputRegex = RegExp(`^\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const AddressInput = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className = 'flex w-full h-full p-3 font-bold rounded overflow-ellipsis recipient-address-input bg-dark-900 placeholder-low-emphesis',\n    align,\n    fontSize = '24px',\n    ...rest\n  }: {\n    value: string\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const { address, loading } = useENS(value)\n\n    const enforcer = (nextUserInput: string) => {\n      onUserInput(nextUserInput)\n    }\n\n    return (\n      <>\n        <input\n          value={value}\n          onChange={(event) => {\n            enforcer(event.target.value.replace(/\\s+/g, ''))\n          }}\n          // universal input options\n          inputMode=\"text\"\n          title=\"Wallet Address or ENS name\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\"\n          placeholder=\"Wallet Address or ENS name\"\n          pattern=\"^(0x[a-fA-F0-9]{40})$\"\n          // text-specific options\n          type=\"text\"\n          className={classNames(\n            align === 'right' && 'text-right',\n            'font-medium bg-transparent whitespace-nowrap overflow-ellipsis flex-auto',\n            className\n          )}\n          style={{ fontSize }}\n          {...rest}\n        />\n      </>\n    )\n  }\n)\n\nAddressInput.displayName = 'AddressInput'\n\nexport default AddressInput\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nconst defaultClassName = 'w-0 p-0 text-2xl bg-transparent'\n\nexport const Input = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className = defaultClassName,\n    ...rest\n  }: {\n    value: string | number\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const enforcer = (nextUserInput: string) => {\n      if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n        onUserInput(nextUserInput)\n      }\n    }\n\n    return (\n      <input\n        {...rest}\n        value={value}\n        onChange={(event) => {\n          // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n          enforcer(event.target.value.replace(/,/g, '.'))\n        }}\n        // universal input options\n        inputMode=\"decimal\"\n        title=\"Token Amount\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        // text-specific options\n        type=\"text\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        placeholder={placeholder || '0.0'}\n        min={0}\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        className={classNames(\n          'relative font-bold outline-none border-none flex-auto overflow-hidden overflow-ellipsis placeholder-low-emphesis focus:placeholder-primary',\n          className\n        )}\n      />\n    )\n  }\n)\n\nInput.displayName = 'NumericalInput'\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\n\nconst inputRegex = RegExp(`^\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className,\n    align,\n    fontSize = '24px',\n    ...rest\n  }: {\n    value: string | number\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const enforcer = (nextUserInput: string) => {\n      if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n        if (Number(nextUserInput) <= 100) {\n          onUserInput(nextUserInput)\n        }\n      }\n    }\n\n    return (\n      <>\n        <input\n          value={value}\n          onChange={(event) => {\n            // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n            enforcer(event.target.value.replace(/,/g, '.').replace(/%/g, ''))\n          }}\n          // universal input options\n          inputMode=\"decimal\"\n          title=\"Token Amount\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          // text-specific options\n          type=\"text\"\n          pattern=\"^[0-9]*$\"\n          placeholder={placeholder || '100'}\n          maxLength={3}\n          className={classNames(\n            align === 'right' && 'text-right',\n            'relative font-medium bg-transparent whitespace-nowrap overflow-ellipsis flex-auto percent-translate',\n            className\n          )}\n          style={{ fontSize }}\n          {...rest}\n        />\n      </>\n    )\n  }\n)\n\nInput.displayName = 'PercentInput'\n\nexport default Input\n","import Address from './Address'\nimport Numeric from './Numeric'\nimport Percent from './Percent'\n\nconst Input = {\n  Address,\n  Percent,\n  Numeric,\n}\n\nexport default Input\n","import { ChevronLeftIcon, XIcon } from '@heroicons/react/outline'\n\nimport React, { FC } from 'react'\nimport Typography from '../Typography'\n\ninterface ModalHeaderProps {\n  title?: string\n  className?: string\n  onClose?: () => void\n  onBack?: () => void\n}\n\nconst ModalHeader: FC<ModalHeaderProps> = ({\n  title = undefined,\n  onClose = undefined,\n  className = '',\n  onBack = undefined,\n}) => {\n  return (\n    <div className={`flex items-center justify-between mb-4 ${className}`}>\n      {onBack && <ChevronLeftIcon onClick={onBack} width={24} height={24} className=\"cursor-pointer\" />}\n      {title && (\n        <Typography component=\"h2\" variant=\"h3\" className=\"font-bold\">\n          {title}\n        </Typography>\n      )}\n      <div\n        className=\"flex items-center justify-center w-6 h-6 cursor-pointer text-primary hover:text-high-emphesis\"\n        onClick={onClose}\n      >\n        <XIcon width={24} height={24} />\n      </div>\n    </div>\n  )\n}\n\nexport default ModalHeader\n","import React from 'react'\nimport { Switch } from '@headlessui/react'\nimport { classNames } from '../../functions'\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <Switch\n      checked={isActive}\n      onChange={toggle}\n      className={classNames(\n        isActive ? 'bg-blue' : 'bg-dark-800',\n        'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none'\n      )}\n    >\n      <span className=\"sr-only\">Use setting</span>\n      <span\n        className={classNames(\n          isActive ? 'translate-x-5' : 'translate-x-0',\n          'pointer-events-none relative inline-block h-5 w-5 rounded-full bg-dark-900 shadow transform ring-0 transition ease-in-out duration-200'\n        )}\n      >\n        <span\n          className={classNames(\n            isActive ? 'opacity-0 ease-out duration-100' : 'opacity-100 ease-in duration-200',\n            'absolute inset-0 h-full w-full flex items-center justify-center transition-opacity'\n          )}\n          aria-hidden=\"true\"\n        >\n          <svg className=\"w-3 h-3 text-low-emphesis\" fill=\"none\" viewBox=\"0 0 12 12\">\n            <path\n              d=\"M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </span>\n        <span\n          className={classNames(\n            isActive ? 'opacity-100 ease-in duration-200' : 'opacity-0 ease-out duration-100',\n            'absolute inset-0 h-full w-full flex items-center justify-center transition-opacity'\n          )}\n          aria-hidden=\"true\"\n        >\n          <svg className=\"w-3 h-3 text-high-emphesis\" fill=\"currentColor\" viewBox=\"0 0 12 12\">\n            <path d=\"M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z\" />\n          </svg>\n        </span>\n      </span>\n    </Switch>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { useSetUserSlippageTolerance, useUserSlippageTolerance, useUserTransactionTTL } from '../../state/user/hooks'\n\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { Percent } from '@mistswapdex/sdk'\nimport QuestionHelper from '../QuestionHelper'\nimport Typography from '../Typography'\nimport { classNames } from '../../functions'\nimport { t } from '@lingui/macro'\nimport { useLingui } from '@lingui/react'\nimport Button from '../Button'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface TransactionSettingsProps {\n  placeholderSlippage?: Percent // varies according to the context in which the settings dialog is placed\n}\n\nexport default function TransactionSettings({ placeholderSlippage }: TransactionSettingsProps) {\n  const { i18n } = useLingui()\n\n  const inputRef = useRef<HTMLInputElement>()\n\n  const userSlippageTolerance = useUserSlippageTolerance()\n  const setUserSlippageTolerance = useSetUserSlippageTolerance()\n\n  const [deadline, setDeadline] = useUserTransactionTTL()\n\n  const [slippageInput, setSlippageInput] = useState('')\n  const [slippageError, setSlippageError] = useState<SlippageError | false>(false)\n\n  const [deadlineInput, setDeadlineInput] = useState('')\n  const [deadlineError, setDeadlineError] = useState<DeadlineError | false>(false)\n\n  function parseSlippageInput(value: string) {\n    // populate what the user typed and clear the error\n    setSlippageInput(value)\n    setSlippageError(false)\n\n    if (value.length === 0) {\n      setUserSlippageTolerance('auto')\n    } else {\n      const parsed = Math.floor(Number.parseFloat(value) * 100)\n\n      if (!Number.isInteger(parsed) || parsed < 0 || parsed > 5000) {\n        setUserSlippageTolerance('auto')\n        if (value !== '.') {\n          setSlippageError(SlippageError.InvalidInput)\n        }\n      } else {\n        setUserSlippageTolerance(new Percent(parsed, 10_000))\n      }\n    }\n  }\n\n  const tooLow = userSlippageTolerance !== 'auto' && userSlippageTolerance.lessThan(new Percent(5, 10_000))\n  const tooHigh = userSlippageTolerance !== 'auto' && userSlippageTolerance.greaterThan(new Percent(1, 100))\n\n  function parseCustomDeadline(value: string) {\n    // populate what the user typed and clear the error\n    setDeadlineInput(value)\n    setDeadlineError(false)\n\n    if (value.length === 0) {\n      setDeadline(DEFAULT_DEADLINE_FROM_NOW)\n    } else {\n      try {\n        const parsed: number = Math.floor(Number.parseFloat(value) * 60)\n        if (!Number.isInteger(parsed) || parsed < 60 || parsed > 180 * 60) {\n          setDeadlineError(DeadlineError.InvalidInput)\n        } else {\n          setDeadline(parsed)\n        }\n      } catch (error) {\n        console.error(error)\n        setDeadlineError(DeadlineError.InvalidInput)\n      }\n    }\n  }\n\n  return (\n    <div className=\"grid gap-4\">\n      <div className=\"grid gap-2\">\n        <div className=\"flex items-center\">\n          <Typography variant=\"sm\" className=\"text-high-emphesis\">\n            {i18n._(t`Slippage tolerance`)}\n          </Typography>\n\n          <QuestionHelper\n            text={i18n._(\n              t`Your transaction will revert 23if the price changes unfavorably by more than this percentage.`\n            )}\n          />\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={classNames(\n              !!slippageError\n                ? 'border-red'\n                : tooLow || tooHigh\n                ? 'border-yellow'\n                : userSlippageTolerance !== 'auto'\n                ? 'border-blue'\n                : 'border-transparent',\n              'border p-2 rounded bg-dark-800'\n            )}\n            tabIndex={-1}\n          >\n            <div className=\"flex items-center justify-between gap-1\">\n              {tooLow || tooHigh ? (\n                <span className=\"hidden sm:inline text-yellow\" role=\"img\" aria-label=\"warning\">\n                  ⚠️\n                </span>\n              ) : null}\n              <input\n                className={classNames(slippageError ? 'text-red' : '', 'bg-transparent placeholder-low-emphesis')}\n                placeholder={placeholderSlippage?.toFixed(2)}\n                value={\n                  slippageInput.length > 0\n                    ? slippageInput\n                    : userSlippageTolerance === 'auto'\n                    ? ''\n                    : userSlippageTolerance.toFixed(2)\n                }\n                onChange={(e) => parseSlippageInput(e.target.value)}\n                onBlur={() => {\n                  setSlippageInput('')\n                  setSlippageError(false)\n                }}\n                color={slippageError ? 'red' : ''}\n              />\n              %\n            </div>\n          </div>\n          <Button\n            size=\"sm\"\n            color={userSlippageTolerance === 'auto' ? 'blue' : 'gray'}\n            variant={userSlippageTolerance === 'auto' ? 'filled' : 'outlined'}\n            onClick={() => {\n              parseSlippageInput('')\n            }}\n          >\n            {i18n._(t`Auto`)}\n          </Button>\n        </div>\n        {slippageError || tooLow || tooHigh ? (\n          <Typography\n            className={classNames(\n              slippageError === SlippageError.InvalidInput ? 'text-red' : 'text-yellow',\n              'font-medium flex items-center space-x-2'\n            )}\n            variant=\"sm\"\n          >\n            <div>\n              {slippageError === SlippageError.InvalidInput\n                ? i18n._(t`Enter a valid slippage percentage`)\n                : slippageError === SlippageError.RiskyLow\n                ? i18n._(t`Your transaction may fail`)\n                : i18n._(t`Your transaction may be frontrun`)}\n            </div>\n          </Typography>\n        ) : null}\n      </div>\n\n      <div className=\"grid gap-2\">\n        <div className=\"flex items-center\">\n          <Typography variant=\"sm\" className=\"text-high-emphesis\">\n            {i18n._(t`Transaction deadline`)}\n          </Typography>\n\n          <QuestionHelper text={i18n._(t`Your transaction will revert if it is pending for more than this long.`)} />\n        </div>\n        <div className=\"flex items-center\">\n          <div\n            className=\"p-2 rounded bg-dark-800 min-w-[82px] max-w-[102px]\"\n            style={{ maxWidth: '40px', marginRight: '8px' }}\n            tabIndex={-1}\n          >\n            <input\n              className={classNames(deadlineError ? 'text-red' : '', 'bg-transparent placeholder-low-emphesis')}\n              placeholder={(DEFAULT_DEADLINE_FROM_NOW / 60).toString()}\n              value={\n                deadlineInput.length > 0\n                  ? deadlineInput\n                  : deadline === DEFAULT_DEADLINE_FROM_NOW\n                  ? ''\n                  : (deadline / 60).toString()\n              }\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n              onBlur={() => {\n                setDeadlineInput('')\n                setDeadlineError(false)\n              }}\n              color={deadlineError ? 'red' : ''}\n            />\n          </div>\n          <Typography variant=\"sm\">{i18n._(t`minutes`)}</Typography>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { ChainId, Percent } from '@mistswapdex/sdk'\nimport React, { useRef, useState } from 'react'\nimport {\n  useExpertModeManager,\n  useUserArcherUseRelay,\n  useUserSingleHopOnly,\n  useUserTransactionTTL,\n} from '../../state/user/hooks'\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks'\n\nimport { AdjustmentsIcon } from '@heroicons/react/outline'\nimport { ApplicationModal } from '../../state/application/actions'\nimport Button from '../Button'\nimport Modal from '../Modal'\nimport ModalHeader from '../ModalHeader'\nimport QuestionHelper from '../QuestionHelper'\nimport Toggle from '../Toggle'\nimport TransactionSettings from '../TransactionSettings'\nimport Typography from '../Typography'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useLingui } from '@lingui/react'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\n\nexport default function SettingsTab({ placeholderSlippage }: { placeholderSlippage?: Percent }) {\n  const { i18n } = useLingui()\n  const { chainId } = useActiveWeb3React()\n\n  const node = useRef<HTMLDivElement>(null)\n  const open = useModalOpen(ApplicationModal.SETTINGS)\n  const toggle = useToggleSettingsMenu()\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const [ttl, setTtl] = useUserTransactionTTL()\n\n  const [userUseArcher, setUserUseArcher] = useUserArcherUseRelay()\n\n  return (\n    <div className=\"relative flex\" ref={node}>\n      <div\n        className=\"flex items-center justify-center w-8 h-8 rounded cursor-pointer\"\n        onClick={toggle}\n        id=\"open-settings-dialog-button\"\n      >\n        <AdjustmentsIcon className=\"w-[26px] h-[26px] transform rotate-90\" />\n      </div>\n      {open && (\n        <div className=\"absolute top-14 right-0 z-50 -mr-2.5 min-w-20 md:m-w-22 md:-mr-5 bg-dark-900 border-2 border-dark-800 rounded w-80 shadow-lg\">\n          <div className=\"p-4 space-y-4\">\n            <Typography weight={700} className=\"text-high-emphesis\">\n              {i18n._(t`Transaction Settings`)}\n            </Typography>\n\n            <TransactionSettings placeholderSlippage={placeholderSlippage} />\n\n            <Typography className=\"text-high-emphesis\" weight={700}>\n              {i18n._(t`Interface Settings`)}\n            </Typography>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Typography variant=\"sm\" className=\"text-primary\">\n                  {i18n._(t`Toggle Expert Mode`)}\n                </Typography>\n                <QuestionHelper\n                  text={i18n._(t`Bypasses confirmation modals and allows high slippage trades. Use at your own risk.`)}\n                />\n              </div>\n              <Toggle\n                id=\"toggle-expert-mode-button\"\n                isActive={expertMode}\n                toggle={\n                  expertMode\n                    ? () => {\n                        toggleExpertMode()\n                        setShowConfirmation(false)\n                      }\n                    : () => {\n                        toggle()\n                        setShowConfirmation(true)\n                      }\n                }\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Typography variant=\"sm\" className=\"text-primary\">\n                  {i18n._(t`Disable Multihops`)}\n                </Typography>\n                <QuestionHelper text={i18n._(t`Restricts swaps to direct pairs only.`)} />\n              </div>\n              <Toggle\n                id=\"toggle-disable-multihop-button\"\n                isActive={singleHopOnly}\n                toggle={() => (singleHopOnly ? setSingleHopOnly(false) : setSingleHopOnly(true))}\n              />\n            </div>\n            {/* {chainId == ChainId.SMARTBCH && (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <Typography variant=\"sm\" className=\"text-primary\">\n                    {i18n._(t`MEV Shield by Archer DAO`)}\n                  </Typography>\n                  <QuestionHelper\n                    text={i18n._(\n                      t`Send transaction privately to avoid front-running and sandwich attacks. Requires a miner tip to incentivize miners`\n                    )}\n                  />\n                </div>\n                <Toggle\n                  id=\"toggle-use-archer\"\n                  isActive={userUseArcher}\n                  toggle={() => setUserUseArcher(!userUseArcher)}\n                />\n              </div>\n            )} */}\n          </div>\n        </div>\n      )}\n\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)}>\n        <div className=\"space-y-4\">\n          <ModalHeader title={i18n._(t`Are you sure?`)} onClose={() => setShowConfirmation(false)} />\n          <Typography variant=\"lg\">\n            {i18n._(t`Expert mode turns off the confirm transaction prompt and allows high slippage trades\n                                that often result in bad rates and lost funds.`)}\n          </Typography>\n          <Typography variant=\"sm\" className=\"font-medium\">\n            {i18n._(t`ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.`)}\n          </Typography>\n          <Button\n            color=\"red\"\n            size=\"lg\"\n            onClick={() => {\n              // if (window.prompt(i18n._(t`Please type the word \"confirm\" to enable expert mode.`)) === 'confirm') {\n              //   toggleExpertMode()\n              //   setShowConfirmation(false)\n              // }\n              toggleExpertMode()\n              setShowConfirmation(false)\n            }}\n          >\n            <Typography variant=\"lg\" id=\"confirm-expert-mode\">\n              {i18n._(t`Turn On Expert Mode`)}\n            </Typography>\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport type BadgeColor = 'default' | 'blue' | 'pink' | 'gradient'\nexport type BadgeSize = 'default' | 'medium' | 'large'\n\nexport interface BadgeProps {\n  children?: React.ReactChild | React.ReactChild[]\n  color?: BadgeColor\n  size?: BadgeSize\n}\n\nexport const COLOR = {\n  default: '',\n  blue: 'bg-blue bg-opacity-20 outline-blue rounded text-xs text-blue px-2 py-1',\n  pink: 'bg-pink bg-opacity-20 outline-pink rounded text-xs text-pink px-2 py-1',\n  gradient:\n    'bg-gradient-to-r from-blue to-pink opacity-80 hover:opacity-100 bg-pink bg-opacity-20 outline-pink rounded text-base text-white px-2 py-1',\n}\n\nexport const SIZE = {\n  default: 'text-xs',\n  medium: 'text-sm',\n  large: 'text-lg',\n}\n\nfunction Badge({\n  color = 'default',\n  size = 'default',\n  children,\n  className = '',\n}: BadgeProps & React.HTMLAttributes<HTMLDivElement>): JSX.Element {\n  return <div className={`${COLOR[color]} ${SIZE[size]} ${className}`}>{children}</div>\n}\n\nexport default Badge\n","import { JSBI, LAMBDA_URL, LimitOrder, OrderStatus, Percent, Token } from '@mistswapdex/sdk'\nimport { useActiveWeb3React, useLimitOrderContract } from '.'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport useSWR, { SWRResponse } from 'swr'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useAllTokens } from './Tokens'\n\ninterface State {\n  pending: {\n    page: number\n    maxPages: null\n    data: OpenOrder[]\n    loading: boolean\n    totalOrders: number\n  }\n  completed: {\n    page: number\n    maxPages: null\n    data: OpenOrder[]\n    loading: boolean\n    totalOrders: number\n  }\n}\n\ninterface OpenOrder {\n  tokenIn: Token\n  tokenOut: Token\n  filledPercent: string\n  limitOrder: LimitOrder\n  status: OrderStatus\n  rate: string\n}\n\nconst denominator = (decimals: number = 18) => JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals))\n\nconst viewUrl = `${LAMBDA_URL}/orders/view`\nconst viewFetcher = (url, account, chainId, pendingPage, page) => {\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ address: account, chainId, page, pendingPage }),\n  })\n    .then((r) => r.json())\n    .then((j) => j.data)\n}\n\nconst useLimitOrders = () => {\n  const { account, chainId } = useActiveWeb3React()\n  const limitOrderContract = useLimitOrderContract()\n  const tokens = useAllTokens()\n\n  const [state, setState] = useState<State>({\n    pending: {\n      page: 1,\n      maxPages: null,\n      data: [],\n      loading: true,\n      totalOrders: 0,\n    },\n    completed: {\n      page: 1,\n      maxPages: null,\n      data: [],\n      loading: true,\n      totalOrders: 0,\n    },\n  })\n\n  const shouldFetch = useMemo(\n    () =>\n      viewUrl && account && chainId ? [viewUrl, account, chainId, state.pending.page, state.completed.page] : null,\n    [account, chainId, state.completed.page, state.pending.page]\n  )\n\n  const { data: ordersData, mutate }: SWRResponse<any, Error> = useSWR(shouldFetch, viewFetcher)\n\n  const setPendingPage = useCallback((page: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      pending: {\n        ...prevState.pending,\n        page,\n        loading: true,\n      },\n    }))\n  }, [])\n\n  const setCompletedPage = useCallback((page: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      completed: {\n        ...prevState.completed,\n        page,\n        loading: true,\n      },\n    }))\n  }, [])\n\n  useEffect(() => {\n    if (\n      !account ||\n      !chainId ||\n      !ordersData ||\n      !ordersData.pendingOrders ||\n      !ordersData.otherOrders ||\n      !Array.isArray(ordersData.pendingOrders.orders) ||\n      !Array.isArray(ordersData.otherOrders.orders)\n    )\n      return\n\n    const transform = async (order: any) => {\n      const limitOrder = LimitOrder.getLimitOrder({\n        ...order,\n        chainId: +order.chainId,\n        tokenInDecimals: +order.tokenInDecimals,\n        tokenOutDecimals: +order.tokenOutDecimals,\n      })\n\n      const tokenIn = limitOrder.amountIn.currency\n      const tokenOut = limitOrder.amountOut.currency\n\n      const openOrder = {\n        tokenIn:\n          tokens[tokenIn.address] ||\n          new Token(chainId, tokenIn.address.toLowerCase(), tokenIn.decimals, tokenIn.symbol),\n        tokenOut:\n          tokens[tokenOut.address] ||\n          new Token(chainId, tokenOut.address.toLowerCase(), tokenOut.decimals, tokenOut.symbol),\n        limitOrder,\n        filledPercent: order.filledAmount\n          ? order.filledAmount.mul(BigNumber.from('100')).div(BigNumber.from(order.amountIn)).toString()\n          : '0',\n        status: order.status,\n        rate: new Percent(limitOrder.amountOut.quotient, denominator(tokenOut.decimals))\n          .divide(new Percent(limitOrder.amountIn.quotient, denominator(tokenIn.decimals)))\n          .divide(denominator(2))\n          .toSignificant(6),\n      }\n\n      return openOrder as OpenOrder\n    }\n\n    ;(async () => {\n      const openOrders = await Promise.all<OpenOrder>(ordersData.pendingOrders.orders.map((el) => transform(el)))\n      const completedOrders = await Promise.all<OpenOrder>(ordersData.otherOrders.orders.map((el) => transform(el)))\n\n      setState((prevState) => ({\n        pending: {\n          ...prevState.pending,\n          data: openOrders,\n          maxPages: ordersData.pendingOrders.pendingOrderMaxPage,\n          loading: false,\n          totalOrders: ordersData.pendingOrders.totalPendingOrders,\n        },\n        completed: {\n          ...prevState.completed,\n          data: completedOrders,\n          maxPages: ordersData.otherOrders.maxPage,\n          loading: false,\n          totalOrders: ordersData.otherOrders.totalOrders,\n        },\n      }))\n    })()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, chainId, ordersData, limitOrderContract, setPendingPage, setCompletedPage])\n\n  return useMemo(\n    () => ({\n      ...state,\n      pending: {\n        ...state.pending,\n        setPage: setPendingPage,\n      },\n      completed: {\n        ...state.completed,\n        setPage: setCompletedPage,\n      },\n      mutate,\n    }),\n    [mutate, setCompletedPage, setPendingPage, state]\n  )\n}\n\nexport default useLimitOrders\n","import React, { FC } from 'react'\n\nimport Badge from '../../../components/Badge'\nimport { ClipboardListIcon } from '@heroicons/react/outline'\nimport NavLink from '../../../components/NavLink'\nimport { t } from '@lingui/macro'\nimport useLimitOrders from '../../../hooks/useLimitOrders'\nimport { useLingui } from '@lingui/react'\n\nconst MyOrders: FC = () => {\n  const { i18n } = useLingui()\n  const { pending } = useLimitOrders()\n\n  return (\n    <NavLink href=\"/open-order\">\n      <a className=\"text-secondary hover:text-high-emphesis\">\n        <div className=\"md:flex hidden gap-3 items-center\">\n          <div>{i18n._(t`My Orders`)}</div>\n          <Badge color=\"blue\">{pending.totalOrders}</Badge>\n        </div>\n        <div className=\"flex md:hidden text-primary\">\n          <ClipboardListIcon className=\"w-[26px] h-[26px]\" />\n        </div>\n      </a>\n    </NavLink>\n  )\n}\n\nexport default MyOrders\n","import { ChainId, Currency, Percent } from '@mistswapdex/sdk'\nimport React, { FC, useState } from 'react'\n\nimport Gas from '../../components/Gas'\nimport MyOrders from '../exchange-v1/limit-order/MyOrders'\nimport NavLink from '../../components/NavLink'\nimport Settings from '../../components/Settings'\nimport { currencyId } from '../../functions'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useLingui } from '@lingui/react'\nimport { useRouter } from 'next/router'\n\nconst getQuery = (input, output) => {\n  if (!input && !output) return\n\n  if (input && !output) {\n    return { inputCurrency: input.address || 'BCH' }\n  } else if (input && output) {\n    return { inputCurrency: input.address, outputCurrency: output.address }\n  }\n}\n\ninterface ExchangeHeaderProps {\n  input?: Currency\n  output?: Currency\n  allowedSlippage?: Percent\n}\n\nconst ExchangeHeader: FC<ExchangeHeaderProps> = ({ input, output, allowedSlippage }) => {\n  const { i18n } = useLingui()\n  const { chainId } = useActiveWeb3React()\n  const router = useRouter()\n  const [animateWallet, setAnimateWallet] = useState(false)\n  const isRemove = router.asPath.startsWith('/remove')\n  const isLimitOrder = router.asPath.startsWith('/limit-order')\n\n  return (\n    <div className=\"flex items-center justify-between mb-4 space-x-3\">\n      <div className=\"grid grid-cols-2 rounded p-3px bg-dark-800 h-[46px]\">\n        <NavLink\n          activeClassName=\"font-bold border rounded text-high-emphesis border-dark-800 bg-gradient-to-r from-opaque-blue to-opaque-pink hover:from-blue hover:to-pink\"\n          href={{\n            pathname: '/swap',\n            query: getQuery(input, output),\n          }}\n        >\n          <a className=\"flex items-center justify-center px-4 text-base font-medium text-center rounded-md text-secondary hover:text-high-emphesis \">\n            {i18n._(t`Swap`)}\n          </a>\n        </NavLink>\n        <NavLink\n          activeClassName=\"font-bold border rounded text-high-emphesis border-dark-800 bg-gradient-to-r from-opaque-blue to-opaque-pink hover:from-blue hover:to-pink\"\n          href={`/${!isRemove ? 'add' : 'remove'}${input ? `/${currencyId(input)}` : ''}${\n            output ? `/${currencyId(output)}` : ''\n          }`}\n        >\n          <a className=\"flex items-center justify-center px-4 text-base font-medium text-center rounded-md text-secondary hover:text-high-emphesis\">\n            {i18n._(t`Liquidity`)}\n          </a>\n        </NavLink>\n      </div>\n      <div className=\"flex items-center\">\n        <div className=\"grid grid-flow-col gap-1\">\n          {isLimitOrder && (\n            <div className=\"items-center h-full w-full cursor-pointer hover:bg-dark-800 rounded px-3 py-1.5\">\n              <MyOrders />\n            </div>\n          )}\n          {/*chainId === ChainId.MAINNET && (\n            <div className=\"items-center hidden w-full h-full px-3 space-x-3 rounded cursor-pointer text-green text-opacity-80 hover:text-opacity-100 md:flex hover:bg-dark-800\">\n              <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M13.5215 0.618164L12.6818 1.57302L15.933 4.37393V13.2435C15.9114 13.6891 15.5239 14.0498 15.0502 14.0286C14.6196 14.0074 14.2751 13.6679 14.2536 13.2435V7.28093C14.2536 6.21998 13.3923 5.37122 12.3158 5.37122H11.8421V2.67641C11.8421 1.61546 10.9808 0.766697 9.90428 0.766697H1.93779C0.861242 0.766697 0 1.61546 0 2.67641V18.4421C0 18.9089 0.387559 19.2909 0.861242 19.2909H10.9808C11.4545 19.2909 11.8421 18.9089 11.8421 18.4421V6.64436H12.3158C12.6818 6.64436 12.9617 6.92021 12.9617 7.28093V13.2435C13.0048 14.4105 13.9737 15.3017 15.1579 15.2805C16.2775 15.2381 17.1818 14.3469 17.2248 13.2435V3.80102L13.5215 0.618164ZM9.66744 8.89358H2.17464V3.10079H9.66744V8.89358Z\"\n                  fill=\"#7CFF6B\"\n                />\n              </svg>\n\n              <div className=\"hidden md:block text-baseline\">\n                <Gas />\n              </div>\n            </div>\n          )*/}\n          <div className=\"relative flex items-center w-full h-full rounded hover:bg-dark-800\">\n            <Settings placeholderSlippage={allowedSlippage} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExchangeHeader\n","import { ChainId } from '@mistswapdex/sdk'\n\n// Multichain Explorer\nconst builders = {\n  smartscan: (chainName: string, data: string, type: 'transaction' | 'token' | 'address' | 'block') => {\n    const prefix = `https://smartscan.cash`\n    switch (type) {\n      case 'transaction':\n        return `${prefix}/tx/${data}`\n      default:\n        return `${prefix}/${type}/${data}`\n    }\n  },\n}\n\ninterface ChainObject {\n  [chainId: number]: {\n    chainName: string\n    builder: (chainName: string, data: string, type: 'transaction' | 'token' | 'address' | 'block') => string\n  }\n}\n\nconst chains: ChainObject = {\n  [ChainId.SMARTBCH]: {\n    chainName: '',\n    builder: builders.smartscan,\n  },\n  [ChainId.SMARTBCH_AMBER]: {\n    chainName: 'amber',\n    builder: builders.smartscan,\n  },\n}\n\nexport function getExplorerLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const chain = chains[chainId]\n  return chain.builder(chain.chainName, data, type)\n}\n","import { isAddress } from '../functions/validate'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated ? validated : undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated ? validated : lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\nimport { isZero } from '../functions'\nimport { namehash } from '@ethersproject/hash'\nimport useDebounce from './useDebounce'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): {\n  loading: boolean\n  address: string | null\n} {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMulticall2Contract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticall2Contract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useAppSelector } from '../state/hooks'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\nimport { useMemo } from 'react'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useAppSelector((state) => state.user.userDeadline)\n\n  const blockTimestamp = useCurrentBlockTimestamp()\n  // console.log({ ttl, blockTimestamp })\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { Currency, Token } from '@mistswapdex/sdk'\nimport { useCallback, useState } from 'react'\n\nimport { getCurrencyLogoUrls } from './../components/CurrencyLogo'\nimport { useActiveWeb3React } from './useActiveWeb3React'\n\nexport default function useAddTokenToMetaMask(currencyToAdd: Currency | undefined): {\n  addToken: () => void\n  success: boolean | undefined\n} {\n  const { chainId, library } = useActiveWeb3React()\n\n  const token: Token | undefined = currencyToAdd?.wrapped\n\n  const [success, setSuccess] = useState<boolean | undefined>()\n\n  const addToken = useCallback(() => {\n    if (library && library.provider.isMetaMask && library.provider.request && token) {\n      library.provider\n        .request({\n          method: 'wallet_watchAsset',\n          params: {\n            //@ts-ignore // need this for incorrect ethers provider type\n            type: 'ERC20',\n            options: {\n              address: token.address,\n              symbol: token.symbol,\n              decimals: token.decimals,\n              image: `https://raw.githubusercontent.com/mistswapdex/assets/master/blockchains/smartbch/assets/${token.address}/logo.png`,\n            },\n          },\n        })\n        .then((success) => {\n          setSuccess(success)\n        })\n        .catch(() => setSuccess(false))\n    } else {\n      setSuccess(false)\n    }\n  }, [library, token])\n\n  return { addToken, success }\n}\n","import { AlertTriangle, ArrowUpCircle, CheckCircle } from 'react-feather'\nimport { ChainId, Currency } from '@mistswapdex/sdk'\nimport React, { FC } from 'react'\nimport { Trans, t } from '@lingui/macro'\n\nimport Button from '../../components/Button'\nimport CloseIcon from '../../components/CloseIcon'\nimport ExternalLink from '../../components/ExternalLink'\nimport Image from '../../components/Image'\nimport Lottie from 'lottie-react'\nimport Modal from '../../components/Modal'\nimport ModalHeader from '../../components/ModalHeader'\nimport { RowFixed } from '../../components/Row'\nimport { getExplorerLink } from '../../functions/explorer'\nimport loadingRollingCircle from '../../animation/loading-rolling-circle.json'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport useAddTokenToMetaMask from '../../hooks/useAddTokenToMetaMask'\nimport { useLingui } from '@lingui/react'\n\ninterface ConfirmationPendingContentProps {\n  onDismiss: () => void\n  pendingText: string\n  pendingText2: string\n}\n\nexport const ConfirmationPendingContent: FC<ConfirmationPendingContentProps> = ({\n  onDismiss,\n  pendingText,\n  pendingText2,\n}) => {\n  const { i18n } = useLingui()\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <CloseIcon onClick={onDismiss} />\n      </div>\n      <div className=\"w-24 pb-4 m-auto\">\n        <Lottie animationData={loadingRollingCircle} autoplay loop />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-3\">\n        <div className=\"text-xl font-bold text-high-emphesis\">{i18n._(t`Waiting for Confirmation`)}</div>\n        <div className=\"font-bold\">{pendingText}</div>\n        <div className=\"font-bold\">{pendingText2}</div>\n        <div className=\"text-sm font-bold text-secondary\">{i18n._(t`Confirm this transaction in your wallet`)}</div>\n      </div>\n    </div>\n  )\n}\n\ninterface TransactionSubmittedContentProps {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n  inline?: boolean // not in modal\n}\n\nexport const TransactionSubmittedContent: FC<TransactionSubmittedContentProps> = ({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}) => {\n  const { i18n } = useLingui()\n  const { library } = useActiveWeb3React()\n  const { addToken, success } = useAddTokenToMetaMask(currencyToAdd)\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <CloseIcon onClick={onDismiss} />\n      </div>\n      <div className=\"w-24 pb-4 m-auto\">\n        <ArrowUpCircle strokeWidth={0.5} size={90} className=\"text-blue\" />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-1\">\n        <div className=\"text-xl font-bold\">{i18n._(t`Transaction Submitted`)}</div>\n        {chainId && hash && (\n          <ExternalLink href={getExplorerLink(chainId, hash, 'transaction')}>\n            <div className=\"font-bold text-blue\">View on explorer</div>\n          </ExternalLink>\n        )}\n        {currencyToAdd && library?.provider?.isMetaMask && (\n          <Button color=\"gradient\" onClick={addToken} className=\"w-auto mt-4\">\n            {!success ? (\n              <RowFixed className=\"mx-auto space-x-2\">\n                <span>{i18n._(t`Add ${currencyToAdd.symbol} to MetaMask`)}</span>\n                <Image\n                  src=\"/images/wallets/metamask.png\"\n                  alt={i18n._(t`Add ${currencyToAdd.symbol} to MetaMask`)}\n                  width={24}\n                  height={24}\n                  className=\"ml-1\"\n                />\n              </RowFixed>\n            ) : (\n              <RowFixed>\n                {i18n._(t`Added`)} {currencyToAdd.symbol}\n                {/* <CheckCircle className=\"ml-1.5 text-2xl text-green\" size=\"16px\" /> */}\n              </RowFixed>\n            )}\n          </Button>\n        )}\n        {/* <Button color=\"gradient\" onClick={onDismiss} style={{ margin: '20px 0 0 0' }}>\n          Close\n        </Button> */}\n      </div>\n    </div>\n  )\n}\n\ninterface ConfirmationModelContentProps {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}\n\nexport const ConfirmationModalContent: FC<ConfirmationModelContentProps> = ({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent,\n}) => {\n  return (\n    <div className=\"grid gap-4\">\n      <ModalHeader title={title} onClose={onDismiss} />\n      {topContent()}\n      {bottomContent()}\n    </div>\n  )\n}\n\ninterface TransactionErrorContentProps {\n  message: string\n  onDismiss: () => void\n}\n\nexport const TransactionErrorContent: FC<TransactionErrorContentProps> = ({ message, onDismiss }) => {\n  const { i18n } = useLingui()\n\n  return (\n    <div className=\"grid gap-6\">\n      <div>\n        <div className=\"flex justify-between\">\n          <div className=\"text-lg font-medium text-high-emphesis\">{i18n._(t`Error`)}</div>\n          <CloseIcon onClick={onDismiss} />\n        </div>\n        <div className=\"flex flex-col items-center justify-center gap-3\">\n          <AlertTriangle className=\"text-red\" style={{ strokeWidth: 1.5 }} size={64} />\n          <div className=\"font-bold text-red\">{message}</div>\n        </div>\n      </div>\n      <div>\n        <Button color=\"gradient\" size=\"lg\" onClick={onDismiss}>\n          Dismiss\n        </Button>\n      </div>\n    </div>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  pendingText2?: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: FC<ConfirmationModalProps> = ({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  pendingText2,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} pendingText2={pendingText2} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n"],"names":["X","CloseIcon","props","isMobile","classNames","DoubleGlowShadow","children","className","CurrencyLogo","React","DoubleCurrencyLogo","currency0","currency1","size","logoClassName","toString","useENS","inputRegex","RegExp","AddressInput","memo","value","onUserInput","placeholder","align","fontSize","rest","address","loading","enforcer","nextUserInput","event","target","replace","displayName","escapeRegExp","defaultClassName","Input","test","Number","Address","Numeric","Percent","ChevronLeftIcon","XIcon","Typography","ModalHeader","title","undefined","onClose","onBack","Switch","Toggle","id","isActive","toggle","useRef","useState","useSetUserSlippageTolerance","useUserSlippageTolerance","useUserTransactionTTL","DEFAULT_DEADLINE_FROM_NOW","QuestionHelper","useLingui","Button","SlippageError","DeadlineError","TransactionSettings","placeholderSlippage","i18n","inputRef","userSlippageTolerance","setUserSlippageTolerance","deadline","setDeadline","slippageInput","setSlippageInput","slippageError","setSlippageError","deadlineInput","setDeadlineInput","deadlineError","setDeadlineError","parseSlippageInput","length","parsed","Math","floor","parseFloat","isInteger","InvalidInput","tooLow","lessThan","tooHigh","greaterThan","parseCustomDeadline","error","console","_","toFixed","e","RiskyLow","maxWidth","marginRight","useExpertModeManager","useUserArcherUseRelay","useUserSingleHopOnly","useModalOpen","useToggleSettingsMenu","AdjustmentsIcon","ApplicationModal","Modal","useActiveWeb3React","useOnClickOutside","SettingsTab","chainId","node","open","SETTINGS","expertMode","toggleExpertMode","singleHopOnly","setSingleHopOnly","showConfirmation","setShowConfirmation","ttl","setTtl","userUseArcher","setUserUseArcher","COLOR","default","blue","pink","gradient","SIZE","medium","large","Badge","color","JSBI","LAMBDA_URL","LimitOrder","Token","useLimitOrderContract","useCallback","useEffect","useMemo","useSWR","BigNumber","useAllTokens","denominator","decimals","exponentiate","BigInt","viewUrl","viewFetcher","url","account","pendingPage","page","fetch","method","body","JSON","stringify","then","r","json","j","data","useLimitOrders","limitOrderContract","tokens","state","setState","pending","maxPages","totalOrders","completed","shouldFetch","ordersData","mutate","setPendingPage","prevState","setCompletedPage","pendingOrders","otherOrders","Array","isArray","orders","transform","order","limitOrder","getLimitOrder","tokenInDecimals","tokenOutDecimals","tokenIn","amountIn","currency","tokenOut","amountOut","openOrder","toLowerCase","symbol","filledPercent","filledAmount","mul","from","div","status","rate","quotient","divide","toSignificant","openOrders","Promise","all","map","el","completedOrders","pendingOrderMaxPage","totalPendingOrders","maxPage","setPage","ClipboardListIcon","NavLink","MyOrders","Settings","currencyId","useRouter","getQuery","input","output","inputCurrency","outputCurrency","ExchangeHeader","allowedSlippage","router","animateWallet","setAnimateWallet","isRemove","asPath","startsWith","isLimitOrder","pathname","query","ChainId","builders","smartscan","chainName","type","prefix","chains","SMARTBCH","builder","SMARTBCH_AMBER","getExplorerLink","chain","isAddress","useENSAddress","useENSName","nameOrAddress","validated","reverseLookup","lookup","name","ENSName","useENSRegistrarContract","useENSResolverContract","isZero","namehash","useDebounce","useSingleCallResult","ensName","debouncedName","ensNodeArgument","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","addr","changed","useMulticall2Contract","useCurrentBlockTimestamp","multicall","useAppSelector","useTransactionDeadline","user","userDeadline","blockTimestamp","add","useAddTokenToMetaMask","currencyToAdd","library","token","wrapped","success","setSuccess","addToken","provider","isMetaMask","request","params","options","image","catch","AlertTriangle","ArrowUpCircle","ExternalLink","Image","Lottie","RowFixed","loadingRollingCircle","ConfirmationPendingContent","onDismiss","pendingText","pendingText2","TransactionSubmittedContent","hash","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","strokeWidth","TransactionConfirmationModal","isOpen","attemptingTxn","content"],"sourceRoot":""}