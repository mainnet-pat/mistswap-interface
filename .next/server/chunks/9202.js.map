{"version":3,"file":"9202.js","mappings":"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","sources":["webpack://mistswap-interface/./src/hooks/useBentoBoxAllowance.ts","webpack://mistswap-interface/./src/hooks/useFuse.ts","webpack://mistswap-interface/./src/hooks/index.ts","webpack://mistswap-interface/./src/hooks/useTokenAllowance.ts","webpack://mistswap-interface/./src/hooks/useApproveCallback.ts","webpack://mistswap-interface/./src/hooks/useBentoBox.ts","webpack://mistswap-interface/./src/hooks/useColor.ts","webpack://mistswap-interface/./src/hooks/useSortableData.ts","webpack://mistswap-interface/./src/hooks/useUSDCPrice.ts","webpack://mistswap-interface/./src/hooks/useV2Pairs.ts","webpack://mistswap-interface/./src/hooks/useAllCurrencyCombinations.ts","webpack://mistswap-interface/./src/hooks/useV2Trades.ts"],"sourcesContent":["import { useBentoBoxContract, useContract } from '../hooks/useContract'\nimport { useCallback, useEffect, useState } from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport Fraction from '../entities/Fraction'\nimport { getAddress } from '@ethersproject/address'\nimport { useActiveWeb3React } from '../hooks/useActiveWeb3React'\n\nconst useAllowance = (tokenAddress: string) => {\n  const { account } = useActiveWeb3React()\n  const bentoBoxContract = useBentoBoxContract(true) // withSigner\n  const tokenAddressChecksum = getAddress(tokenAddress)\n  const tokenContract = useContract(tokenAddressChecksum ? tokenAddressChecksum : undefined, ERC20_ABI, true) // withSigner\n\n  const [allowance, setAllowance] = useState('0')\n  const fetchAllowance = useCallback(async () => {\n    if (account) {\n      try {\n        const allowance = await tokenContract?.allowance(account, bentoBoxContract?.address)\n        const formatted = Fraction.from(BigNumber.from(allowance), BigNumber.from(10).pow(18)).toString()\n        setAllowance(formatted)\n      } catch (error) {\n        setAllowance('0')\n        throw error\n      }\n    }\n  }, [account, bentoBoxContract?.address, tokenContract])\n  useEffect(() => {\n    if (account && bentoBoxContract && tokenContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, bentoBoxContract, fetchAllowance, tokenContract])\n\n  return allowance\n}\n\nexport default useAllowance\n","import Fuse from 'fuse.js'\nimport { useState } from 'react'\n\nfunction fuzzySearch({ fuse, data, term }) {\n  const results = fuse.search(term)\n  return term ? results.map((result) => result.item) : data\n}\n\nfunction useFuse({ data, options }) {\n  const [term, setTerm] = useState<string>('')\n  const fuseOptions = {\n    ...options,\n  }\n  const fuse = new Fuse(data || [], fuseOptions)\n  const result = fuzzySearch({ fuse, data, term })\n  const reset = () => setTerm('')\n  return {\n    result,\n    search: setTerm,\n    term,\n    reset,\n  }\n}\n\nexport default useFuse\n","export { default as useActiveWeb3React } from './useActiveWeb3React'\nexport { useApproveCallback, useApproveCallbackFromTrade, ApprovalState } from './useApproveCallback'\nexport { default as useBentoBox } from './useBentoBox'\nexport { default as useBentoBoxAllowance } from './useBentoBoxAllowance'\nexport { useColor, useListColor } from './useColor'\nexport * from './useContract'\nexport { default as useFuse } from './useFuse'\nexport { default as useSortableData } from './useSortableData'\nexport { default as useUSDCPrice } from './useUSDCPrice'\n","import { CurrencyAmount, Token } from '@mistswapdex/sdk'\n\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTokenContract } from './useContract'\n\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? CurrencyAmount.fromRawAmount(token, allowance.toString()) : undefined),\n    [token, allowance]\n  )\n}\n","import {\n  Currency,\n  CurrencyAmount,\n  Percent,\n  ROUTER_ADDRESS,\n  TradeType,\n  Trade as V2Trade,\n} from '@mistswapdex/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\n\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { calculateGasMargin, getGasPrice } from '../functions/trade'\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useTokenAllowance } from './useTokenAllowance'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    console.log(approvalState);\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n        gasPrice: getGasPrice(),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + (amountToApprove.currency.symbol ?? ''),\n          approval: { tokenAddress: token.address, spender: spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n  trade: V2Trade<Currency, Currency, TradeType> | undefined,\n  allowedSlippage: Percent,\n  doArcher: boolean = false\n) {\n  const { chainId } = useActiveWeb3React()\n  const amountToApprove = useMemo(\n    () => (trade && trade.inputAmount.currency.isToken ? trade.maximumAmountIn(allowedSlippage) : undefined),\n    [trade, allowedSlippage]\n  )\n  return useApproveCallback(\n    amountToApprove,\n    chainId\n      ? trade instanceof V2Trade\n        ? !doArcher\n          ? ROUTER_ADDRESS[chainId]\n          : undefined\n        : undefined\n      : undefined\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { WNATIVE_ADDRESS } from '@mistswapdex/sdk'\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useBentoBoxContract } from './useContract'\nimport { useCallback } from 'react'\nimport { useTransactionAdder } from '../state/transactions/hooks'\n\nfunction useBentoBox() {\n  const { account, chainId } = useActiveWeb3React()\n\n  const addTransaction = useTransactionAdder()\n  const bentoBoxContract = useBentoBoxContract()\n\n  const deposit = useCallback(\n    async (tokenAddress: string, value: BigNumber) => {\n      if (value && chainId) {\n        try {\n          const tokenAddressChecksum = getAddress(tokenAddress)\n          if (tokenAddressChecksum === WNATIVE_ADDRESS[chainId]) {\n            const tx = await bentoBoxContract?.deposit(AddressZero, account, account, value, 0, {\n              value,\n            })\n            return addTransaction(tx, { summary: 'Deposit to Bentobox' })\n          } else {\n            const tx = await bentoBoxContract?.deposit(tokenAddressChecksum, account, account, value, 0)\n            return addTransaction(tx, { summary: 'Deposit to Bentobox' })\n          }\n        } catch (e) {\n          console.error('bentobox deposit error:', e)\n          return e\n        }\n      }\n    },\n    [account, addTransaction, bentoBoxContract, chainId]\n  )\n\n  const withdraw = useCallback(\n    // todo: this should be updated with BigNumber as opposed to string\n    async (tokenAddress: string, value: BigNumber) => {\n      if (value && chainId) {\n        try {\n          const tokenAddressChecksum = getAddress(tokenAddress)\n          const tx = await bentoBoxContract?.withdraw(\n            tokenAddressChecksum === WNATIVE_ADDRESS[chainId]\n              ? '0x0000000000000000000000000000000000000000'\n              : tokenAddressChecksum,\n            account,\n            account,\n            value,\n            0\n          )\n          return addTransaction(tx, { summary: 'Withdraw from Bentobox' })\n        } catch (e) {\n          console.error('bentobox withdraw error:', e)\n          return e\n        }\n      }\n    },\n    [account, addTransaction, bentoBoxContract, chainId]\n  )\n\n  return { deposit, withdraw }\n}\n\nexport default useBentoBox\n","import { ChainId, Token } from '@mistswapdex/sdk'\nimport { useLayoutEffect, useState } from 'react'\n\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { shade } from 'polished'\nimport { uriToHttp } from '../functions/convert'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  return Vibrant.from(formattedPath)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        return palette.Vibrant.hex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#0094ec')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#0094ec')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#0094ec')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then((color) => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#0094ec')\n    }\n  }, [listImageUri])\n\n  return color\n}\n","import { useMemo, useState } from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\n\nfunction getNested(theObject: any, path: string, separator = '.') {\n  try {\n    return path\n      .replace('[', separator)\n      .replace(']', '')\n      .split(separator)\n      .reduce((obj, property) => {\n        return obj[property]\n      }, theObject)\n  } catch (err) {\n    return undefined\n  }\n}\n\nconst useSortableData = (items: any, config: any = null) => {\n  const [sortConfig, setSortConfig] = useState(config)\n\n  const sortedItems = useMemo(() => {\n    if (items && items.length > 0) {\n      const sortableItems = [...items]\n      if (sortConfig !== null) {\n        sortableItems.sort((a, b) => {\n          const aValue = getNested(a, sortConfig.key)\n          const bValue = getNested(b, sortConfig.key)\n          if (aValue instanceof BigNumber && bValue instanceof BigNumber) {\n            if (aValue.lt(bValue)) {\n              return sortConfig.direction === 'ascending' ? -1 : 1\n            }\n            if (aValue.gt(bValue)) {\n              return sortConfig.direction === 'ascending' ? 1 : -1\n            }\n          } else if (aValue === Infinity) {\n            return sortConfig.direction === 'ascending' ? -1 : 1\n          } else if (bValue === Infinity) {\n            return sortConfig.direction === 'ascending' ? 1 : -1\n          } else {\n            if (aValue < bValue) {\n              return sortConfig.direction === 'ascending' ? -1 : 1\n            }\n            if (aValue > bValue) {\n              return sortConfig.direction === 'ascending' ? 1 : -1\n            }\n          }\n          return 0\n        })\n      }\n      return sortableItems\n    }\n    return []\n  }, [items, sortConfig])\n\n  const requestSort = (key: any, direction = 'ascending') => {\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending'\n    } else if (sortConfig && sortConfig.key === key && sortConfig.direction === 'descending') {\n      direction = 'ascending'\n    }\n    setSortConfig({ key, direction })\n  }\n\n  return { items: sortedItems, requestSort, sortConfig }\n}\n\nexport default useSortableData\n","import { ChainId, Currency, CurrencyAmount, Price, Token } from '@mistswapdex/sdk'\n\nimport { useActiveWeb3React } from '../hooks/useActiveWeb3React'\nimport { useMemo } from 'react'\nimport { useV2TradeExactOut } from './useV2Trades'\n\n// import { wrappedCurrency } from \"../functions/currency/wrappedCurrency\";\n\n// Stablecoin amounts used when calculating spot price for a given currency.\n// The amount is large enough to filter low liquidity pairs.\nconst STABLECOIN_AMOUNT_OUT: { [chainId: number]: CurrencyAmount<Token> } = {}\n\n/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */\nexport default function useUSDCPrice(currency?: Currency): Price<Currency, Token> | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  const amountOut = chainId ? STABLECOIN_AMOUNT_OUT[chainId] : undefined\n  const stablecoin = amountOut?.currency\n\n  const v2USDCTrade = useV2TradeExactOut(currency, amountOut, {\n    maxHops: 3,\n  })\n\n  return useMemo(() => {\n    if (!currency || !stablecoin) {\n      return undefined\n    }\n\n    // handle usdc\n    if (currency?.wrapped.equals(stablecoin)) {\n      return new Price(stablecoin, stablecoin, '1', '1')\n    }\n\n    // use v2 price if available\n    if (v2USDCTrade) {\n      const { numerator, denominator } = v2USDCTrade.route.midPrice\n      return new Price(currency, stablecoin, denominator, numerator)\n    }\n\n    return undefined\n  }, [currency, stablecoin, v2USDCTrade])\n}\n\nexport function useUSDCValue(currencyAmount: CurrencyAmount<Currency> | undefined | null) {\n  const price = useUSDCPrice(currencyAmount?.currency)\n\n  return useMemo(() => {\n    if (!price || !currencyAmount) return null\n    try {\n      return price.quote(currencyAmount)\n    } catch (error) {\n      return null\n    }\n  }, [currencyAmount, price])\n}\n","import { Currency, CurrencyAmount, FACTORY_ADDRESS, Pair, computePairAddress } from '@mistswapdex/sdk'\n\nimport IUniswapV2PairABI from '@mistswapdex/core/abi/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport { useMemo } from 'react'\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          FACTORY_ADDRESS[tokenA.chainId]\n          ? computePairAddress({\n              factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n              tokenA,\n              tokenB,\n            })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n","import { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../config/routing'\nimport { Currency, Token } from '@mistswapdex/sdk'\n\nimport flatMap from 'lodash/flatMap'\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useMemo } from 'react'\n\nexport function useAllCurrencyCombinations(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases]\n  )\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA, tokenB]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n}\n","import { Currency, CurrencyAmount, Pair, Trade, TradeType } from '@mistswapdex/sdk'\nimport { PairState, useV2Pairs } from './useV2Pairs'\n\nimport { BETTER_TRADE_LESS_HOPS_THRESHOLD } from '../constants'\nimport { isTradeBetter } from '../functions/trade'\nimport { useAllCurrencyCombinations } from './useAllCurrencyCombinations'\nimport { useMemo } from 'react'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyA, currencyB)\n\n  const allPairs = useV2Pairs(allCurrencyCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useV2TradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_INPUT> | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        let trade: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null;\n        try {\n          trade = Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        } catch {\n          trade = null;\n        }\n        return ( trade )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null = null\n      for (let i = 1; i <= maxHops; i++) {\n        let currentTrade: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null;\n        try {\n          currentTrade =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null;\n        } catch {\n          currentTrade = null;\n        }\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, maxHops])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useV2TradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null = null\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, maxHops])\n}\n"],"names":["useBentoBoxContract","useContract","useCallback","useEffect","useState","BigNumber","ERC20_ABI","Fraction","getAddress","useActiveWeb3React","useAllowance","tokenAddress","account","bentoBoxContract","tokenAddressChecksum","tokenContract","undefined","allowance","setAllowance","fetchAllowance","address","formatted","from","pow","toString","error","refreshInterval","setInterval","clearInterval","Fuse","fuzzySearch","fuse","data","term","results","search","map","result","item","useFuse","options","setTerm","fuseOptions","reset","default","useApproveCallback","useApproveCallbackFromTrade","ApprovalState","useBentoBox","useBentoBoxAllowance","useColor","useListColor","useSortableData","useUSDCPrice","CurrencyAmount","useMemo","useSingleCallResult","useTokenContract","useTokenAllowance","token","owner","spender","contract","inputs","fromRawAmount","ROUTER_ADDRESS","Trade","V2Trade","useHasPendingApproval","useTransactionAdder","MaxUint256","calculateGasMargin","getGasPrice","amountToApprove","currency","isToken","currentAllowance","pendingApproval","approvalState","UNKNOWN","isNative","APPROVED","lessThan","PENDING","NOT_APPROVED","addTransaction","approve","console","log","useExact","estimatedGas","estimateGas","catch","quotient","gasLimit","gasPrice","then","response","summary","symbol","approval","debug","trade","allowedSlippage","doArcher","chainId","inputAmount","maximumAmountIn","AddressZero","WNATIVE_ADDRESS","deposit","value","tx","e","withdraw","useLayoutEffect","Vibrant","hex","shade","uriToHttp","getColorFromToken","path","getPalette","palette","detectedHex","AAscore","getColorFromUriPath","uri","formattedPath","color","setColor","stale","tokenColor","listImageUri","getNested","theObject","separator","replace","split","reduce","obj","property","err","items","config","sortConfig","setSortConfig","sortedItems","length","sortableItems","sort","a","b","aValue","key","bValue","lt","direction","gt","Infinity","requestSort","Price","useV2TradeExactOut","STABLECOIN_AMOUNT_OUT","amountOut","stablecoin","v2USDCTrade","maxHops","wrapped","equals","numerator","denominator","route","midPrice","useUSDCValue","currencyAmount","price","quote","FACTORY_ADDRESS","Pair","computePairAddress","IUniswapV2PairABI","Interface","useMultipleContractSingleData","PAIR_INTERFACE","PairState","useV2Pairs","currencies","tokens","currencyA","currencyB","pairAddresses","tokenA","tokenB","factoryAddress","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","token0","token1","sortsBefore","EXISTS","useV2Pair","ADDITIONAL_BASES","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","flatMap","useAllCurrencyCombinations","bases","common","additionalA","additionalB","basePairs","base","otherBase","filter","Boolean","t0","t1","customBases","customBasesA","customBasesB","find","BETTER_TRADE_LESS_HOPS_THRESHOLD","isTradeBetter","useAllCommonPairs","allCurrencyCombinations","allPairs","Object","values","memo","curr","liquidityToken","MAX_HOPS","useV2TradeExactIn","currencyAmountIn","currencyOut","allowedPairs","bestTradeExactIn","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","bestTradeExactOut"],"sourceRoot":""}