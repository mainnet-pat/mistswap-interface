{"version":3,"file":"3233.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;AAEA,MAAMI,OAAO,GAAG,QAAmF;AAAA,MAAlF;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAK,GAAG,KAApB;AAA2BC,IAAAA,eAAe,GAAG;AAA7C,GAAkF;AAAA,MAAZC,KAAY;;AACjG,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAA+CV,sDAAS,EAA9D;AACA,QAAMW,KAAK,GAAGZ,gDAAA,CAAcG,QAAd,CAAd;AACA,QAAMW,cAAc,GAAGF,KAAK,CAACN,KAAN,CAAYS,SAAZ,IAAyB,EAAhD,CAHiG,CAKjG;AACA;AACA;;AAEA,QAAMC,QAAQ,GAAGZ,KAAK,GAClB,CAACE,KAAK,CAACW,EAAN,IAAYX,KAAK,CAACY,IAAN,CAAWV,QAAvB,IAAmCF,KAAK,CAACY,IAA1C,MAAoDX,MADlC,GAElBA,MAAM,CAACY,UAAP,CAAkBb,KAAK,CAACW,EAAN,IAAYX,KAAK,CAACY,IAAN,CAAWV,QAAvB,IAAmCF,KAAK,CAACY,IAA3D,CAFJ;AAIA,QAAMH,SAAS,GAAGC,QAAQ,GAAI,GAAEF,cAAe,IAAGT,eAAgB,EAArC,CAAuCe,IAAvC,EAAH,GAAmDN,cAA7E,CAbiG,CAejG;;AAEA,sBACE,mDAAC,8CAAD;AAAM,QAAI,EAAER,KAAK,CAACY;AAAlB,KAA4BZ,KAA5B;AAAA,2BACGP,yDAAA,CAAmBa,KAAnB,EAA0B;AACzBG,MAAAA,SAAS,EAAEA,SAAS,IAAI;AADC,KAA1B;AADH,KADF;AAOD,CAxBD;;AA0BA,iEAAeb,OAAf","sources":["webpack://mistswap-interface/./src/components/NavLink/index.tsx"],"sourcesContent":["import Link, { LinkProps } from 'next/link'\nimport React, { Children } from 'react'\n\nimport { useRouter } from 'next/router'\n\nconst NavLink = ({ children, exact = false, activeClassName = 'text-high-emphesis', ...props }) => {\n  const { asPath, pathname, route, query, basePath } = useRouter()\n  const child = Children.only(children)\n  const childClassName = child.props.className || ''\n\n  // pages/index.js will be matched via props.href\n  // pages/about.js will be matched via props.href\n  // pages/[slug].js will be matched via props.as\n\n  const isActive = exact\n    ? (props.as || props.href.pathname || props.href) === asPath\n    : asPath.startsWith(props.as || props.href.pathname || props.href)\n\n  const className = isActive ? `${childClassName} ${activeClassName}`.trim() : childClassName\n\n  // console.log({ asPath, pathname, route, query })\n\n  return (\n    <Link href={props.href} {...props}>\n      {React.cloneElement(child, {\n        className: className || null,\n      })}\n    </Link>\n  )\n}\n\nexport default NavLink\n"],"names":["Link","React","Children","useRouter","NavLink","children","exact","activeClassName","props","asPath","pathname","route","query","basePath","child","only","childClassName","className","isActive","as","href","startsWith","trim","cloneElement"],"sourceRoot":""}