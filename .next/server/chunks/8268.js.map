{"version":3,"file":"8268.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;AAyBA,SAASO,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAAf,EAAsF;AACpF,QAAMC,MAAM,GAAGZ,8CAAO,CACpB;AAAA;;AAAA,WACEC,wDAAW,CAAS;AAClBY,MAAAA,MAAM,EAAE,WAACV,6CAAK,CAACI,IAAD,EAAO,GAAP,CAAN,2CAAC,OAAkBO,CAAnB,YAAsBV,6CAAK,CAACG,IAAD,EAAO,GAAP,CAA3B,2CAAsB,OAAkBO,CAAxC,CADU;AAElBC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAIL,KAAJ;AAFW,KAAT,CADb;AAAA,GADoB,EAMpB,CAACM,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAD,EAAuBG,KAAvB,CANoB,CAAtB;AAQA,QAAMQ,MAAM,GAAGlB,8CAAO,CACpB;AAAA;;AAAA,WACEC,wDAAW,CAAS;AAClBY,MAAAA,MAAM,EAAE,YAACT,6CAAK,CAACG,IAAD,EAAO,GAAP,CAAN,4CAAC,QAAkBY,CAAnB,aAAsBhB,6CAAK,CAACI,IAAD,EAAO,GAAP,CAA3B,4CAAsB,QAAkBY,CAAxC,CADU;AAElBJ,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAIJ,MAAJ;AAFW,KAAT,CADb;AAAA,GADoB,EAMpB,CAACK,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAD,EAAuBI,MAAvB,CANoB,CAAtB;AASA,sBACE;AAAK,aAAS,EAAC,eAAf;AAAA,2BACE;AAAK,WAAK,EAAED,KAAZ;AAAmB,YAAM,EAAEC,MAA3B;AAAA,iBACG,cAAcH,MAAd,iBACC,mDAAC,0DAAD;AAAgB,UAAE,EAAC,UAAnB;AAA8B,YAAI,EAAEA,MAAM,CAACY,QAAP,CAAgBC,IAApD;AAA0D,UAAE,EAAEb,MAAM,CAACY,QAAP,CAAgBE,EAA9E;AAAkF,gBAAQ,EAAE;AAA5F,QAFJ,eAIE,mDAAC,iDAAD;AACE,YAAI,EAAEf,IADR;AAEE,SAAC,EAAGgB,CAAD;AAAA;;AAAA,4BAAOX,MAAM,CAACW,CAAC,CAACT,CAAH,CAAb,6CAAsB,CAAtB;AAAA,SAFL;AAGE,SAAC,EAAGS,CAAD;AAAA;;AAAA,4BAAOL,MAAM,CAACK,CAAC,CAACJ,CAAH,CAAb,6CAAsB,CAAtB;AAAA,SAHL;AAIE,cAAM,EAAE,WAAWX,MAAX,GAAoBA,MAAM,CAACgB,KAA3B,GAAmC,kBAJ7C;AAKE,mBAAW,EAAEf;AALf,QAJF;AAAA;AADF,IADF;AAgBD;;AAEc,SAASgB,SAAT,CAAmB;AAChClB,EAAAA,IADgC;AAEhCC,EAAAA,MAAM,GAAG;AAAEgB,IAAAA,KAAK,EAAE;AAAT,GAFuB;AAGhCf,EAAAA,WAAW,GAAG;AAHkB,CAAnB,EAIiB;AAC9B,sBACE;AAAA,cACGF,IAAI,iBACH,mDAAC,qEAAD;AAAA,gBACG,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACC,mDAAC,KAAD;AAAO,YAAI,EAAEJ,IAAb;AAAmB,cAAM,EAAEC,MAA3B;AAAmC,mBAAW,EAAEC,WAAhD;AAA6D,aAAK,EAAEC,KAApE;AAA2E,cAAM,EAAEC;AAAnF;AAFJ;AAFJ,IADF;AAWD","sources":["webpack://mistswap-interface/./src/components/LineGraph/index.tsx"],"sourcesContent":["import AutoSizer from 'react-virtualized-auto-sizer'\nimport { useMemo } from 'react'\nimport { scaleLinear } from '@visx/scale'\nimport { LinePath } from '@visx/shape'\n\nimport { minBy, maxBy } from 'lodash'\nimport { LinearGradient } from '@visx/gradient'\n\ninterface LineGraphProps {\n  data: {\n    x: number\n    y: number\n  }[]\n  stroke?:\n    | {\n        solid: string\n      }\n    | {\n        gradient: {\n          from: string\n          to: string\n        }\n      }\n  strokeWidth?: number\n}\n\ninterface GraphProps extends LineGraphProps {\n  width: number\n  height: number\n}\n\nfunction Graph({ data, stroke, strokeWidth, width, height }: GraphProps): JSX.Element {\n  const xScale = useMemo(\n    () =>\n      scaleLinear<number>({\n        domain: [minBy(data, 'x')?.x, maxBy(data, 'x')?.x],\n        range: [0, width],\n      }),\n    [JSON.stringify(data), width]\n  )\n  const yScale = useMemo(\n    () =>\n      scaleLinear<number>({\n        domain: [maxBy(data, 'y')?.y, minBy(data, 'y')?.y],\n        range: [0, height],\n      }),\n    [JSON.stringify(data), height]\n  )\n\n  return (\n    <div className=\"w-full h-full\">\n      <svg width={width} height={height}>\n        {'gradient' in stroke && (\n          <LinearGradient id=\"gradient\" from={stroke.gradient.from} to={stroke.gradient.to} vertical={false} />\n        )}\n        <LinePath\n          data={data}\n          x={(d) => xScale(d.x) ?? 0}\n          y={(d) => yScale(d.y) ?? 0}\n          stroke={'solid' in stroke ? stroke.solid : \"url('#gradient')\"}\n          strokeWidth={strokeWidth}\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default function LineGraph({\n  data,\n  stroke = { solid: '#0993EC' },\n  strokeWidth = 2,\n}: LineGraphProps): JSX.Element {\n  return (\n    <>\n      {data && (\n        <AutoSizer>\n          {({ width, height }) => (\n            <Graph data={data} stroke={stroke} strokeWidth={strokeWidth} width={width} height={height} />\n          )}\n        </AutoSizer>\n      )}\n    </>\n  )\n}\n"],"names":["AutoSizer","useMemo","scaleLinear","LinePath","minBy","maxBy","LinearGradient","Graph","data","stroke","strokeWidth","width","height","xScale","domain","x","range","JSON","stringify","yScale","y","gradient","from","to","d","solid","LineGraph"],"sourceRoot":""}