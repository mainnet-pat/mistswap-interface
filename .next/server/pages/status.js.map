{"version":3,"file":"../pages/status.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;AASe,SAASE,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAiC;AAC9C;AACA;AACA,sBACE,mDAAC,mEAAD;AAAW,MAAE,EAAC,aAAd;AAA4B,aAAS,EAAC,uBAAtC;AAA8D,YAAQ,EAAC,MAAvE;AAAA,2BACE,wDAAC,kDAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE;AAAwB,YAAI,EAAC,aAA7B;AAA2C,eAAO,EAAC;AAAnD,SAAU,aAAV,CAFF;AAAA;AADF,IADF;AAmED,EAED;AACA;AACA;;;;;;;ACrFA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://mistswap-interface/./src/pages/status/index.tsx","webpack://mistswap-interface/external \"@ethersproject/address\"","webpack://mistswap-interface/external \"@ethersproject/bignumber\"","webpack://mistswap-interface/external \"@ethersproject/constants\"","webpack://mistswap-interface/external \"@ethersproject/contracts\"","webpack://mistswap-interface/external \"@ethersproject/hash\"","webpack://mistswap-interface/external \"@ethersproject/units\"","webpack://mistswap-interface/external \"@mistswapdex/sdk\"","webpack://mistswap-interface/external \"ajv\"","webpack://mistswap-interface/external \"cids\"","webpack://mistswap-interface/external \"multicodec\"","webpack://mistswap-interface/external \"multihashes\"","webpack://mistswap-interface/external \"next/head\"","webpack://mistswap-interface/external \"numeral\"","webpack://mistswap-interface/external \"react/jsx-runtime\""],"sourcesContent":["import Container from '../../components/Container'\nimport Dots from '../../components/Dots'\nimport Head from 'next/head'\nimport { Tab } from '@headlessui/react'\nimport Typography from '../../components/Typography'\nimport capitalize from 'lodash/capitalize'\nimport { classNames } from '../../functions'\nimport { getChainsStatus } from '../../services/covalent/fetchers'\nimport { useChainsStatus } from '../../services/covalent/hooks'\nimport { useState } from 'react'\n\nexport default function Status({ initialData }) {\n  //   const res = useChainsStatus({ initialData })\n  //   const { data } = res.data\n  return (\n    <Container id=\"status-page\" className=\"py-4 md:py-8 lg:py-12\" maxWidth=\"full\">\n      <Head>\n        <title>Status | Mist</title>\n        <meta key=\"description\" name=\"description\" content=\"Mist Status...\" />\n      </Head>\n      {/* <div className=\"w-full max-w-6xl mx-auto\">\n                <Typography component=\"h1\" variant=\"h1\" className=\"w-full mb-4\">\n                    Status\n                </Typography>\n\n        <Tab.Group>\n          <Tab.List className=\"flex\">\n            <Tab\n              className={({ selected }) =>\n                classNames(\n                  !selected && 'text-gray-500 hover:text-gray-700',\n                  'py-4 px-4 text-center font-medium text-sm cursor-pointer'\n                )\n              }\n            >\n              Covalent\n            </Tab>\n            <Tab\n              className={({ selected }) =>\n                classNames(\n                  !selected && 'text-gray-500 hover:text-gray-700',\n                  'py-4 px-4 text-center font-medium text-sm cursor-pointer'\n                )\n              }\n            >\n              Subgraph\n            </Tab>\n          </Tab.List>\n          <Tab.Panel>\n            <div className=\"grid items-start justify-start grid-cols-3 gap-4 mx-auto \">\n              {data.items.map((item) => {\n                const words = item.name.split('-')\n                return (\n                  <div className=\"p-4 rounded bg-dark-900 text-primary\">\n                    <Typography variant=\"h3\">{words.map((word) => `${capitalize(word)} `)}</Typography>\n                    <Typography variant=\"sm\" className=\"text-secondary\">\n                      Chain Id: {item['chain_id']}\n                    </Typography>\n                    <Typography variant=\"sm\" className=\"text-secondary\">\n                      Block Height: {item['synced_block_height']}\n                    </Typography>\n                  </div>\n                )\n              })}\n            </div>\n          </Tab.Panel>\n          <Tab.Panel>\n            <div className=\"grid items-start justify-start grid-cols-3 gap-4 mx-auto \">\n              <div className=\"p-4 text-primary\">\n                <Typography variant=\"h3\">\n                  <Dots>Under Construction</Dots>\n                </Typography>\n              </div>\n            </div>\n          </Tab.Panel>\n        </Tab.Group>\n            </div>*/}\n\n      {/* <pre>{JSON.stringify(data, null, 2)}</pre> */}\n    </Container>\n  )\n}\n\n// export async function getStaticProps() {\n//     return { props: { initialData: await getChainsStatus() } }\n// }\n","module.exports = require(\"@ethersproject/address\");","module.exports = require(\"@ethersproject/bignumber\");","module.exports = require(\"@ethersproject/constants\");","module.exports = require(\"@ethersproject/contracts\");","module.exports = require(\"@ethersproject/hash\");","module.exports = require(\"@ethersproject/units\");","module.exports = require(\"@mistswapdex/sdk\");","module.exports = require(\"ajv\");","module.exports = require(\"cids\");","module.exports = require(\"multicodec\");","module.exports = require(\"multihashes\");","module.exports = require(\"next/head\");","module.exports = require(\"numeral\");","module.exports = require(\"react/jsx-runtime\");"],"names":["Container","Head","Status","initialData"],"sourceRoot":""}