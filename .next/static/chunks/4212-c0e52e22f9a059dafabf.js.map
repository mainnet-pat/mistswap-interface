{"version":3,"file":"static/chunks/4212-c0e52e22f9a059dafabf.js","mappings":"6vBAEA,IAAMA,EAAY,CAChBC,KAAM,aACN,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,YACPC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YASN,IANkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,IAAaC,SAAAA,OAAb,MAAwB,MAAxB,MAA+BC,UAAAA,OAA/B,MAA2C,GAA3C,EAAkDC,GAAlD,mBAChB,oBAAKD,WAAWE,EAAAA,EAAAA,IAAWF,EAAWT,EAAUQ,GAAW,WAAeE,GAA1E,aACGH,O,+rBCmDL,IAtCc,SAAC,GAQT,IAVYK,EAdDC,EAAGC,EAiBlBC,EAOI,EAPJA,IAOI,IANJC,MAAAA,OAMI,WANIC,EAMJ,MALJC,OAAAA,OAKI,WALKD,EAKL,MAJJE,OAAAA,OAII,WAJKF,EAIL,EADDP,GACC,EAHJU,OAGI,EAFJC,OAEI,aACEC,EAAUC,SAASC,OAAON,GAAS,KAAO,IAAMK,SAASC,OAAOR,GAAQ,KAAO,GACrF,OACE,gBAAKK,MAAO,CAAEL,MAAAA,EAAOE,OAAAA,GAAUT,UAAU,0BAAzC,SACGa,GACC,SAAC,UAAD,GACEF,OAAQ,kBAAML,GACdA,IAAKA,EACLC,MAAOA,EACPE,OAAQA,EACRC,OAAQA,EACRM,YAAY,OACZC,YAAW,qCApCJb,EAoCoDG,EApCjDF,EAoCwDI,EAtB1DN,EAdF,wBACFC,EADE,qBACYC,EADZ,gVASCD,EATD,qBASeC,EATf,mDAUQD,EAVR,qBAUsBC,EAVtB,oFAWsCD,EAXtC,iBAWgDA,EAXhD,mDAciFc,OAAOC,KAAKhB,MAuB/FF,KAGN,SAAC,UAAD,GACEU,OAAQ,kBAAML,GACdA,IAAKA,EACLC,MAAOA,EACPE,OAAQA,EACRC,OAAQA,EACRM,YAAY,SACRf,Q,uwBC1DKmB,OAAO,UAA1B,IAEaC,EAAeC,EAAAA,MAC1B,YAc2E,IAbzEC,EAayE,EAbzEA,MACAC,EAYyE,EAZzEA,YAYyE,KAXzER,YAWyE,EAVzEhB,WAAAA,OAUyE,MAV7D,0HAU6D,EATzEyB,EASyE,EATzEA,MASyE,IARzEC,SAAAA,OAQyE,MAR9D,OAQ8D,EAPtEzB,GAOsE,YACzE,GAA6B0B,EAAAA,EAAAA,GAAOJ,GAApC,EAAQK,QAAR,EAAiBC,QAMjB,OACE,+BACE,oBACEN,MAAOA,EACPO,SAAU,SAACC,GARA,IAACC,EAAAA,EASDD,EAAME,OAAOV,MAAMW,QAAQ,OAAQ,IARlDV,EAAYQ,IAWRG,UAAU,OACVC,MAAM,6BACNC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,WAAW,QACXxB,YAAY,6BACZyB,QAAQ,wBAERC,KAAK,OACL1C,WAAWE,EAAAA,EAAAA,IACC,UAAVuB,GAAqB,aACrB,2EACAzB,GAEFY,MAAO,CAAEc,SAAAA,IACLzB,SAOdoB,EAAasB,YAAc,eAE3B,Q,ynBC1DA,IAAMC,EAAaxB,OAAO,0BAIbyB,EAAQvB,EAAAA,MACnB,YAY2E,IAXzEC,EAWyE,EAXzEA,MACAC,EAUyE,EAVzEA,YACAR,EASyE,EATzEA,YASyE,IARzEhB,UAAAA,OAQyE,MAfpD,kCAeoD,EAPtEC,GAOsE,YAOzE,OACE,wBACMA,GADN,IAEEsB,MAAOA,EACPO,SAAU,SAACC,GAVE,IAACC,GACM,MADNA,EAYHD,EAAME,OAAOV,MAAMW,QAAQ,KAAM,OAXlBU,EAAWE,MAAKC,EAAAA,EAAAA,IAAaf,MACvDR,EAAYQ,IAaZG,UAAU,UACVC,MAAM,eACNC,aAAa,MACbC,YAAY,MAEZI,KAAK,OACLD,QAAQ,sBACRzB,YAAaA,GAAe,MAC5BgC,IAAK,EACLC,UAAW,EACXC,UAAW,GACXV,WAAW,QACXxC,WAAWE,EAAAA,EAAAA,IACT,6IACAF,SAOV6C,EAAMF,YAAc,iBAEpB,Q,4oBCxDA,IAAMC,EAAaxB,OAAO,UAEbyB,EAAQvB,EAAAA,MACnB,YAc2E,IAbzEC,EAayE,EAbzEA,MACAC,EAYyE,EAZzEA,YACAR,EAWyE,EAXzEA,YACAhB,EAUyE,EAVzEA,UACAyB,EASyE,EATzEA,MASyE,IARzEC,SAAAA,OAQyE,MAR9D,OAQ8D,EAPtEzB,GAOsE,YASzE,OACE,+BACE,oBACEsB,MAAOA,EACPO,SAAU,SAACC,GAZA,IAACC,GACM,MADNA,EAcDD,EAAME,OAAOV,MAAMW,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MAbvCU,EAAWE,MAAKC,EAAAA,EAAAA,IAAaf,MACnDmB,OAAOnB,IAAkB,KAC3BR,EAAYQ,IAcZG,UAAU,UACVC,MAAM,eACNC,aAAa,MACbC,YAAY,MAEZI,KAAK,OACLD,QAAQ,WACRzB,YAAaA,GAAe,MAC5BkC,UAAW,EACXlD,WAAWE,EAAAA,EAAAA,IACC,UAAVuB,GAAqB,aACrB,sGACAzB,GAEFY,MAAO,CAAEc,SAAAA,IACLzB,SAOd4C,EAAMF,YAAc,eAEpB,ICrDA,EANc,CACZS,QAAAA,EACAC,QDyDF,ECxDEC,QAAAA,I,uMCGa,SAASC,EAAT,GAAuD,EAArCC,GAAqC,IAAjCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,OAC7C,OACE,UAAC,IAAD,CACEC,QAASF,EACT3B,SAAU4B,EACV1D,WAAWE,EAAAA,EAAAA,IACTuD,EAAW,UAAY,cACvB,qKALJ,WAQE,iBAAMzD,UAAU,UAAhB,0BACA,kBACEA,WAAWE,EAAAA,EAAAA,IACTuD,EAAW,gBAAkB,gBAC7B,0IAHJ,WAME,iBACEzD,WAAWE,EAAAA,EAAAA,IACTuD,EAAW,kCAAoC,mCAC/C,sFAEF,cAAY,OALd,UAOE,gBAAKzD,UAAU,4BAA4B4D,KAAK,OAAOC,QAAQ,YAA/D,UACE,iBACEC,EAAE,mCACFC,OAAO,eACPC,YAAa,EACbC,cAAc,QACdC,eAAe,eAIrB,iBACElE,WAAWE,EAAAA,EAAAA,IACTuD,EAAW,mCAAqC,kCAChD,sFAEF,cAAY,OALd,UAOE,gBAAKzD,UAAU,6BAA6B4D,KAAK,eAAeC,QAAQ,YAAxE,UACE,iBAAMC,EAAE,iO,ICxCfK,EAMAC,E,4CAQU,SAASC,EAAT,GAAgF,IAAjDC,EAAiD,EAAjDA,oBACpCC,GAASC,EAAAA,EAAAA,MAATD,KAIFE,IAFWC,EAAAA,EAAAA,WAEaC,EAAAA,EAAAA,OACxBC,GAA2BC,EAAAA,EAAAA,MAEjC,GAAgCC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAEA,GAA0CC,EAAAA,EAAAA,UAAS,IAA5CC,EAAP,KAAsBC,EAAtB,KACA,GAA0CF,EAAAA,EAAAA,WAAgC,GAAnEG,EAAP,KAAsBC,EAAtB,KAEA,GAA0CJ,EAAAA,EAAAA,UAAS,IAA5CK,EAAP,KAAsBC,EAAtB,KACA,GAA0CN,EAAAA,EAAAA,WAAgC,GAAnEO,EAAP,KAAsBC,EAAtB,KAEA,SAASC,EAAmBnE,GAK1B,GAHA4D,EAAiB5D,GACjB8D,GAAiB,GAEI,IAAjB9D,EAAMoE,OACRf,EAAyB,YACpB,CACL,IAAMgB,EAASC,KAAKC,MAAiC,IAA3B3C,OAAO4C,WAAWxE,KAEvC4B,OAAO6C,UAAUJ,IAAWA,EAAS,GAAKA,EAAS,KACtDhB,EAAyB,QACX,MAAVrD,GACF8D,EAAiBlB,EAAc8B,eAGjCrB,EAAyB,IAAIvB,EAAAA,GAAQuC,EAAQ,OAKnD,IAAMM,EAAmC,SAA1BzB,GAAoCA,EAAsB0B,SAAS,IAAI9C,EAAAA,GAAQ,EAAG,MAC3F+C,EAAoC,SAA1B3B,GAAoCA,EAAsB4B,YAAY,IAAIhD,EAAAA,GAAQ,EAAG,MAwBrG,OACE,iBAAKrD,UAAU,aAAf,WACE,iBAAKA,UAAU,aAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,SAACsG,EAAA,EAAD,CAAYC,QAAQ,KAAKvG,UAAU,qBAAnC,SACGuE,EAAKiC,EAAE,8BAGV,SAACC,EAAA,EAAD,CACEC,KAAMnC,EAAKiC,EACT,4GAIN,iBAAKxG,UAAU,8BAAf,WACE,gBACEA,WAAWE,EAAAA,EAAAA,IACPkF,EACE,aACAc,GAAUE,EACV,gBAC0B,SAA1B3B,EACA,cACA,qBACJ,kCAEFkC,UAAW,EAXb,UAaE,iBAAK3G,UAAU,0CAAf,UACGkG,GAAUE,GACT,iBAAMpG,UAAU,+BAA+B4G,KAAK,MAAM,aAAW,UAArE,0BAGE,MACJ,kBACE5G,WAAWE,EAAAA,EAAAA,IAAWkF,EAAgB,WAAa,GAAI,2CACvDpE,YAAW,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAqBuC,QAAQ,GAC1CtF,MACE2D,EAAcS,OAAS,EACnBT,EAC0B,SAA1BT,EACA,GACAA,EAAsBoC,QAAQ,GAEpC/E,SAAU,SAACgF,GAAD,OAAOpB,EAAmBoB,EAAE7E,OAAOV,QAC7CwF,OAAQ,WACN5B,EAAiB,IACjBE,GAAiB,IAEnB2B,MAAO5B,EAAgB,MAAQ,KArBnC,UA0BF,SAAC6B,EAAA,GAAD,CACEC,KAAK,KACLF,MAAiC,SAA1BvC,EAAmC,OAAS,OACnD8B,QAAmC,SAA1B9B,EAAmC,SAAW,WACvD0C,QAAS,WACPzB,EAAmB,KALvB,SAQGnB,EAAKiC,EAAE,kBAGXpB,GAAiBc,GAAUE,GAC1B,SAACE,EAAA,EAAD,CACEtG,WAAWE,EAAAA,EAAAA,IACTkF,IAAkBjB,EAAc8B,aAAe,WAAa,cAC5D,2CAEFM,QAAQ,KALV,UAOE,yBACGnB,IAAkBjB,EAAc8B,aAC7B1B,EAAKiC,EAAE,0CACPpB,IAAkBjB,EAAciD,SAChC7C,EAAKiC,EAAE,kCACPjC,EAAKiC,EAAE,6CAGb,SAGN,iBAAKxG,UAAU,aAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,SAACsG,EAAA,EAAD,CAAYC,QAAQ,KAAKvG,UAAU,qBAAnC,SACGuE,EAAKiC,EAAE,gCAGV,SAACC,EAAA,EAAD,CAAgBC,KAAMnC,EAAKiC,EAAE,qFAE/B,iBAAKxG,UAAU,oBAAf,WACE,gBACEA,UAAU,qDACVY,MAAO,CAAEb,SAAU,OAAQsH,YAAa,OACxCV,UAAW,EAHb,UAKE,kBACE3G,WAAWE,EAAAA,EAAAA,IAAWsF,EAAgB,WAAa,GAAI,2CACvDxE,aAAcsG,EAAAA,GAA4B,IAAIC,WAC9ChG,MACE+D,EAAcK,OAAS,EACnBL,EACAP,IAAauC,EAAAA,GACb,IACCvC,EAAW,IAAIwC,WAEtBzF,SAAU,SAACgF,GAAD,OAlItB,SAA6BvF,GAK3B,GAHAgE,EAAiBhE,GACjBkE,GAAiB,GAEI,IAAjBlE,EAAMoE,OACRX,EAAYsC,EAAAA,SAEZ,IACE,IAAM1B,EAAiBC,KAAKC,MAAiC,GAA3B3C,OAAO4C,WAAWxE,KAC/C4B,OAAO6C,UAAUJ,IAAWA,EAAS,IAAMA,EAAS,MACvDH,EAAiBrB,EAAc6B,cAE/BjB,EAAYY,GAEd,MAAO4B,GACPC,QAAQD,MAAMA,GACd/B,EAAiBrB,EAAc6B,eAiHRyB,CAAoBZ,EAAE7E,OAAOV,QAC9CwF,OAAQ,WACNxB,EAAiB,IACjBE,GAAiB,IAEnBuB,MAAOxB,EAAgB,MAAQ,QAGnC,SAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BhC,EAAKiC,EAAE,4B,SAhMtCrC,GAAAA,EAAAA,aAAAA,eAAAA,EAAAA,SAAAA,WAAAA,EAAAA,UAAAA,Y,CAAAA,IAAAA,EAAAA,K,SAMAC,GAAAA,EAAAA,aAAAA,e,CAAAA,IAAAA,EAAAA,K,0BCMU,SAASuD,EAAT,GAAiF,IAA1DrD,EAA0D,EAA1DA,oBAC5BC,GAASC,EAAAA,EAAAA,MAATD,KAGFqD,IAFcC,EAAAA,EAAAA,MAAZC,SAEKpD,EAAAA,EAAAA,QAAuB,OAC9BqD,GAAOC,EAAAA,EAAAA,IAAaC,EAAAA,GAAAA,UACpBvE,GAASwE,EAAAA,EAAAA,MAEf,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAA0CC,EAAAA,EAAAA,MAA1C,eAAOC,EAAP,KAAsBC,EAAtB,KAGA,GAAgDvD,EAAAA,EAAAA,WAAS,GAAlDwD,EAAP,KAAyBC,EAAzB,MAEAC,EAAAA,EAAAA,GAAkBf,EAAMG,EAAOrE,OAASlD,GAExC,OAAsBsE,EAAAA,EAAAA,MAAtB,eAEA,GAFA,WAE0C8D,EAAAA,EAAAA,OAA1C,yBAEA,OACE,iBAAK5I,UAAU,gBAAgB6I,IAAKjB,EAApC,WACE,gBACE5H,UAAU,kEACVmH,QAASzD,EACTF,GAAG,8BAHL,UAKE,SAAC,MAAD,CAAiBxD,UAAU,4CAE5B+H,IACC,gBAAK/H,UAAU,+HAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,SAACsG,EAAA,EAAD,CAAYwC,OAAQ,IAAK9I,UAAU,qBAAnC,SACGuE,EAAKiC,EAAE,gCAGV,SAACnC,EAAD,CAAqBC,oBAAqBA,KAE1C,SAACgC,EAAA,EAAD,CAAYtG,UAAU,qBAAqB8I,OAAQ,IAAnD,SACGvE,EAAKiC,EAAE,8BAGV,iBAAKxG,UAAU,oCAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,SAACsG,EAAA,EAAD,CAAYC,QAAQ,KAAKvG,UAAU,eAAnC,SACGuE,EAAKiC,EAAE,8BAEV,SAACC,EAAA,EAAD,CACEC,KAAMnC,EAAKiC,EAAE,kGAGjB,SAACjD,EAAD,CACEC,GAAG,4BACHC,SAAU2E,EACV1E,OACE0E,EACI,WACEC,IACAK,GAAoB,IAEtB,WACEhF,IACAgF,GAAoB,UAKhC,iBAAK1I,UAAU,oCAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,SAACsG,EAAA,EAAD,CAAYC,QAAQ,KAAKvG,UAAU,eAAnC,SACGuE,EAAKiC,EAAE,6BAEV,SAACC,EAAA,EAAD,CAAgBC,KAAMnC,EAAKiC,EAAE,oDAE/B,SAACjD,EAAD,CACEC,GAAG,iCACHC,SAAU8E,EACV7E,OAAQ,kBAAuB8E,GAAhBD,eA0BzB,SAACQ,EAAA,EAAD,CAAOC,OAAQP,EAAkBQ,UAAW,kBAAMP,GAAoB,IAAtE,UACE,iBAAK1I,UAAU,YAAf,WACE,SAACkJ,EAAA,EAAD,CAAa9G,MAAOmC,EAAKiC,EAAE,sBAAmB2C,QAAS,kBAAMT,GAAoB,OACjF,SAACpC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGhC,EAAKiC,EAAE,gJAGV,SAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKvG,UAAU,cAAnC,SACGuE,EAAKiC,EAAE,8DAEV,SAACS,EAAA,GAAD,CACED,MAAM,MACNE,KAAK,KACLC,QAAS,WAKPkB,IACAK,GAAoB,IATxB,UAYE,SAACpC,EAAA,EAAD,CAAYC,QAAQ,KAAK/C,GAAG,sBAA5B,SACGe,EAAKiC,EAAE,0C,yFC/IP,SAAS7E,EAAOyH,GAK7B,IAAMC,GAAYC,EAAAA,EAAAA,IAAUF,GACtBG,GAAgBC,EAAAA,EAAAA,GAAWH,QAAwB7I,GACnDiJ,GAASC,EAAAA,EAAAA,GAAcN,GAE7B,MAAO,CACLvH,QAAS0H,EAAc1H,SAAW4H,EAAO5H,QACzCD,QAASyH,GAAwBI,EAAO7H,QACxC+H,KAAMJ,EAAcK,QAAUL,EAAcK,SAAWP,GAAaI,EAAO7H,SAAUwH,GAAwB,Q,2HCTlG,SAASM,EAAcG,GAGpC,UACMC,GAAgBC,EAAAA,EAAAA,GAAYF,EAAS,KACrCG,GAAkBC,EAAAA,EAAAA,UAAQ,WAC9B,IAAKH,EAAe,MAAO,MAACtJ,GAC5B,IACE,OAAOsJ,EAAgB,EAACI,EAAAA,EAAAA,GAASJ,IAAkB,MAACtJ,GACpD,MAAOgH,GACP,MAAO,MAAChH,MAET,CAACsJ,IACEK,GAAoBC,EAAAA,EAAAA,KAAwB,GAC5CC,GAAkBC,EAAAA,EAAAA,IAAoBH,EAAmB,WAAYH,GACrEO,EAAqB,UAAGF,EAAgBG,cAAnB,aAAG,EAAyB,GACjDC,GAAmBC,EAAAA,EAAAA,IACvBH,KAA0BI,EAAAA,EAAAA,IAAOJ,GAAyBA,OAAwB/J,GAClF,GAEIoK,GAAON,EAAAA,EAAAA,IAAoBG,EAAkB,OAAQT,GAErDa,EAAUf,IAAkBD,EAClC,MAAO,CACLjI,QAASiJ,EAAU,KAAH,oBAAUD,EAAKJ,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C3I,QAASgJ,GAAWR,EAAgBxI,SAAW+I,EAAK/I,W,qEClCjD,SAAS8G,EACdf,EACAkD,GAEA,IAAMC,GAAarG,EAAAA,EAAAA,QAAiCoG,IACpDE,EAAAA,EAAAA,YAAU,WACRD,EAAWE,QAAUH,IACpB,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAqB,SAACpE,GAAkB,QAC5C,oBAAIc,EAAKqD,eAAT,aAAI,EAAcE,SAASrE,EAAE7E,eAA7B,UAGI8I,EAAWE,SAASF,EAAWE,WAKrC,OAFAG,SAASC,iBAAiB,YAAaH,GAEhC,WACLE,SAASE,oBAAoB,YAAaJ,MAE3C,CAACtD","sources":["webpack://_N_E/./src/components/Container/index.tsx","webpack://_N_E/./src/components/Image/index.tsx","webpack://_N_E/./src/components/Input/Address/index.tsx","webpack://_N_E/./src/components/Input/Numeric/index.tsx","webpack://_N_E/./src/components/Input/Percent/index.tsx","webpack://_N_E/./src/components/Input/index.tsx","webpack://_N_E/./src/components/Toggle/index.tsx","webpack://_N_E/./src/components/TransactionSettings/index.tsx","webpack://_N_E/./src/components/Settings/index.tsx","webpack://_N_E/./src/hooks/useENS.ts","webpack://_N_E/./src/hooks/useENSAddress.ts","webpack://_N_E/./src/hooks/useOnClickOutside.tsx"],"sourcesContent":["import { classNames } from '../../functions'\n\nconst MAX_WIDTH = {\n  full: 'max-w-full',\n  '7xl': 'max-w-7xl',\n  '6xl': 'max-w-6xl',\n  '5xl': 'max-w-5xl',\n  '4xl': 'max-w-4xl',\n  '3xl': 'max-w-3xl',\n  '2xl': 'max-w-2xl',\n  xl: 'max-w-xl',\n  lg: 'max-w-lg',\n  md: 'max-w-md',\n  sm: 'max-w-sm',\n  xs: 'max-w-xs',\n}\n\nconst Container = ({ children, maxWidth = '2xl', className = '', ...rest }) => (\n  <div className={classNames(className, MAX_WIDTH[maxWidth], 'w-full')} {...rest}>\n    {children}\n  </div>\n)\n\nexport default Container\n","import NextImage from 'next/image'\n\n// Cloudflare Loader\nconst normalize = (src) => {\n  return src[0] === '/' ? src.slice(1) : src\n}\n\nconst cloudFlareLoader = ({ src, width, quality }) => {\n  const params = [`width=${width}`]\n  if (quality) {\n    params.push(`quality=${quality}`)\n  }\n  const paramsString = params.join(',')\n  return `/cdn-cgi/image/${paramsString}/${normalize(src)}`\n}\n\nconst shimmer = (w, h) => `\n<svg width=\"${w}\" height=\"${h}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <defs>\n    <linearGradient id=\"g\">\n      <stop stop-color=\"#333\" offset=\"20%\" />\n      <stop stop-color=\"#222\" offset=\"50%\" />\n      <stop stop-color=\"#333\" offset=\"70%\" />\n    </linearGradient>\n  </defs>\n  <rect width=\"${w}\" height=\"${h}\" fill=\"#333\" />\n  <rect id=\"r\" width=\"${w}\" height=\"${h}\" fill=\"url(#g)\" />\n  <animate xlink:href=\"#r\" attributeName=\"x\" from=\"-${w}\" to=\"${w}\" dur=\"1s\" repeatCount=\"indefinite\"  />\n</svg>`\n\nconst toBase64 = (str) => (typeof window === 'undefined' ? Buffer.from(str).toString('base64') : window.btoa(str))\n\nconst Image = ({\n  src,\n  width = undefined,\n  height = undefined,\n  layout = undefined,\n  loader = undefined,\n  style = undefined,\n  ...rest\n}) => {\n  const useBlur = parseInt(String(height), 10) >= 40 && parseInt(String(width), 10) >= 40\n  return (\n    <div style={{ width, height }} className=\"overflow-hidden rounded\">\n      {useBlur ? (\n        <NextImage\n          loader={() => src}\n          src={src}\n          width={width}\n          height={height}\n          layout={layout}\n          placeholder=\"blur\"\n          blurDataURL={`data:image/svg+xml;base64,${toBase64(shimmer(width, height))}`}\n          {...rest}\n        />\n      ) : (\n        <NextImage\n          loader={() => src}\n          src={src}\n          width={width}\n          height={height}\n          layout={layout}\n          placeholder=\"empty\"\n          {...rest}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Image\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\nimport useENS from '../../../hooks/useENS'\n\nconst inputRegex = RegExp(`^\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const AddressInput = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className = 'flex w-full h-full p-3 font-bold rounded overflow-ellipsis recipient-address-input bg-dark-900 placeholder-low-emphesis',\n    align,\n    fontSize = '24px',\n    ...rest\n  }: {\n    value: string\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const { address, loading } = useENS(value)\n\n    const enforcer = (nextUserInput: string) => {\n      onUserInput(nextUserInput)\n    }\n\n    return (\n      <>\n        <input\n          value={value}\n          onChange={(event) => {\n            enforcer(event.target.value.replace(/\\s+/g, ''))\n          }}\n          // universal input options\n          inputMode=\"text\"\n          title=\"Wallet Address or ENS name\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\"\n          placeholder=\"Wallet Address or ENS name\"\n          pattern=\"^(0x[a-fA-F0-9]{40})$\"\n          // text-specific options\n          type=\"text\"\n          className={classNames(\n            align === 'right' && 'text-right',\n            'font-medium bg-transparent whitespace-nowrap overflow-ellipsis flex-auto',\n            className\n          )}\n          style={{ fontSize }}\n          {...rest}\n        />\n      </>\n    )\n  }\n)\n\nAddressInput.displayName = 'AddressInput'\n\nexport default AddressInput\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nconst defaultClassName = 'w-0 p-0 text-2xl bg-transparent'\n\nexport const Input = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className = defaultClassName,\n    ...rest\n  }: {\n    value: string | number\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const enforcer = (nextUserInput: string) => {\n      if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n        onUserInput(nextUserInput)\n      }\n    }\n\n    return (\n      <input\n        {...rest}\n        value={value}\n        onChange={(event) => {\n          // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n          enforcer(event.target.value.replace(/,/g, '.'))\n        }}\n        // universal input options\n        inputMode=\"decimal\"\n        title=\"Token Amount\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        // text-specific options\n        type=\"text\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        placeholder={placeholder || '0.0'}\n        min={0}\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        className={classNames(\n          'relative font-bold outline-none border-none flex-auto overflow-hidden overflow-ellipsis placeholder-low-emphesis focus:placeholder-primary',\n          className\n        )}\n      />\n    )\n  }\n)\n\nInput.displayName = 'NumericalInput'\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { classNames, escapeRegExp } from '../../../functions'\n\nimport React from 'react'\n\nconst inputRegex = RegExp(`^\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(\n  ({\n    value,\n    onUserInput,\n    placeholder,\n    className,\n    align,\n    fontSize = '24px',\n    ...rest\n  }: {\n    value: string | number\n    onUserInput: (input: string) => void\n    error?: boolean\n    fontSize?: string\n    align?: 'right' | 'left'\n  } & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) => {\n    const enforcer = (nextUserInput: string) => {\n      if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n        if (Number(nextUserInput) <= 100) {\n          onUserInput(nextUserInput)\n        }\n      }\n    }\n\n    return (\n      <>\n        <input\n          value={value}\n          onChange={(event) => {\n            // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n            enforcer(event.target.value.replace(/,/g, '.').replace(/%/g, ''))\n          }}\n          // universal input options\n          inputMode=\"decimal\"\n          title=\"Token Amount\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          // text-specific options\n          type=\"text\"\n          pattern=\"^[0-9]*$\"\n          placeholder={placeholder || '100'}\n          maxLength={3}\n          className={classNames(\n            align === 'right' && 'text-right',\n            'relative font-medium bg-transparent whitespace-nowrap overflow-ellipsis flex-auto percent-translate',\n            className\n          )}\n          style={{ fontSize }}\n          {...rest}\n        />\n      </>\n    )\n  }\n)\n\nInput.displayName = 'PercentInput'\n\nexport default Input\n","import Address from './Address'\nimport Numeric from './Numeric'\nimport Percent from './Percent'\n\nconst Input = {\n  Address,\n  Percent,\n  Numeric,\n}\n\nexport default Input\n","import React from 'react'\nimport { Switch } from '@headlessui/react'\nimport { classNames } from '../../functions'\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <Switch\n      checked={isActive}\n      onChange={toggle}\n      className={classNames(\n        isActive ? 'bg-blue' : 'bg-dark-800',\n        'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none'\n      )}\n    >\n      <span className=\"sr-only\">Use setting</span>\n      <span\n        className={classNames(\n          isActive ? 'translate-x-5' : 'translate-x-0',\n          'pointer-events-none relative inline-block h-5 w-5 rounded-full bg-dark-900 shadow transform ring-0 transition ease-in-out duration-200'\n        )}\n      >\n        <span\n          className={classNames(\n            isActive ? 'opacity-0 ease-out duration-100' : 'opacity-100 ease-in duration-200',\n            'absolute inset-0 h-full w-full flex items-center justify-center transition-opacity'\n          )}\n          aria-hidden=\"true\"\n        >\n          <svg className=\"w-3 h-3 text-low-emphesis\" fill=\"none\" viewBox=\"0 0 12 12\">\n            <path\n              d=\"M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </span>\n        <span\n          className={classNames(\n            isActive ? 'opacity-100 ease-in duration-200' : 'opacity-0 ease-out duration-100',\n            'absolute inset-0 h-full w-full flex items-center justify-center transition-opacity'\n          )}\n          aria-hidden=\"true\"\n        >\n          <svg className=\"w-3 h-3 text-high-emphesis\" fill=\"currentColor\" viewBox=\"0 0 12 12\">\n            <path d=\"M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z\" />\n          </svg>\n        </span>\n      </span>\n    </Switch>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { useSetUserSlippageTolerance, useUserSlippageTolerance, useUserTransactionTTL } from '../../state/user/hooks'\n\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { Percent } from '@mistswapdex/sdk'\nimport QuestionHelper from '../QuestionHelper'\nimport Typography from '../Typography'\nimport { classNames } from '../../functions'\nimport { t } from '@lingui/macro'\nimport { useLingui } from '@lingui/react'\nimport Button from '../Button'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface TransactionSettingsProps {\n  placeholderSlippage?: Percent // varies according to the context in which the settings dialog is placed\n}\n\nexport default function TransactionSettings({ placeholderSlippage }: TransactionSettingsProps) {\n  const { i18n } = useLingui()\n\n  const inputRef = useRef<HTMLInputElement>()\n\n  const userSlippageTolerance = useUserSlippageTolerance()\n  const setUserSlippageTolerance = useSetUserSlippageTolerance()\n\n  const [deadline, setDeadline] = useUserTransactionTTL()\n\n  const [slippageInput, setSlippageInput] = useState('')\n  const [slippageError, setSlippageError] = useState<SlippageError | false>(false)\n\n  const [deadlineInput, setDeadlineInput] = useState('')\n  const [deadlineError, setDeadlineError] = useState<DeadlineError | false>(false)\n\n  function parseSlippageInput(value: string) {\n    // populate what the user typed and clear the error\n    setSlippageInput(value)\n    setSlippageError(false)\n\n    if (value.length === 0) {\n      setUserSlippageTolerance('auto')\n    } else {\n      const parsed = Math.floor(Number.parseFloat(value) * 100)\n\n      if (!Number.isInteger(parsed) || parsed < 0 || parsed > 5000) {\n        setUserSlippageTolerance('auto')\n        if (value !== '.') {\n          setSlippageError(SlippageError.InvalidInput)\n        }\n      } else {\n        setUserSlippageTolerance(new Percent(parsed, 10_000))\n      }\n    }\n  }\n\n  const tooLow = userSlippageTolerance !== 'auto' && userSlippageTolerance.lessThan(new Percent(5, 10_000))\n  const tooHigh = userSlippageTolerance !== 'auto' && userSlippageTolerance.greaterThan(new Percent(1, 100))\n\n  function parseCustomDeadline(value: string) {\n    // populate what the user typed and clear the error\n    setDeadlineInput(value)\n    setDeadlineError(false)\n\n    if (value.length === 0) {\n      setDeadline(DEFAULT_DEADLINE_FROM_NOW)\n    } else {\n      try {\n        const parsed: number = Math.floor(Number.parseFloat(value) * 60)\n        if (!Number.isInteger(parsed) || parsed < 60 || parsed > 180 * 60) {\n          setDeadlineError(DeadlineError.InvalidInput)\n        } else {\n          setDeadline(parsed)\n        }\n      } catch (error) {\n        console.error(error)\n        setDeadlineError(DeadlineError.InvalidInput)\n      }\n    }\n  }\n\n  return (\n    <div className=\"grid gap-4\">\n      <div className=\"grid gap-2\">\n        <div className=\"flex items-center\">\n          <Typography variant=\"sm\" className=\"text-high-emphesis\">\n            {i18n._(t`Slippage tolerance`)}\n          </Typography>\n\n          <QuestionHelper\n            text={i18n._(\n              t`Your transaction will revert 23if the price changes unfavorably by more than this percentage.`\n            )}\n          />\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={classNames(\n              !!slippageError\n                ? 'border-red'\n                : tooLow || tooHigh\n                ? 'border-yellow'\n                : userSlippageTolerance !== 'auto'\n                ? 'border-blue'\n                : 'border-transparent',\n              'border p-2 rounded bg-dark-800'\n            )}\n            tabIndex={-1}\n          >\n            <div className=\"flex items-center justify-between gap-1\">\n              {tooLow || tooHigh ? (\n                <span className=\"hidden sm:inline text-yellow\" role=\"img\" aria-label=\"warning\">\n                  ⚠️\n                </span>\n              ) : null}\n              <input\n                className={classNames(slippageError ? 'text-red' : '', 'bg-transparent placeholder-low-emphesis')}\n                placeholder={placeholderSlippage?.toFixed(2)}\n                value={\n                  slippageInput.length > 0\n                    ? slippageInput\n                    : userSlippageTolerance === 'auto'\n                    ? ''\n                    : userSlippageTolerance.toFixed(2)\n                }\n                onChange={(e) => parseSlippageInput(e.target.value)}\n                onBlur={() => {\n                  setSlippageInput('')\n                  setSlippageError(false)\n                }}\n                color={slippageError ? 'red' : ''}\n              />\n              %\n            </div>\n          </div>\n          <Button\n            size=\"sm\"\n            color={userSlippageTolerance === 'auto' ? 'blue' : 'gray'}\n            variant={userSlippageTolerance === 'auto' ? 'filled' : 'outlined'}\n            onClick={() => {\n              parseSlippageInput('')\n            }}\n          >\n            {i18n._(t`Auto`)}\n          </Button>\n        </div>\n        {slippageError || tooLow || tooHigh ? (\n          <Typography\n            className={classNames(\n              slippageError === SlippageError.InvalidInput ? 'text-red' : 'text-yellow',\n              'font-medium flex items-center space-x-2'\n            )}\n            variant=\"sm\"\n          >\n            <div>\n              {slippageError === SlippageError.InvalidInput\n                ? i18n._(t`Enter a valid slippage percentage`)\n                : slippageError === SlippageError.RiskyLow\n                ? i18n._(t`Your transaction may fail`)\n                : i18n._(t`Your transaction may be frontrun`)}\n            </div>\n          </Typography>\n        ) : null}\n      </div>\n\n      <div className=\"grid gap-2\">\n        <div className=\"flex items-center\">\n          <Typography variant=\"sm\" className=\"text-high-emphesis\">\n            {i18n._(t`Transaction deadline`)}\n          </Typography>\n\n          <QuestionHelper text={i18n._(t`Your transaction will revert if it is pending for more than this long.`)} />\n        </div>\n        <div className=\"flex items-center\">\n          <div\n            className=\"p-2 rounded bg-dark-800 min-w-[82px] max-w-[102px]\"\n            style={{ maxWidth: '40px', marginRight: '8px' }}\n            tabIndex={-1}\n          >\n            <input\n              className={classNames(deadlineError ? 'text-red' : '', 'bg-transparent placeholder-low-emphesis')}\n              placeholder={(DEFAULT_DEADLINE_FROM_NOW / 60).toString()}\n              value={\n                deadlineInput.length > 0\n                  ? deadlineInput\n                  : deadline === DEFAULT_DEADLINE_FROM_NOW\n                  ? ''\n                  : (deadline / 60).toString()\n              }\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n              onBlur={() => {\n                setDeadlineInput('')\n                setDeadlineError(false)\n              }}\n              color={deadlineError ? 'red' : ''}\n            />\n          </div>\n          <Typography variant=\"sm\">{i18n._(t`minutes`)}</Typography>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { ChainId, Percent } from '@mistswapdex/sdk'\nimport React, { useRef, useState } from 'react'\nimport {\n  useExpertModeManager,\n  useUserArcherUseRelay,\n  useUserSingleHopOnly,\n  useUserTransactionTTL,\n} from '../../state/user/hooks'\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks'\n\nimport { AdjustmentsIcon } from '@heroicons/react/outline'\nimport { ApplicationModal } from '../../state/application/actions'\nimport Button from '../Button'\nimport Modal from '../Modal'\nimport ModalHeader from '../ModalHeader'\nimport QuestionHelper from '../QuestionHelper'\nimport Toggle from '../Toggle'\nimport TransactionSettings from '../TransactionSettings'\nimport Typography from '../Typography'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useLingui } from '@lingui/react'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\n\nexport default function SettingsTab({ placeholderSlippage }: { placeholderSlippage?: Percent }) {\n  const { i18n } = useLingui()\n  const { chainId } = useActiveWeb3React()\n\n  const node = useRef<HTMLDivElement>(null)\n  const open = useModalOpen(ApplicationModal.SETTINGS)\n  const toggle = useToggleSettingsMenu()\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const [ttl, setTtl] = useUserTransactionTTL()\n\n  const [userUseArcher, setUserUseArcher] = useUserArcherUseRelay()\n\n  return (\n    <div className=\"relative flex\" ref={node}>\n      <div\n        className=\"flex items-center justify-center w-8 h-8 rounded cursor-pointer\"\n        onClick={toggle}\n        id=\"open-settings-dialog-button\"\n      >\n        <AdjustmentsIcon className=\"w-[26px] h-[26px] transform rotate-90\" />\n      </div>\n      {open && (\n        <div className=\"absolute top-14 right-0 z-50 -mr-2.5 min-w-20 md:m-w-22 md:-mr-5 bg-dark-900 border-2 border-dark-800 rounded w-80 shadow-lg\">\n          <div className=\"p-4 space-y-4\">\n            <Typography weight={700} className=\"text-high-emphesis\">\n              {i18n._(t`Transaction Settings`)}\n            </Typography>\n\n            <TransactionSettings placeholderSlippage={placeholderSlippage} />\n\n            <Typography className=\"text-high-emphesis\" weight={700}>\n              {i18n._(t`Interface Settings`)}\n            </Typography>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Typography variant=\"sm\" className=\"text-primary\">\n                  {i18n._(t`Toggle Expert Mode`)}\n                </Typography>\n                <QuestionHelper\n                  text={i18n._(t`Bypasses confirmation modals and allows high slippage trades. Use at your own risk.`)}\n                />\n              </div>\n              <Toggle\n                id=\"toggle-expert-mode-button\"\n                isActive={expertMode}\n                toggle={\n                  expertMode\n                    ? () => {\n                        toggleExpertMode()\n                        setShowConfirmation(false)\n                      }\n                    : () => {\n                        toggle()\n                        setShowConfirmation(true)\n                      }\n                }\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Typography variant=\"sm\" className=\"text-primary\">\n                  {i18n._(t`Disable Multihops`)}\n                </Typography>\n                <QuestionHelper text={i18n._(t`Restricts swaps to direct pairs only.`)} />\n              </div>\n              <Toggle\n                id=\"toggle-disable-multihop-button\"\n                isActive={singleHopOnly}\n                toggle={() => (singleHopOnly ? setSingleHopOnly(false) : setSingleHopOnly(true))}\n              />\n            </div>\n            {/* {chainId == ChainId.SMARTBCH && (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <Typography variant=\"sm\" className=\"text-primary\">\n                    {i18n._(t`MEV Shield by Archer DAO`)}\n                  </Typography>\n                  <QuestionHelper\n                    text={i18n._(\n                      t`Send transaction privately to avoid front-running and sandwich attacks. Requires a miner tip to incentivize miners`\n                    )}\n                  />\n                </div>\n                <Toggle\n                  id=\"toggle-use-archer\"\n                  isActive={userUseArcher}\n                  toggle={() => setUserUseArcher(!userUseArcher)}\n                />\n              </div>\n            )} */}\n          </div>\n        </div>\n      )}\n\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)}>\n        <div className=\"space-y-4\">\n          <ModalHeader title={i18n._(t`Are you sure?`)} onClose={() => setShowConfirmation(false)} />\n          <Typography variant=\"lg\">\n            {i18n._(t`Expert mode turns off the confirm transaction prompt and allows high slippage trades\n                                that often result in bad rates and lost funds.`)}\n          </Typography>\n          <Typography variant=\"sm\" className=\"font-medium\">\n            {i18n._(t`ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.`)}\n          </Typography>\n          <Button\n            color=\"red\"\n            size=\"lg\"\n            onClick={() => {\n              // if (window.prompt(i18n._(t`Please type the word \"confirm\" to enable expert mode.`)) === 'confirm') {\n              //   toggleExpertMode()\n              //   setShowConfirmation(false)\n              // }\n              toggleExpertMode()\n              setShowConfirmation(false)\n            }}\n          >\n            <Typography variant=\"lg\" id=\"confirm-expert-mode\">\n              {i18n._(t`Turn On Expert Mode`)}\n            </Typography>\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import { isAddress } from '../functions/validate'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated ? validated : undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated ? validated : lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\nimport { isZero } from '../functions'\nimport { namehash } from '@ethersproject/hash'\nimport useDebounce from './useDebounce'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): {\n  loading: boolean\n  address: string | null\n} {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n  node: RefObject<T | undefined>,\n  handler: undefined | (() => void)\n) {\n  const handlerRef = useRef<undefined | (() => void)>(handler)\n  useEffect(() => {\n    handlerRef.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (node.current?.contains(e.target as Node) ?? false) {\n        return\n      }\n      if (handlerRef.current) handlerRef.current()\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [node])\n}\n"],"names":["MAX_WIDTH","full","xl","lg","md","sm","xs","children","maxWidth","className","rest","classNames","str","w","h","src","width","undefined","height","layout","loader","style","useBlur","parseInt","String","placeholder","blurDataURL","window","btoa","RegExp","AddressInput","React","value","onUserInput","align","fontSize","useENS","address","loading","onChange","event","nextUserInput","target","replace","inputMode","title","autoComplete","autoCorrect","autoCapitalize","spellCheck","pattern","type","displayName","inputRegex","Input","test","escapeRegExp","min","minLength","maxLength","Number","Address","Percent","Numeric","Toggle","id","isActive","toggle","checked","fill","viewBox","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SlippageError","DeadlineError","TransactionSettings","placeholderSlippage","i18n","useLingui","userSlippageTolerance","useRef","useUserSlippageTolerance","setUserSlippageTolerance","useSetUserSlippageTolerance","useUserTransactionTTL","deadline","setDeadline","useState","slippageInput","setSlippageInput","slippageError","setSlippageError","deadlineInput","setDeadlineInput","deadlineError","setDeadlineError","parseSlippageInput","length","parsed","Math","floor","parseFloat","isInteger","InvalidInput","tooLow","lessThan","tooHigh","greaterThan","Typography","variant","_","QuestionHelper","text","tabIndex","role","toFixed","e","onBlur","color","Button","size","onClick","RiskyLow","marginRight","DEFAULT_DEADLINE_FROM_NOW","toString","error","console","parseCustomDeadline","SettingsTab","node","useActiveWeb3React","chainId","open","useModalOpen","ApplicationModal","useToggleSettingsMenu","useExpertModeManager","expertMode","toggleExpertMode","useUserSingleHopOnly","singleHopOnly","setSingleHopOnly","showConfirmation","setShowConfirmation","useOnClickOutside","useUserArcherUseRelay","ref","weight","Modal","isOpen","onDismiss","ModalHeader","onClose","nameOrAddress","validated","isAddress","reverseLookup","useENSName","lookup","useENSAddress","name","ENSName","ensName","debouncedName","useDebounce","ensNodeArgument","useMemo","namehash","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","result","resolverContract","useENSResolverContract","isZero","addr","changed","handler","handlerRef","useEffect","current","handleClickOutside","contains","document","addEventListener","removeEventListener"],"sourceRoot":""}