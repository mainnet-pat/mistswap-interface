{"version":3,"file":"static/chunks/2106-ea7e6acdce96f9f66720.js","mappings":"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","sources":["webpack://_N_E/./src/components/PositionCard/index.tsx","webpack://_N_E/./src/hooks/useTotalSupply.ts","webpack://_N_E/./src/state/mint/hooks.ts","webpack://_N_E/./node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/outline'\nimport { CurrencyAmount, JSBI, Pair, Percent, Token } from '@mistswapdex/sdk'\nimport React, { useState } from 'react'\nimport { currencyId, unwrappedToken } from '../../functions/currency'\n\nimport Alert from '../Alert'\nimport { AutoColumn } from '../Column'\nimport { BIG_INT_ZERO } from '../../constants'\nimport Button from '../Button'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Dots from '../Dots'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport { useColor } from '../../hooks'\nimport { useLingui } from '@lingui/react'\nimport { useRouter } from 'next/router'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { classNames } from '../../functions'\nimport { Transition } from '@headlessui/react'\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { i18n } = useLingui()\n  const { account } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <div className=\"p-5 rounded bg-dark-800 text-high-emphesis\">\n          <AutoColumn gap={'md'}>\n            <div className=\"text-lg\">Your Position</div>\n            <div className=\"flex flex-col md:flex-row md:justify-between\">\n              <div className=\"flex items-center w-auto space-x-4\">\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={40} />\n                <div className=\"text-2xl font-semibold\">\n                  {currency0.symbol}/{currency1.symbol}\n                </div>\n              </div>\n              <div className=\"flex items-center mt-3 space-x-2 text-base md:mt-0\">\n                <div>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'} </div>\n                <div className=\"text-secondary\">Pool Tokens</div>\n              </div>\n            </div>\n            <div className=\"flex flex-col w-full p-3 mt-3 space-y-1 text-sm rounded bg-dark-900 text-high-emphesis\">\n              <div className=\"flex justify-between\">\n                <div>{i18n._(t`Your pool share`)}</div>\n                <div className=\"font-bold\">{poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}</div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div>{currency0.symbol}:</div>\n                {token0Deposited ? (\n                  <div className=\"flex space-x-2 font-bold\">\n                    <div> {token0Deposited?.toSignificant(6)}</div>\n                    <div className=\"text-secondary\">{currency0.symbol}</div>\n                  </div>\n                ) : (\n                  '-'\n                )}\n              </div>\n              <div className=\"flex justify-between\">\n                <div>{currency1.symbol}:</div>\n                {token1Deposited ? (\n                  <div className=\"flex space-x-2 font-bold\">\n                    <div>{token1Deposited?.toSignificant(6)}</div>\n                    <div className=\"text-secondary\">{currency1.symbol}</div>\n                  </div>\n                ) : (\n                  '-'\n                )}\n              </div>\n            </div>\n          </AutoColumn>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { i18n } = useLingui()\n  const router = useRouter()\n  const { account, chainId } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <div\n      className=\"rounded bg-dark-800\"\n      // style={{ backgroundColor }}\n    >\n      <Button\n        variant=\"empty\"\n        className={classNames(\n          'flex items-center justify-between w-full px-4 py-6 cursor-pointer bg-dark-800 hover:bg-dark-700',\n          showMore && '!bg-dark-700'\n        )}\n        style={{ boxShadow: 'none' }}\n        onClick={() => setShowMore(!showMore)}\n      >\n        <div className=\"flex items-center space-x-4\">\n          <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={40} />\n          <div className=\"text-xl font-semibold\">\n            {!currency0 || !currency1 ? <Dots>{i18n._(t`Loading`)}</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          {i18n._(t`Manage`)}\n          {showMore ? (\n            <ChevronUpIcon width=\"20px\" height=\"20px\" className=\"ml-4\" />\n          ) : (\n            <ChevronDownIcon width=\"20px\" height=\"20px\" className=\"ml-4\" />\n          )}\n        </div>\n      </Button>\n\n      <Transition\n        show={showMore}\n        enter=\"transition-opacity duration-75\"\n        enterFrom=\"opacity-0\"\n        enterTo=\"opacity-100\"\n        leave=\"transition-opacity duration-150\"\n        leaveFrom=\"opacity-100\"\n        leaveTo=\"opacity-0\"\n      >\n        <div className=\"p-4 space-y-4\">\n          <div className=\"px-4 py-4 space-y-1 text-sm rounded text-high-emphesis bg-dark-900\">\n            <div className=\"flex items-center justify-between\">\n              <div>{i18n._(t`Your total pool tokens`)}:</div>\n              <div className=\"font-semibold\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</div>\n            </div>\n            {/*\n            {stakedBalance && (\n              <div className=\"flex items-center justify-between\">\n                <div>{i18n._(t`Pool tokens in rewards pool`)}:</div>\n                <div className=\"font-semibold\">{stakedBalance.toSignificant(4)}</div>\n              </div>\n            )}\n            */}\n            <div className=\"flex items-center justify-between\">\n              <div>{i18n._(t`Pooled ${currency0?.symbol}`)}:</div>\n              {token0Deposited ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"font-semibold\">{token0Deposited?.toSignificant(6)}</div>\n                  <CurrencyLogo size=\"20px\" currency={currency0} />\n                </div>\n              ) : (\n                '-'\n              )}\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>{i18n._(t`Pooled ${currency1?.symbol}`)}:</div>\n              {token1Deposited ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"font-semibold \">{token1Deposited?.toSignificant(6)}</div>\n                  <CurrencyLogo size=\"20px\" currency={currency1} />\n                </div>\n              ) : (\n                '-'\n              )}\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>{i18n._(t`Your pool share`)}:</div>\n              <div className=\"font-semibold\">\n                {poolTokenPercentage\n                  ? (poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)) + '%'\n                  : '-'}\n              </div>\n            </div>\n          </div>\n          {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <Button\n                color=\"blue\"\n                onClick={() => {\n                  router.push(`/add/${currencyId(currency0)}/${currencyId(currency1)}`)\n                }}\n              >\n                {i18n._(t`Add`)}\n              </Button>\n              <Button\n                color=\"blue\"\n                onClick={() => {\n                  router.push(`/remove/${currencyId(currency0)}/${currencyId(currency1)}`)\n                }}\n              >\n                {i18n._(t`Remove`)}\n              </Button>\n            </div>\n          )}\n        </div>\n      </Transition>\n    </div>\n  )\n}\n","import { Currency, CurrencyAmount, Token } from '@mistswapdex/sdk'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token?.isToken && totalSupply ? CurrencyAmount.fromRawAmount(token, totalSupply.toString()) : undefined\n}\n","import { AppDispatch, AppState } from '../index'\nimport { Currency, CurrencyAmount, JSBI, Pair, Percent, Price, Token } from '@mistswapdex/sdk'\nimport { Field, typeInput } from './actions'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { t } from '@lingui/macro'\nimport { tryParseAmount } from '../../functions/parse'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { useLingui } from '@lingui/react'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(\n        typeInput({\n          field: Field.CURRENCY_A,\n          typedValue,\n          noLiquidity: noLiquidity === true,\n        })\n      )\n    },\n    [dispatch, noLiquidity]\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(\n        typeInput({\n          field: Field.CURRENCY_B,\n          typedValue,\n          noLiquidity: noLiquidity === true,\n        })\n      )\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { i18n } = useLingui()\n  const { account } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField]\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: {\n    [field in Field]: CurrencyAmount<Currency> | undefined\n  } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = i18n._(t`Connect Wallet`)\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? i18n._(t`Invalid pair`)\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? i18n._(t`Enter an amount`)\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = i18n._(t`Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`)\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = i18n._(t`Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`)\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["MinimalPositionCard","pair","showUnwrapped","i18n","border","useLingui","account","useActiveWeb3React","currency0","token0","unwrappedToken","currency1","token1","useState","userPoolBalance","useTokenBalance","undefined","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","quotient","Percent","getLiquidityValue","token0Deposited","token1Deposited","className","gap","size","symbol","toSignificant","_","toFixed","FullPositionCard","stakedBalance","router","useRouter","chainId","showMore","setShowMore","userDefaultPoolBalance","add","useColor","variant","classNames","style","boxShadow","onClick","width","height","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","currency","BIG_INT_ZERO","color","push","currencyId","token","contract","useTokenContract","isToken","address","totalSupply","useSingleCallResult","result","CurrencyAmount","toString","ZERO","useMintState","useSelector","state","mint","useMintActionHandlers","noLiquidity","dispatch","useDispatch","onFieldAInput","useCallback","typedValue","typeInput","field","Field","onFieldBInput","useDerivedMintInfo","currencyA","currencyB","error","independentField","otherTypedValue","dependentField","currencies","useMemo","useV2Pair","pairState","PairState","Boolean","reserve0","reserve1","balances","useCurrencyBalances","currencyBalances","independentAmount","tryParseAmount","dependentAmount","wrappedIndependentAmount","wrapped","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","parsedAmounts","price","wrappedCurrencyA","currencyAAmount","currencyBAmount","greaterThan","value","divide","Price","denominator","numerator","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","console","lessThan","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","_ref","ref","_ref$color","_ref$size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName"],"sourceRoot":""}