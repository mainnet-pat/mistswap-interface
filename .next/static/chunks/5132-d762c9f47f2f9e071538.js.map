{"version":3,"file":"static/chunks/5132-d762c9f47f2f9e071538.js","mappings":"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","sources":["webpack://_N_E/./src/components/CloseIcon/index.tsx","webpack://_N_E/./src/components/DoubleGlowShadow/index.tsx","webpack://_N_E/./src/components/DoubleLogo/index.tsx","webpack://_N_E/./src/components/Badge/index.tsx","webpack://_N_E/./src/hooks/useLimitOrders.ts","webpack://_N_E/./src/features/exchange-v1/limit-order/MyOrders.tsx","webpack://_N_E/./src/features/trade/Header.tsx","webpack://_N_E/./src/hooks/useTransactionDeadline.ts","webpack://_N_E/./src/hooks/useCurrentBlockTimestamp.ts","webpack://_N_E/./src/modals/TransactionConfirmationModal/index.tsx","webpack://_N_E/./src/hooks/useAddTokenToMetaMask.ts"],"sourcesContent":["import { X } from 'react-feather'\n\nconst CloseIcon = (props) => <X className=\"cursor-pointer\" {...props} />\n\nexport default CloseIcon\n","import { isMobile } from 'react-device-detect'\nimport { FC } from 'react'\nimport { classNames } from '../../functions'\n\nconst DoubleGlowShadow: FC<{ className?: string }> = ({ children, className }) => {\n  if (isMobile) {\n    return <div className=\"shadow-swap\">{children}</div>\n  }\n\n  return (\n    <div className={classNames(className, 'relative w-full max-w-2xl')}>\n      <div className=\"absolute top-1/4 -left-10 bg-purple bottom-4 w-3/5 rounded-full z-0 filter blur-[150px]\" />\n      <div className=\"absolute bottom-1/4 -right-10 bg-purple top-4 w-3/5 rounded-full z-0  filter blur-[150px]\" />\n      <div className=\"relative filter drop-shadow\">{children}</div>\n    </div>\n  )\n}\n\nexport default DoubleGlowShadow\n","import { Currency } from '@mistswapdex/sdk'\nimport CurrencyLogo from '../CurrencyLogo'\nimport React from 'react'\nimport { classNames } from '../../functions'\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n  className?: string\n  logoClassName?: string\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 16,\n  className,\n  logoClassName,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <div className={classNames('flex items-center space-x-2', className)}>\n      <CurrencyLogo className={logoClassName} currency={currency0} size={size.toString() + 'px'} />\n      <CurrencyLogo className={logoClassName} currency={currency1} size={size.toString() + 'px'} />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport type BadgeColor = 'default' | 'blue' | 'pink' | 'gradient'\nexport type BadgeSize = 'default' | 'medium' | 'large'\n\nexport interface BadgeProps {\n  children?: React.ReactChild | React.ReactChild[]\n  color?: BadgeColor\n  size?: BadgeSize\n}\n\nexport const COLOR = {\n  default: '',\n  blue: 'bg-blue bg-opacity-20 outline-blue rounded text-xs text-blue px-2 py-1',\n  pink: 'bg-pink bg-opacity-20 outline-pink rounded text-xs text-pink px-2 py-1',\n  gradient:\n    'bg-gradient-to-r from-blue to-pink opacity-80 hover:opacity-100 bg-pink bg-opacity-20 outline-pink rounded text-base text-white px-2 py-1',\n}\n\nexport const SIZE = {\n  default: 'text-xs',\n  medium: 'text-sm',\n  large: 'text-lg',\n}\n\nfunction Badge({\n  color = 'default',\n  size = 'default',\n  children,\n  className = '',\n}: BadgeProps & React.HTMLAttributes<HTMLDivElement>): JSX.Element {\n  return <div className={`${COLOR[color]} ${SIZE[size]} ${className}`}>{children}</div>\n}\n\nexport default Badge\n","import { JSBI, LAMBDA_URL, LimitOrder, OrderStatus, Percent, Token } from '@mistswapdex/sdk'\nimport { useActiveWeb3React, useLimitOrderContract } from '.'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport useSWR, { SWRResponse } from 'swr'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useAllTokens } from './Tokens'\n\ninterface State {\n  pending: {\n    page: number\n    maxPages: null\n    data: OpenOrder[]\n    loading: boolean\n    totalOrders: number\n  }\n  completed: {\n    page: number\n    maxPages: null\n    data: OpenOrder[]\n    loading: boolean\n    totalOrders: number\n  }\n}\n\ninterface OpenOrder {\n  tokenIn: Token\n  tokenOut: Token\n  filledPercent: string\n  limitOrder: LimitOrder\n  status: OrderStatus\n  rate: string\n}\n\nconst denominator = (decimals: number = 18) => JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals))\n\nconst viewUrl = `${LAMBDA_URL}/orders/view`\nconst viewFetcher = (url, account, chainId, pendingPage, page) => {\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ address: account, chainId, page, pendingPage }),\n  })\n    .then((r) => r.json())\n    .then((j) => j.data)\n}\n\nconst useLimitOrders = () => {\n  const { account, chainId } = useActiveWeb3React()\n  const limitOrderContract = useLimitOrderContract()\n  const tokens = useAllTokens()\n\n  const [state, setState] = useState<State>({\n    pending: {\n      page: 1,\n      maxPages: null,\n      data: [],\n      loading: true,\n      totalOrders: 0,\n    },\n    completed: {\n      page: 1,\n      maxPages: null,\n      data: [],\n      loading: true,\n      totalOrders: 0,\n    },\n  })\n\n  const shouldFetch = useMemo(\n    () =>\n      viewUrl && account && chainId ? [viewUrl, account, chainId, state.pending.page, state.completed.page] : null,\n    [account, chainId, state.completed.page, state.pending.page]\n  )\n\n  const { data: ordersData, mutate }: SWRResponse<any, Error> = useSWR(shouldFetch, viewFetcher)\n\n  const setPendingPage = useCallback((page: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      pending: {\n        ...prevState.pending,\n        page,\n        loading: true,\n      },\n    }))\n  }, [])\n\n  const setCompletedPage = useCallback((page: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      completed: {\n        ...prevState.completed,\n        page,\n        loading: true,\n      },\n    }))\n  }, [])\n\n  useEffect(() => {\n    if (\n      !account ||\n      !chainId ||\n      !ordersData ||\n      !ordersData.pendingOrders ||\n      !ordersData.otherOrders ||\n      !Array.isArray(ordersData.pendingOrders.orders) ||\n      !Array.isArray(ordersData.otherOrders.orders)\n    )\n      return\n\n    const transform = async (order: any) => {\n      const limitOrder = LimitOrder.getLimitOrder({\n        ...order,\n        chainId: +order.chainId,\n        tokenInDecimals: +order.tokenInDecimals,\n        tokenOutDecimals: +order.tokenOutDecimals,\n      })\n\n      const tokenIn = limitOrder.amountIn.currency\n      const tokenOut = limitOrder.amountOut.currency\n\n      const openOrder = {\n        tokenIn:\n          tokens[tokenIn.address] ||\n          new Token(chainId, tokenIn.address.toLowerCase(), tokenIn.decimals, tokenIn.symbol),\n        tokenOut:\n          tokens[tokenOut.address] ||\n          new Token(chainId, tokenOut.address.toLowerCase(), tokenOut.decimals, tokenOut.symbol),\n        limitOrder,\n        filledPercent: order.filledAmount\n          ? order.filledAmount.mul(BigNumber.from('100')).div(BigNumber.from(order.amountIn)).toString()\n          : '0',\n        status: order.status,\n        rate: new Percent(limitOrder.amountOut.quotient, denominator(tokenOut.decimals))\n          .divide(new Percent(limitOrder.amountIn.quotient, denominator(tokenIn.decimals)))\n          .divide(denominator(2))\n          .toSignificant(6),\n      }\n\n      return openOrder as OpenOrder\n    }\n\n    ;(async () => {\n      const openOrders = await Promise.all<OpenOrder>(ordersData.pendingOrders.orders.map((el) => transform(el)))\n      const completedOrders = await Promise.all<OpenOrder>(ordersData.otherOrders.orders.map((el) => transform(el)))\n\n      setState((prevState) => ({\n        pending: {\n          ...prevState.pending,\n          data: openOrders,\n          maxPages: ordersData.pendingOrders.pendingOrderMaxPage,\n          loading: false,\n          totalOrders: ordersData.pendingOrders.totalPendingOrders,\n        },\n        completed: {\n          ...prevState.completed,\n          data: completedOrders,\n          maxPages: ordersData.otherOrders.maxPage,\n          loading: false,\n          totalOrders: ordersData.otherOrders.totalOrders,\n        },\n      }))\n    })()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, chainId, ordersData, limitOrderContract, setPendingPage, setCompletedPage])\n\n  return useMemo(\n    () => ({\n      ...state,\n      pending: {\n        ...state.pending,\n        setPage: setPendingPage,\n      },\n      completed: {\n        ...state.completed,\n        setPage: setCompletedPage,\n      },\n      mutate,\n    }),\n    [mutate, setCompletedPage, setPendingPage, state]\n  )\n}\n\nexport default useLimitOrders\n","import React, { FC } from 'react'\n\nimport Badge from '../../../components/Badge'\nimport { ClipboardListIcon } from '@heroicons/react/outline'\nimport NavLink from '../../../components/NavLink'\nimport { t } from '@lingui/macro'\nimport useLimitOrders from '../../../hooks/useLimitOrders'\nimport { useLingui } from '@lingui/react'\n\nconst MyOrders: FC = () => {\n  const { i18n } = useLingui()\n  const { pending } = useLimitOrders()\n\n  return (\n    <NavLink href=\"/open-order\">\n      <a className=\"text-secondary hover:text-high-emphesis\">\n        <div className=\"md:flex hidden gap-3 items-center\">\n          <div>{i18n._(t`My Orders`)}</div>\n          <Badge color=\"blue\">{pending.totalOrders}</Badge>\n        </div>\n        <div className=\"flex md:hidden text-primary\">\n          <ClipboardListIcon className=\"w-[26px] h-[26px]\" />\n        </div>\n      </a>\n    </NavLink>\n  )\n}\n\nexport default MyOrders\n","import { ChainId, Currency, Percent } from '@mistswapdex/sdk'\nimport React, { FC, useState } from 'react'\n\nimport Gas from '../../components/Gas'\nimport MyOrders from '../exchange-v1/limit-order/MyOrders'\nimport NavLink from '../../components/NavLink'\nimport Settings from '../../components/Settings'\nimport { currencyId } from '../../functions'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useLingui } from '@lingui/react'\nimport { useRouter } from 'next/router'\n\nconst getQuery = (input, output) => {\n  if (!input && !output) return\n\n  if (input && !output) {\n    return { inputCurrency: input.address || 'BCH' }\n  } else if (input && output) {\n    return { inputCurrency: input.address, outputCurrency: output.address }\n  }\n}\n\ninterface ExchangeHeaderProps {\n  input?: Currency\n  output?: Currency\n  allowedSlippage?: Percent\n}\n\nconst ExchangeHeader: FC<ExchangeHeaderProps> = ({ input, output, allowedSlippage }) => {\n  const { i18n } = useLingui()\n  const { chainId } = useActiveWeb3React()\n  const router = useRouter()\n  const [animateWallet, setAnimateWallet] = useState(false)\n  const isRemove = router.asPath.startsWith('/remove')\n  const isLimitOrder = router.asPath.startsWith('/limit-order')\n\n  return (\n    <div className=\"flex items-center justify-between mb-4 space-x-3\">\n      <div className=\"grid grid-cols-2 rounded p-3px bg-dark-800 h-[46px]\">\n        <NavLink\n          activeClassName=\"font-bold border rounded text-high-emphesis border-dark-800 bg-gradient-to-r from-opaque-blue to-opaque-pink hover:from-blue hover:to-pink\"\n          href={{\n            pathname: '/swap',\n            query: getQuery(input, output),\n          }}\n        >\n          <a className=\"flex items-center justify-center px-4 text-base font-medium text-center rounded-md text-secondary hover:text-high-emphesis \">\n            {i18n._(t`Swap`)}\n          </a>\n        </NavLink>\n        <NavLink\n          activeClassName=\"font-bold border rounded text-high-emphesis border-dark-800 bg-gradient-to-r from-opaque-blue to-opaque-pink hover:from-blue hover:to-pink\"\n          href={`/${!isRemove ? 'add' : 'remove'}${input ? `/${currencyId(input)}` : ''}${\n            output ? `/${currencyId(output)}` : ''\n          }`}\n        >\n          <a className=\"flex items-center justify-center px-4 text-base font-medium text-center rounded-md text-secondary hover:text-high-emphesis\">\n            {i18n._(t`Liquidity`)}\n          </a>\n        </NavLink>\n      </div>\n      <div className=\"flex items-center\">\n        <div className=\"grid grid-flow-col gap-1\">\n          {isLimitOrder && (\n            <div className=\"items-center h-full w-full cursor-pointer hover:bg-dark-800 rounded px-3 py-1.5\">\n              <MyOrders />\n            </div>\n          )}\n          {/*chainId === ChainId.MAINNET && (\n            <div className=\"items-center hidden w-full h-full px-3 space-x-3 rounded cursor-pointer text-green text-opacity-80 hover:text-opacity-100 md:flex hover:bg-dark-800\">\n              <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M13.5215 0.618164L12.6818 1.57302L15.933 4.37393V13.2435C15.9114 13.6891 15.5239 14.0498 15.0502 14.0286C14.6196 14.0074 14.2751 13.6679 14.2536 13.2435V7.28093C14.2536 6.21998 13.3923 5.37122 12.3158 5.37122H11.8421V2.67641C11.8421 1.61546 10.9808 0.766697 9.90428 0.766697H1.93779C0.861242 0.766697 0 1.61546 0 2.67641V18.4421C0 18.9089 0.387559 19.2909 0.861242 19.2909H10.9808C11.4545 19.2909 11.8421 18.9089 11.8421 18.4421V6.64436H12.3158C12.6818 6.64436 12.9617 6.92021 12.9617 7.28093V13.2435C13.0048 14.4105 13.9737 15.3017 15.1579 15.2805C16.2775 15.2381 17.1818 14.3469 17.2248 13.2435V3.80102L13.5215 0.618164ZM9.66744 8.89358H2.17464V3.10079H9.66744V8.89358Z\"\n                  fill=\"#7CFF6B\"\n                />\n              </svg>\n\n              <div className=\"hidden md:block text-baseline\">\n                <Gas />\n              </div>\n            </div>\n          )*/}\n          <div className=\"relative flex items-center w-full h-full rounded hover:bg-dark-800\">\n            <Settings placeholderSlippage={allowedSlippage} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExchangeHeader\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useAppSelector } from '../state/hooks'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\nimport { useMemo } from 'react'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useAppSelector((state) => state.user.userDeadline)\n\n  const blockTimestamp = useCurrentBlockTimestamp()\n  // console.log({ ttl, blockTimestamp })\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { useMulticall2Contract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticall2Contract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { AlertTriangle, ArrowUpCircle, CheckCircle } from 'react-feather'\nimport { ChainId, Currency } from '@mistswapdex/sdk'\nimport React, { FC } from 'react'\nimport { Trans, t } from '@lingui/macro'\n\nimport Button from '../../components/Button'\nimport CloseIcon from '../../components/CloseIcon'\nimport ExternalLink from '../../components/ExternalLink'\nimport Image from '../../components/Image'\nimport Lottie from 'lottie-react'\nimport Modal from '../../components/Modal'\nimport ModalHeader from '../../components/ModalHeader'\nimport { RowFixed } from '../../components/Row'\nimport { getExplorerLink } from '../../functions/explorer'\nimport loadingRollingCircle from '../../animation/loading-rolling-circle.json'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport useAddTokenToMetaMask from '../../hooks/useAddTokenToMetaMask'\nimport { useLingui } from '@lingui/react'\n\ninterface ConfirmationPendingContentProps {\n  onDismiss: () => void\n  pendingText: string\n  pendingText2: string\n}\n\nexport const ConfirmationPendingContent: FC<ConfirmationPendingContentProps> = ({\n  onDismiss,\n  pendingText,\n  pendingText2,\n}) => {\n  const { i18n } = useLingui()\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <CloseIcon onClick={onDismiss} />\n      </div>\n      <div className=\"w-24 pb-4 m-auto\">\n        <Lottie animationData={loadingRollingCircle} autoplay loop />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-3\">\n        <div className=\"text-xl font-bold text-high-emphesis\">{i18n._(t`Waiting for Confirmation`)}</div>\n        <div className=\"font-bold\">{pendingText}</div>\n        <div className=\"font-bold\">{pendingText2}</div>\n        <div className=\"text-sm font-bold text-secondary\">{i18n._(t`Confirm this transaction in your wallet`)}</div>\n      </div>\n    </div>\n  )\n}\n\ninterface TransactionSubmittedContentProps {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n  inline?: boolean // not in modal\n}\n\nexport const TransactionSubmittedContent: FC<TransactionSubmittedContentProps> = ({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}) => {\n  const { i18n } = useLingui()\n  const { library } = useActiveWeb3React()\n  const { addToken, success } = useAddTokenToMetaMask(currencyToAdd)\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <CloseIcon onClick={onDismiss} />\n      </div>\n      <div className=\"w-24 pb-4 m-auto\">\n        <ArrowUpCircle strokeWidth={0.5} size={90} className=\"text-blue\" />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-1\">\n        <div className=\"text-xl font-bold\">{i18n._(t`Transaction Submitted`)}</div>\n        {chainId && hash && (\n          <ExternalLink href={getExplorerLink(chainId, hash, 'transaction')}>\n            <div className=\"font-bold text-blue\">View on explorer</div>\n          </ExternalLink>\n        )}\n        {currencyToAdd && library?.provider?.isMetaMask && (\n          <Button color=\"gradient\" onClick={addToken} className=\"w-auto mt-4\">\n            {!success ? (\n              <RowFixed className=\"mx-auto space-x-2\">\n                <span>{i18n._(t`Add ${currencyToAdd.symbol} to MetaMask`)}</span>\n                <Image\n                  src=\"/images/wallets/metamask.png\"\n                  alt={i18n._(t`Add ${currencyToAdd.symbol} to MetaMask`)}\n                  width={24}\n                  height={24}\n                  className=\"ml-1\"\n                />\n              </RowFixed>\n            ) : (\n              <RowFixed>\n                {i18n._(t`Added`)} {currencyToAdd.symbol}\n                {/* <CheckCircle className=\"ml-1.5 text-2xl text-green\" size=\"16px\" /> */}\n              </RowFixed>\n            )}\n          </Button>\n        )}\n        {/* <Button color=\"gradient\" onClick={onDismiss} style={{ margin: '20px 0 0 0' }}>\n          Close\n        </Button> */}\n      </div>\n    </div>\n  )\n}\n\ninterface ConfirmationModelContentProps {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}\n\nexport const ConfirmationModalContent: FC<ConfirmationModelContentProps> = ({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent,\n}) => {\n  return (\n    <div className=\"grid gap-4\">\n      <ModalHeader title={title} onClose={onDismiss} />\n      {topContent()}\n      {bottomContent()}\n    </div>\n  )\n}\n\ninterface TransactionErrorContentProps {\n  message: string\n  onDismiss: () => void\n}\n\nexport const TransactionErrorContent: FC<TransactionErrorContentProps> = ({ message, onDismiss }) => {\n  const { i18n } = useLingui()\n\n  return (\n    <div className=\"grid gap-6\">\n      <div>\n        <div className=\"flex justify-between\">\n          <div className=\"text-lg font-medium text-high-emphesis\">{i18n._(t`Error`)}</div>\n          <CloseIcon onClick={onDismiss} />\n        </div>\n        <div className=\"flex flex-col items-center justify-center gap-3\">\n          <AlertTriangle className=\"text-red\" style={{ strokeWidth: 1.5 }} size={64} />\n          <div className=\"font-bold text-red\">{message}</div>\n        </div>\n      </div>\n      <div>\n        <Button color=\"gradient\" size=\"lg\" onClick={onDismiss}>\n          Dismiss\n        </Button>\n      </div>\n    </div>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  pendingText2?: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: FC<ConfirmationModalProps> = ({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  pendingText2,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} pendingText2={pendingText2} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Currency, Token } from '@mistswapdex/sdk'\nimport { useCallback, useState } from 'react'\n\nimport { getCurrencyLogoUrls } from './../components/CurrencyLogo'\nimport { useActiveWeb3React } from './useActiveWeb3React'\n\nexport default function useAddTokenToMetaMask(currencyToAdd: Currency | undefined): {\n  addToken: () => void\n  success: boolean | undefined\n} {\n  const { chainId, library } = useActiveWeb3React()\n\n  const token: Token | undefined = currencyToAdd?.wrapped\n\n  const [success, setSuccess] = useState<boolean | undefined>()\n\n  const addToken = useCallback(() => {\n    if (library && library.provider.isMetaMask && library.provider.request && token) {\n      library.provider\n        .request({\n          method: 'wallet_watchAsset',\n          params: {\n            //@ts-ignore // need this for incorrect ethers provider type\n            type: 'ERC20',\n            options: {\n              address: token.address,\n              symbol: token.symbol,\n              decimals: token.decimals,\n              image: `https://raw.githubusercontent.com/mistswapdex/assets/master/blockchains/smartbch/assets/${token.address}/logo.png`,\n            },\n          },\n        })\n        .then((success) => {\n          setSuccess(success)\n        })\n        .catch(() => setSuccess(false))\n    } else {\n      setSuccess(false)\n    }\n  }, [library, token])\n\n  return { addToken, success }\n}\n"],"names":["props","className","children","isMobile","classNames","DoubleCurrencyLogo","currency0","currency1","size","logoClassName","currency","toString","COLOR","default","blue","pink","gradient","SIZE","medium","large","color","denominator","decimals","JSBI","viewUrl","LAMBDA_URL","viewFetcher","url","account","chainId","pendingPage","page","fetch","method","body","JSON","stringify","address","then","r","json","j","data","useActiveWeb3React","limitOrderContract","useLimitOrderContract","tokens","useAllTokens","useState","pending","maxPages","loading","totalOrders","completed","state","setState","shouldFetch","useMemo","useSWR","ordersData","mutate","setPendingPage","useCallback","prevState","setCompletedPage","useEffect","pendingOrders","otherOrders","Array","isArray","orders","transform","order","limitOrder","LimitOrder","tokenInDecimals","tokenOutDecimals","tokenIn","amountIn","tokenOut","amountOut","openOrder","Token","toLowerCase","symbol","filledPercent","filledAmount","mul","BigNumber","div","status","rate","Percent","quotient","divide","toSignificant","Promise","all","map","el","openOrders","completedOrders","pendingOrderMaxPage","totalPendingOrders","maxPage","setPage","i18n","useLingui","useLimitOrders","NavLink","href","_","getQuery","input","output","inputCurrency","outputCurrency","allowedSlippage","router","useRouter","isRemove","asPath","startsWith","isLimitOrder","activeClassName","pathname","query","currencyId","Settings","placeholderSlippage","useTransactionDeadline","ttl","useAppSelector","user","userDeadline","blockTimestamp","multicall","useMulticall2Contract","useSingleCallResult","result","useCurrentBlockTimestamp","add","ConfirmationPendingContent","onDismiss","pendingText","pendingText2","CloseIcon","onClick","animationData","loadingRollingCircle","autoplay","loop","TransactionSubmittedContent","hash","currencyToAdd","library","token","wrapped","success","setSuccess","addToken","provider","isMetaMask","request","params","type","options","image","catch","useAddTokenToMetaMask","strokeWidth","ExternalLink","getExplorerLink","Button","Row","Image","src","alt","width","height","ConfirmationModalContent","title","bottomContent","topContent","ModalHeader","onClose","TransactionErrorContent","message","style","isOpen","attemptingTxn","content","Modal","maxHeight"],"sourceRoot":""}