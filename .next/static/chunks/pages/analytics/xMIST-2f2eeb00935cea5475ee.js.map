{"version":3,"file":"static/chunks/pages/analytics/xMIST-2f2eeb00935cea5475ee.js","mappings":"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","sources":["webpack://_N_E/./src/components/Sidebar/index.tsx","webpack://_N_E/./src/features/analytics/AnalyticsContainer.tsx","webpack://_N_E/./src/features/analytics/Background.tsx","webpack://_N_E/./src/features/analytics/ColoredNumber.tsx","webpack://_N_E/./src/functions/convert/apyApr.ts","webpack://_N_E/./src/components/ScrollableGraph/Curve.tsx","webpack://_N_E/./src/components/ScrollableGraph/Curves.tsx","webpack://_N_E/./src/components/ScrollableGraph/index.tsx","webpack://_N_E/./src/features/analytics/Bar/InfoCard.tsx","webpack://_N_E/./src/services/graph/queries/bar.ts","webpack://_N_E/./src/services/graph/fetchers/bar.ts","webpack://_N_E/./src/services/graph/hooks/bar.ts","webpack://_N_E/./src/pages/analytics/xMIST.tsx","webpack://_N_E/?02ac"],"sourcesContent":["import NavLink from '../../components/NavLink'\nimport React from 'react'\n\nconst Sidebar = ({ items }) => {\n  return (\n    <div className=\"mt-4 space-y-4\">\n      {items.map((item, i) => (\n        <NavLink key={i} href={item.href} activeClassName=\"font-bold text-high-emphesis bg-dark-800\">\n          <a className=\"flex items-center px-1 py-3 border-transparent rounded hover:bg-dark-900\">\n            <div className=\"ml-5\">{item.text}</div>\n          </a>\n        </NavLink>\n      ))}\n    </div>\n  )\n}\n\nexport default Sidebar\n","import Container from '../../components/Container'\nimport Head from 'next/head'\nimport Sidebar from '../../components/Sidebar'\n\nexport default function AnalyticsContainer({ children }): JSX.Element {\n  return (\n    <>\n      <Head>\n        <title>MISTswap Liquidity Pair (MLP) Analytics | Mist</title>\n        <meta name=\"description\" content=\"MISTswap Liquidity Pair (SLP) Analytics by Mist\" />\n      </Head>\n\n      <Container id=\"analytics\" maxWidth=\"full\" className=\"grid h-full grid-flow-col grid-cols-10 px-4 mx-auto gap-9\">\n        <div className=\"sticky top-0 hidden lg:block md:col-span-2 3xl:col-start-2 3xl:col-span-1\">\n          <Sidebar\n            items={[\n              {\n                text: 'Dashboard',\n                href: '/analytics/dashboard',\n              },\n              {\n                text: 'xMist',\n                href: '/analytics/xMIST',\n              },\n              {\n                text: 'Farms',\n                href: '/analytics/farms',\n              },\n              {\n                text: 'Pairs',\n                href: '/analytics/pairs',\n              },\n              {\n                text: 'Tokens',\n                href: '/analytics/tokens',\n              },\n            ]}\n          />\n        </div>\n        <div className=\"col-span-10 lg:border-l lg:col-span-8 3xl:col-span-7 border-dark-700\">{children}</div>\n      </Container>\n    </>\n  )\n}\n","import Image from 'next/image'\nimport React from 'react'\nimport { classNames } from '../../functions'\n\ninterface BackgroundProps {\n  background: 'dashboard' | 'bar' | 'farms' | 'pool' | 'pools' | 'token' | 'tokens'\n  children: any\n}\n\nconst backgrounds = {\n  dashboard: '/analytics-background-dashboard.jpg',\n  bar: '/analytics-background-bar.jpg',\n  farms: '/analytics-background-farms.jpg',\n  pool: `/formal-invitation.svg`,\n  pools: '/analytics-background-pools.jpg',\n  token: `/happy-intersection.svg`,\n  tokens: '/analytics-background-tokens.jpg',\n}\n\nexport default function Background({ background, children }: BackgroundProps) {\n  return (\n    <div className=\"h-[200px] md:h-[151px] w-full relative bg-dark-900\">\n      <div\n        className={classNames(\n          'absolute w-full h-full',\n          !backgrounds[background].includes('svg') && 'bg-cover bg-center opacity-[0.15]'\n        )}\n        style={{\n          backgroundImage: `url('${backgrounds[background]}')`,\n          WebkitMaskImage: `url('${backgrounds[background]}')`,\n        }}\n      />\n      <div className=\"absolute w-full py-8 px-14 z-1\">{children}</div>\n    </div>\n  )\n}\n","import { classNames, formatNumber, formatNumberScale, formatPercent } from '../../functions'\n\ninterface ColoredNumberProps {\n  number: number\n  scaleNumber?: boolean\n  percent?: boolean\n  className?: string\n}\n\nexport default function ColoredNumber({\n  number,\n  scaleNumber = true,\n  percent = false,\n  className = '',\n}: ColoredNumberProps): JSX.Element {\n  if (isNaN(number) || number === Infinity) number = 0\n\n  return (\n    <>\n      <div className={classNames(number >= 0 ? 'text-green' : 'text-red', 'font-normal', className)}>\n        {(number >= 0 ? '+' : '-') +\n          (percent\n            ? formatPercent(number).replace('-', '')\n            : scaleNumber\n            ? formatNumberScale(number, true).replace('-', '')\n            : formatNumber(number, true, false).replace('-', ''))}\n      </div>\n    </>\n  )\n}\n","// From https://gist.github.com/sterlu/4b44f59ea665819974ae684d7f564d9b\n\nconst SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60\nconst BLOCKS_IN_A_YEAR = SECONDS_PER_YEAR / 14\n\n/**\n * Formula source: http://www.linked8.com/blog/158-apy-to-apr-and-apr-to-apy-calculation-methodologies\n *\n * @param apy {Number} APY as percentage (ie. 6)\n * @param frequency {Number} Compounding frequency (times a year)\n * @returns {Number} APR as percentage (ie. 5.82 for APY of 6%)\n */\nexport const apyToApr = (apy, frequency = BLOCKS_IN_A_YEAR) =>\n  ((1 + apy / 100) ** (1 / frequency) - 1) * frequency * 100\n\n/**\n * Formula source: http://www.linked8.com/blog/158-apy-to-apr-and-apr-to-apy-calculation-methodologies\n *\n * @param apr {Number} APR as percentage (ie. 5.82)\n * @param frequency {Number} Compounding frequency (times a year)\n * @returns {Number} APY as percentage (ie. 6 for APR of 5.82%)\n */\nexport const aprToApy = (apr, frequency = BLOCKS_IN_A_YEAR) => ((1 + apr / 100 / frequency) ** frequency - 1) * 100\n","import { AxisBottom, AxisLeft, AxisScale } from '@visx/axis'\nimport { GradientTealBlue, LinearGradient } from '@visx/gradient'\n\nimport { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport React from 'react'\nimport { curveNatural } from '@visx/curve'\nimport millify from 'millify'\n\n// Initialize some variables\nconst axisColor = 'currentColor'\n\nconst axisBottomTickLabelProps = {\n  textAnchor: 'middle' as 'middle',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  fill: axisColor,\n}\n\nconst axisLeftTickLabelProps = {\n  dx: '-0.25em',\n  dy: '0.25em',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  textAnchor: 'end' as 'end',\n  fill: axisColor,\n}\n\n// accessors\nconst getX = (d) => new Date(d.date)\nconst getY = (d) => Number(d.value)\n\nexport default function CurveChart({\n  data,\n  gradientColor = undefined,\n  index = undefined,\n  even = undefined,\n  height = undefined,\n  width,\n  yMax = undefined,\n  margin = { top: 0, right: 0, bottom: 0, left: 0 },\n  xScale = undefined,\n  yScale = undefined,\n  hideBottomAxis = false,\n  hideLeftAxis = false,\n  top = undefined,\n  left = undefined,\n  children = undefined,\n  stroke = undefined,\n  strokeWidth = undefined,\n  strokeOpacity = undefined,\n  markerMid = undefined,\n  markerStart = undefined,\n  markerEnd = undefined,\n}) {\n  if (width < 10) return null\n  return (\n    <Group left={left || margin.left} top={top || margin.top}>\n      <LinePath\n        curve={curveNatural}\n        data={data}\n        x={(d) => xScale(getX(d)) ?? 0}\n        y={(d) => yScale(getY(d)) ?? 0}\n        stroke={stroke}\n        strokeWidth={strokeWidth}\n        strokeOpacity={strokeOpacity}\n        shapeRendering=\"geometricPrecision\"\n        markerMid={markerMid}\n        markerStart={markerStart}\n        markerEnd={markerEnd}\n      />\n      {!hideBottomAxis && (\n        <AxisBottom\n          top={yMax}\n          scale={xScale}\n          numTicks={width > 520 ? 10 : 5}\n          stroke={axisColor}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisBottomTickLabelProps}\n        />\n      )}\n      {!hideLeftAxis && (\n        <AxisLeft\n          scale={yScale}\n          numTicks={5}\n          tickFormat={millify as any}\n          stroke={axisColor}\n          tickStroke={axisColor}\n          tickLabelProps={() => axisLeftTickLabelProps}\n        />\n      )}\n      {children}\n    </Group>\n  )\n}\n","import { AxisBottom, AxisLeft } from '@visx/axis'\nimport { GridColumns, GridRows } from '@visx/grid'\nimport { MarkerArrow, MarkerCross, MarkerLine, MarkerX } from '@visx/marker'\nimport { scaleLinear, scaleOrdinal, scaleTime } from '@visx/scale'\nimport { timeFormat, timeParse } from 'd3-time-format'\nimport { useMemo, useState } from 'react'\n\nimport { Brush } from '@visx/brush'\nimport Curve from './Curve'\nimport { Group } from '@visx/group'\nimport { LegendOrdinal } from '@visx/legend'\nimport { LinearGradient } from '@visx/gradient'\nimport { PatternLines } from '@visx/pattern'\nimport React from 'react'\nimport { Text } from '@visx/text'\nimport { extent } from 'd3-array'\nimport millify from 'millify'\n\nexport const getX = (data) => new Date(data.date)\nexport const getY = (data) => data.value\n\nconst brushMargin = { top: 10, bottom: 15, left: 50, right: 20 }\nconst chartSeparation = 30\nconst PATTERN_ID = 'brush_pattern'\n\nconst accentColor = '#6c5efb'\n\nconst selectedBrushStyle = {\n  fill: `url(#${PATTERN_ID})`,\n  stroke: 'currentColor',\n}\n\nconst parseDate = timeParse('%Y-%m-%d')\n\nconst format = timeFormat('%b %d')\n\nconst formatDate = (date) => format(parseDate(date))\n\nconst axisColor = 'currentColor'\n\nconst axisBottomTickLabelProps = {\n  textAnchor: 'middle' as 'middle',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  fill: axisColor,\n}\nconst axisLeftTickLabelProps = {\n  dx: '-0.25em',\n  dy: '0.25em',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  textAnchor: 'end' as 'end',\n  fill: axisColor,\n}\n\nconst purple1 = '#6c5efb'\nconst purple2 = '#c998ff'\nconst purple3 = '#a44afe'\n\nconst Curves = ({\n  compact = false,\n  width,\n  height,\n  margin = { top: 0, right: 0, bottom: 0, left: 0 },\n  data,\n  title = undefined,\n  labels = undefined,\n  note = undefined,\n  colors = [purple1, purple2, purple3],\n}) => {\n  const allData = data.reduce((previousValue, currentValue) => previousValue.concat(currentValue), [])\n\n  const [filteredData, setFilteredData] = useState(\n    data.map((curve) => curve.slice(curve.length - 30, curve.length - 1))\n  )\n\n  const onBrushChange = (domain) => {\n    if (!domain) return\n    const { x0, x1, y0, y1 } = domain\n    const stockCopy = data.map((d) =>\n      d.filter((s) => {\n        const x = getX(s).getTime()\n        const y = getY(s)\n        return x > x0 && x < x1 && y > y0 && y < y1\n      })\n    )\n    setFilteredData(stockCopy)\n  }\n\n  const innerHeight = height - margin.top - margin.bottom\n\n  const topChartBottomMargin = compact ? chartSeparation / 2 : chartSeparation + 10\n\n  const topChartHeight = 0.8 * innerHeight - topChartBottomMargin\n\n  const bottomChartHeight = innerHeight - topChartHeight - chartSeparation\n\n  // Max\n  const xMax = Math.max(width - margin.left - margin.right, 0)\n  const yMax = Math.max(topChartHeight, 0)\n\n  // scales\n  const xScale = useMemo(\n    () =>\n      scaleTime({\n        range: [0, xMax],\n        domain: extent(\n          filteredData.reduce((previousValue, currentValue) => previousValue.concat(currentValue), []),\n          getX\n        ),\n      }),\n    [xMax, filteredData]\n  )\n\n  const yScale = useMemo(\n    () =>\n      scaleLinear({\n        range: [yMax, 0],\n        domain: [\n          Math.min(\n            ...filteredData\n              .reduce((previousValue, currentValue) => previousValue.concat(currentValue), [])\n              .map((d) => getY(d))\n          ),\n          Math.max(\n            ...filteredData\n              .reduce((previousValue, currentValue) => previousValue.concat(currentValue), [])\n              .map((d) => getY(d))\n          ),\n        ],\n        nice: true,\n      }),\n    [yMax, filteredData]\n  )\n\n  const xBrushMax = Math.max(width - brushMargin.left - brushMargin.right, 0)\n  const yBrushMax = Math.max(bottomChartHeight - brushMargin.top - brushMargin.bottom, 0)\n\n  const brushXScale = useMemo(\n    () =>\n      scaleTime({\n        range: [0, xBrushMax],\n        domain: extent(allData, getX),\n      }),\n    [xBrushMax]\n  )\n  const brushYScale = useMemo(\n    () =>\n      scaleLinear({\n        range: [yBrushMax, 0],\n        domain: [Math.min(...allData.map((d) => getY(d))), Math.max(...allData.map((d) => getY(d)))],\n        nice: true,\n      }),\n    [yBrushMax]\n  )\n\n  const initialBrushPosition = useMemo(\n    () => ({\n      start: {\n        x: brushXScale(getX(data[0][data[0].length >= 60 ? data[0].length - 60 : 0])),\n      },\n      end: { x: brushXScale(getX(data[0][data[0].length - 1])) },\n    }),\n    [brushXScale]\n  )\n\n  const colorScale = scaleOrdinal({\n    domain: labels,\n    range: colors,\n  })\n\n  if (width < 10) {\n    return null\n  }\n\n  return (\n    <div className=\"w-full h-full\">\n      {labels && (\n        <div\n          className=\"absolute flex justify-center w-full text-base\"\n          style={{\n            top: margin.top / 2 - 10,\n          }}\n        >\n          <LegendOrdinal scale={colorScale} direction=\"row\" labelMargin=\"0 15px 0 0\" />\n        </div>\n      )}\n\n      {title && (\n        <div\n          className=\"absolute flex justify-center w-full text-base\"\n          style={{\n            top: margin.top / 2 - 10,\n          }}\n        >\n          <LegendOrdinal scale={scaleOrdinal({ domain: [title] })} direction=\"row\" labelMargin=\"0 15px 0 0\" />\n        </div>\n      )}\n\n      {note && (\n        <div\n          className=\"absolute flex justify-end w-full text-sm\"\n          style={{\n            top: margin.top / 2 - 10,\n            right: margin.right,\n          }}\n        >\n          <LegendOrdinal scale={scaleOrdinal({ domain: [note] })} direction=\"row\" labelMargin=\"0 4px 0 0\" />\n        </div>\n      )}\n\n      <svg width={width} height={height}>\n        <rect x={0} y={0} width={width} height={height} fill=\"transparent\" />\n        <GridRows\n          top={margin.top}\n          left={margin.left}\n          scale={yScale}\n          width={xMax}\n          height={yMax}\n          strokeDasharray=\"1,3\"\n          stroke=\"currentColor\"\n          strokeOpacity={0.2}\n          pointerEvents=\"none\"\n        />\n        <GridColumns\n          top={margin.top}\n          left={margin.left}\n          scale={xScale}\n          height={yMax}\n          strokeDasharray=\"1,3\"\n          stroke=\"currentColor\"\n          strokeOpacity={0.2}\n          pointerEvents=\"none\"\n        />\n        <Group top={margin.top} left={margin.left}>\n          {width > 8 &&\n            filteredData.map((curve, i) => {\n              const even = i % 2 === 0\n              let markerStart = even ? 'url(#marker-cross)' : 'url(#marker-x)'\n              if (i === 1) markerStart = 'url(#marker-line)'\n              const markerEnd = even ? 'url(#marker-arrow)' : 'url(#marker-arrow-odd)'\n              return (\n                <Group\n                  key={`chart-${i}`}\n                  // top={margin.top}\n                  // left={margin.left}\n                  // right={margin.right}\n                >\n                  <MarkerX id=\"marker-x\" stroke={colors[i]} size={22} strokeWidth={4} markerUnits=\"userSpaceOnUse\" />\n                  <MarkerCross\n                    id=\"marker-cross\"\n                    stroke={colors[i]}\n                    size={22}\n                    strokeWidth={4}\n                    strokeOpacity={0.6}\n                    markerUnits=\"userSpaceOnUse\"\n                  />\n                  {/* <MarkerCircle\n                    id=\"marker-circle\"\n                    fill={colors[i]}\n                    size={2}\n                    refX={2}\n                  /> */}\n                  <MarkerArrow id=\"marker-arrow-odd\" stroke={colors[i]} size={8} strokeWidth={1} />\n                  <MarkerLine id=\"marker-line\" fill={colors[i]} size={16} strokeWidth={1} />\n                  <MarkerArrow id=\"marker-arrow\" fill={colors[i]} refX={2} size={6} />\n                  <Curve\n                    hideBottomAxis\n                    hideLeftAxis\n                    data={curve}\n                    width={width}\n                    xScale={xScale}\n                    yScale={yScale}\n                    stroke={colors[i]}\n                    strokeWidth={2}\n                    strokeOpacity={1}\n                    markerMid=\"url(#marker-circle)\"\n                    markerStart={markerStart}\n                    markerEnd={markerEnd}\n                  />\n                </Group>\n              )\n            })}\n          <AxisBottom\n            top={yMax}\n            scale={xScale}\n            numTicks={width > 520 ? 10 : 5}\n            stroke={axisColor}\n            tickStroke={axisColor}\n            tickLabelProps={() => axisBottomTickLabelProps}\n          />\n          <AxisLeft\n            scale={yScale}\n            numTicks={5}\n            tickFormat={millify as any}\n            stroke={axisColor}\n            tickStroke={axisColor}\n            tickLabelProps={() => axisLeftTickLabelProps}\n          />\n        </Group>\n\n        <Group top={topChartHeight + topChartBottomMargin + margin.top} left={brushMargin.left}>\n          {data.map((brushData, i) => {\n            const even = i % 2 === 0\n            let markerStart = even ? 'url(#marker-cross)' : 'url(#marker-x)'\n            if (i === 1) markerStart = 'url(#marker-line)'\n            const markerEnd = even ? 'url(#marker-arrow)' : 'url(#marker-arrow-odd)'\n            return (\n              <Curve\n                stroke={colors[i]}\n                strokeWidth={2}\n                strokeOpacity={1}\n                hideBottomAxis\n                hideLeftAxis\n                data={brushData}\n                width={width}\n                yMax={yBrushMax}\n                xScale={brushXScale}\n                yScale={brushYScale}\n                key={i}\n              />\n            )\n          })}\n          <PatternLines\n            id={PATTERN_ID}\n            height={8}\n            width={8}\n            stroke={accentColor}\n            strokeWidth={1}\n            orientation={['diagonal']}\n          />\n          <Brush\n            xScale={brushXScale}\n            yScale={brushYScale}\n            width={xBrushMax}\n            height={yBrushMax}\n            margin={brushMargin}\n            handleSize={8}\n            resizeTriggerAreas={['left', 'right']}\n            brushDirection=\"horizontal\"\n            initialBrushPosition={initialBrushPosition}\n            onChange={onBrushChange}\n            onClick={() => setFilteredData(data)}\n            selectedBoxStyle={selectedBrushStyle}\n          />\n        </Group>\n      </svg>\n    </div>\n  )\n}\nexport default Curves\n","import AutoSizer from 'react-virtualized-auto-sizer'\nimport Curves from './Curves'\n\ninterface ScrollableGraphProps {\n  compact?: boolean\n  margin?: {\n    top: number\n    right: number\n    bottom: number\n    left: number\n  }\n  data: any\n  title?: string\n  labels?: string[]\n  note?: string\n  colors?: any[]\n}\n\nexport default function ScrollableGraph(props: ScrollableGraphProps) {\n  return (\n    <>\n      {props.data && props.data[0]?.length !== 0 && (\n        <AutoSizer>{({ width, height }) => <Curves {...props} width={width} height={height} />}</AutoSizer>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { formatNumber } from '../../../functions'\n\ninterface InfoCardProps {\n  text: string\n  number: string\n}\n\nexport default function InfoCard({ text, number }: InfoCardProps) {\n  return (\n    <div className=\"w-full py-3 border rounded px-9 bg-dark-900 border-dark-700\">\n      <div className=\"whitespace-nowrap\">{text}</div>\n      <div className=\"text-2xl font-bold\">{number}</div>\n    </div>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const barQuery = gql`\n  query barQuery($id: String! = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\", $block: Block_height) {\n    bar(id: $id, block: $block) {\n      id\n      totalSupply\n      ratio\n      xSushiMinted\n      xSushiBurned\n      sushiStaked\n      sushiStakedUSD\n      sushiHarvested\n      sushiHarvestedUSD\n      xSushiAge\n      xSushiAgeDestroyed\n      # histories(first: 1000) {\n      #   id\n      #   date\n      #   timeframe\n      #   sushiStaked\n      #   sushiStakedUSD\n      #   sushiHarvested\n      #   sushiHarvestedUSD\n      #   xSushiAge\n      #   xSushiAgeDestroyed\n      #   xSushiMinted\n      #   xSushiBurned\n      #   xSushiSupply\n      #   ratio\n      # }\n    }\n  }\n`\n\nexport const barHistoriesQuery = gql`\n  query barHistoriesQuery {\n    histories(first: 1000) {\n      id\n      date\n      timeframe\n      sushiStaked\n      sushiStakedUSD\n      sushiHarvested\n      sushiHarvestedUSD\n      xSushiAge\n      xSushiAgeDestroyed\n      xSushiMinted\n      xSushiBurned\n      xSushiSupply\n      ratio\n    }\n  }\n`\n\nexport const barUserQuery = gql`\n  query barUserQuery($id: String!) {\n    user(id: $id) {\n      id\n      bar {\n        totalSupply\n        sushiStaked\n      }\n      xSushi\n      sushiStaked\n      sushiStakedUSD\n      sushiHarvested\n      sushiHarvestedUSD\n      xSushiIn\n      xSushiOut\n      xSushiOffset\n      xSushiMinted\n      xSushiBurned\n      sushiIn\n      sushiOut\n      usdIn\n      usdOut\n      createdAt\n      createdAtBlock\n    }\n  }\n`\n","import { ChainId } from '@mistswapdex/sdk'\nimport { GRAPH_HOST } from '../constants'\nimport { request } from 'graphql-request'\nimport { barHistoriesQuery, barQuery } from '../queries/bar'\nimport { useActiveWeb3React } from '../../../hooks'\n\nconst BAR = {\n  [ChainId.SMARTBCH]: 'mistswap/bar',\n  [ChainId.SMARTBCH_AMBER]: 'mistswap/bar',\n}\n\nexport const bar = async (query, variables = undefined) => {\n  const { chainId } = useActiveWeb3React()\n\n  request(`${GRAPH_HOST[chainId]}/subgraphs/name/${BAR[chainId]}`, query, variables)\n}\n\nexport const getBar = async (block: number) => {\n  const { bar: barData }: any = await bar(barQuery, { block: block ? { number: block } : undefined })\n  return barData\n}\n\nexport const getBarHistory = async () => {\n  const { histories }: any = await bar(barHistoriesQuery)\n  return histories\n}\n","import useSWR, { SWRConfiguration } from 'swr'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { getBar, getBarHistory } from '../fetchers/bar'\nimport { useBlock } from './blocks'\n\ninterface useBarProps {\n  timestamp?: number\n  block?: number\n  shouldFetch?: boolean\n}\n\nexport function useBar(\n  { timestamp, block, shouldFetch = true }: useBarProps = {},\n  swrConfig: SWRConfiguration = undefined\n) {\n  const blockFetched = useBlock({ timestamp, shouldFetch: shouldFetch && !!timestamp })\n  block = block ?? (timestamp ? blockFetched : undefined)\n\n  const { data } = useSWR(shouldFetch ? ['bar', block] : null, () => getBar(block), swrConfig)\n  return data\n}\n\ninterface useBarHistoryProps {\n  shouldFetch?: boolean\n}\n\nexport function useBarHistory(\n  { shouldFetch = true }: useBarHistoryProps = {},\n  swrConfig: SWRConfiguration = undefined\n) {\n  const { data } = useSWR(shouldFetch ? ['barHistory'] : null, () => getBarHistory(), swrConfig)\n  return data\n}\n","import { MIST_ADDRESS } from '@mistswapdex/sdk'\nimport React, { useMemo } from 'react'\nimport ScrollableGraph from '../../components/ScrollableGraph'\nimport AnalyticsContainer from '../../features/analytics/AnalyticsContainer'\nimport Background from '../../features/analytics/Background'\nimport InfoCard from '../../features/analytics/Bar/InfoCard'\nimport { classNames, formatNumber, formatPercent } from '../../functions'\nimport { aprToApy } from '../../functions/convert/apyApr'\nimport {\n  useBlock,\n  useDayData,\n  useEthPrice,\n  useFactory,\n  useNativePrice,\n  useTokenDayData,\n  useTokens,\n} from '../../services/graph'\nimport { useBar, useBarHistory } from '../../services/graph/hooks/bar'\nimport ColoredNumber from '../../features/analytics/ColoredNumber'\nimport { XMIST } from '../../config/tokens'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\n\nexport default function XMIST_PAGE() {\n  const { chainId } = useActiveWeb3React()\n  const block1d = useBlock({ daysAgo: 1, chainId })\n\n  const exchange = useFactory({ chainId: chainId})\n  const exchange1d = useFactory({ block: block1d, chainId })\n\n  const dayData = useDayData()\n\n  const ethPrice = useNativePrice({ chainId })\n  const ethPrice1d = useNativePrice({ block: block1d, chainId, shouldFetch: !!block1d })\n\n  const xSushi = useTokens({ chainId, subset: [XMIST[chainId].address] })?.[0]\n  const xSushi1d = useTokens({ block: block1d, chainId, subset: [XMIST[chainId].address] })?.[0]\n  const sushiDayData = useTokenDayData({ token: MIST_ADDRESS[chainId], chainId })\n\n  const bar = useBar()\n  const bar1d = useBar({ block: block1d, shouldFetch: !!block1d })\n  const barHistory = useBarHistory()\n\n  const [xSushiPrice, xSushiMarketcap] = [\n    xSushi?.derivedETH * ethPrice,\n    xSushi?.derivedETH * ethPrice * bar?.totalSupply,\n  ]\n\n  const [xSushiPrice1d, xSushiMarketcap1d] = [\n    xSushi1d?.derivedETH * ethPrice1d,\n    xSushi1d?.derivedETH * ethPrice1d * bar1d?.totalSupply,\n  ]\n\n  const data = useMemo(\n    () =>\n      barHistory && dayData && sushiDayData && bar\n        ? barHistory.map((barDay) => {\n            const exchangeDay = dayData.find((day) => day.date === barDay.date)\n            const sushiDay = sushiDayData.find((day) => day.date === barDay.date)\n\n            const totalSushiStakedUSD = barDay.xSushiSupply * barDay.ratio * sushiDay.priceUSD\n\n            const APR =\n              totalSushiStakedUSD !== 0 ? ((exchangeDay.volumeUSD * 0.0005 * 365) / totalSushiStakedUSD) * 100 : 0\n\n            return {\n              APR: APR,\n              APY: aprToApy(APR, 365),\n              xSushiSupply: barDay.xSushiSupply,\n              date: barDay.date,\n              feesReceived: exchangeDay.volumeUSD * 0.0005,\n              sushiStakedUSD: barDay.sushiStakedUSD,\n              sushiHarvestedUSD: barDay.sushiHarvestedUSD,\n            }\n          })\n        : [],\n    [barHistory, dayData, sushiDayData, bar]\n  )\n\n  const APY1d = aprToApy(\n    (((exchange?.volumeUSD - exchange1d?.volumeUSD) * 0.0005 * 365.25) / (bar?.totalSupply * xSushiPrice)) * 100 ?? 0\n  )\n  const APY1w = aprToApy(data.slice(-7).reduce((acc, day) => (acc += day.APY), 0) / 7)\n\n  const graphs = useMemo(\n    () => [\n      {\n        labels: ['APY', 'APR'],\n        data: [\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.APY,\n          })),\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.APR,\n          })),\n        ],\n      },\n      {\n        title: 'Fees received (USD)',\n        data: [\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.feesReceived,\n          })),\n        ],\n      },\n      {\n        labels: ['Mist Staked (USD)', 'Mist Harvested (USD)'],\n        note: '/ day',\n        data: [\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.sushiStakedUSD,\n          })),\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.sushiHarvestedUSD,\n          })),\n        ],\n      },\n      {\n        title: 'xMist Total Supply',\n        data: [\n          data.map((d) => ({\n            date: d.date * 1000,\n            value: d.xSushiSupply,\n          })),\n        ],\n      },\n    ],\n    [data]\n  )\n\n  return (\n    <AnalyticsContainer>\n      <Background background=\"bar\">\n        <div className=\"grid items-center justify-between grid-cols-1 gap-x-4 gap-y-2 md:grid-cols-2\">\n          <div className=\"space-y-5\">\n            <div className=\"text-3xl font-bold text-high-emphesis\">xMist</div>\n            <div>Find out all about xMist here.</div>\n          </div>\n          <div className=\"flex space-x-12\">\n            <div className=\"flex flex-col\">\n              <div>Price</div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"text-lg font-medium text-high-emphesis\">{formatNumber(xSushiPrice ?? 0, true)}</div>\n                <ColoredNumber number={(xSushiPrice / xSushiPrice1d) * 100 - 100} percent={true} />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <div>Market Cap</div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"text-lg font-medium text-high-emphesis\">\n                  {formatNumber(xSushiMarketcap ?? 0, true, false)}\n                </div>\n                <ColoredNumber number={(xSushiMarketcap / xSushiMarketcap1d) * 100 - 100} percent={true} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Background>\n      <div className=\"pt-4 space-y-5 lg:px-14\">\n        <div className=\"flex flex-row space-x-4 overflow-auto\">\n          <InfoCard text=\"APY (Last 24 Hours)\" number={formatPercent(APY1d)} />\n          <InfoCard text=\"APY (Last 7 Days)\" number={formatPercent(APY1w)} />\n          <InfoCard text=\"xMIST Supply\" number={formatNumber(bar?.totalSupply)} />\n          <InfoCard text=\"xMIST : MIST\" number={Number(bar?.ratio ?? 0)?.toFixed(4)} />\n        </div>\n        <div className=\"space-y-4\">\n          {graphs.map((graph, i) => (\n            <div\n              className={classNames(\n                graph.data[0].length === 0 && 'hidden',\n                'p-1 rounded bg-dark-900 border border-dark-700'\n              )}\n              key={i}\n            >\n              <div className=\"w-full h-96\">\n                <ScrollableGraph\n                  labels={graph.labels}\n                  title={graph.title}\n                  note={graph.note}\n                  data={graph.data}\n                  margin={{ top: 64, right: 32, bottom: 16, left: 64 }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </AnalyticsContainer>\n  )\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/analytics/xMIST\",\n      function () {\n        return require(\"private-next-pages/analytics/xMIST.tsx\");\n      }\n    ]);\n  "],"names":["items","className","map","item","i","href","activeClassName","text","AnalyticsContainer","children","name","content","id","maxWidth","backgrounds","dashboard","bar","farms","pool","pools","token","tokens","Background","background","classNames","includes","style","backgroundImage","WebkitMaskImage","ColoredNumber","number","scaleNumber","percent","isNaN","Infinity","formatPercent","replace","formatNumberScale","formatNumber","BLOCKS_IN_A_YEAR","aprToApy","apr","frequency","axisColor","axisBottomTickLabelProps","textAnchor","fontFamily","fontSize","fill","axisLeftTickLabelProps","dx","dy","CurveChart","data","width","gradientColor","index","even","height","yMax","undefined","margin","top","right","bottom","left","xScale","yScale","hideBottomAxis","hideLeftAxis","stroke","strokeWidth","strokeOpacity","markerMid","markerStart","markerEnd","Group","LinePath","curve","curveNatural","x","d","Date","date","getX","y","Number","value","getY","shapeRendering","AxisBottom","scale","numTicks","tickStroke","tickLabelProps","AxisLeft","tickFormat","millify","brushMargin","PATTERN_ID","selectedBrushStyle","timeParse","timeFormat","compact","title","labels","note","colors","allData","reduce","previousValue","currentValue","concat","useState","slice","length","filteredData","setFilteredData","innerHeight","topChartBottomMargin","chartSeparation","topChartHeight","bottomChartHeight","xMax","Math","max","useMemo","scaleTime","range","domain","extent","scaleLinear","min","nice","xBrushMax","yBrushMax","brushXScale","brushYScale","initialBrushPosition","start","end","colorScale","scaleOrdinal","direction","labelMargin","GridRows","strokeDasharray","pointerEvents","GridColumns","size","markerUnits","refX","brushData","orientation","Brush","handleSize","resizeTriggerAreas","brushDirection","onChange","x0","x1","y0","y1","stockCopy","filter","s","getTime","onClick","selectedBoxStyle","ScrollableGraph","props","InfoCard","barQuery","gql","barHistoriesQuery","BAR","ChainId","query","variables","useActiveWeb3React","chainId","request","GRAPH_HOST","getBar","block","barData","getBarHistory","histories","useBar","timestamp","shouldFetch","swrConfig","blockFetched","useBlock","useSWR","XMIST_PAGE","block1d","daysAgo","exchange","useFactory","exchange1d","dayData","useDayData","ethPrice","useNativePrice","ethPrice1d","xSushi","useTokens","subset","XMIST","address","xSushi1d","sushiDayData","useTokenDayData","MIST_ADDRESS","bar1d","barHistory","useBarHistory","xSushiPrice","derivedETH","xSushiMarketcap","totalSupply","xSushiPrice1d","xSushiMarketcap1d","barDay","exchangeDay","find","day","sushiDay","totalSushiStakedUSD","xSushiSupply","ratio","priceUSD","APR","volumeUSD","APY","feesReceived","sushiStakedUSD","sushiHarvestedUSD","APY1d","APY1w","acc","graphs","toFixed","graph","window","__NEXT_P","push"],"sourceRoot":""}