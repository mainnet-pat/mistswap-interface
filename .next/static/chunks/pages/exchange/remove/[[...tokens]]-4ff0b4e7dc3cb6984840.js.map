{"version":3,"file":"static/chunks/pages/exchange/remove/[[...tokens]]-4ff0b4e7dc3cb6984840.js","mappings":"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","sources":["webpack://_N_E/./src/components/Column/index.tsx","webpack://_N_E/./src/components/CurrencyLogo/index.tsx","webpack://_N_E/./src/components/Logo/index.tsx","webpack://_N_E/./src/components/Row/index.tsx","webpack://_N_E/./src/hooks/useHttpLocations.ts","webpack://_N_E/./src/hooks/useENSContentHash.ts","webpack://_N_E/./src/hooks/useIsArgentWallet.ts","webpack://_N_E/./src/state/burn/hooks.ts","webpack://_N_E/./src/components/PercentInputPanel/index.tsx","webpack://_N_E/./src/hooks/useERC20Permit.ts","webpack://_N_E/./src/pages/exchange/remove/[[...tokens]].tsx","webpack://_N_E/./src/hooks/useDebouncedChangeHandler.ts","webpack://_N_E/?10e5"],"sourcesContent":["import React, { FC } from 'react'\n\nimport { classNames } from '../../functions'\n\nexport const Column: FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className, ...rest }) => (\n  <div className={classNames('flex flex-col justify-center', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport const ColumnCenter: FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...rest }) => (\n  <Column className=\"items-center w-full\" {...rest}>\n    {children}\n  </Column>\n)\n\ninterface AutoColumnProps {\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}\n\nexport const AutoColumn: FC<React.HTMLAttributes<HTMLDivElement> & AutoColumnProps> = ({\n  children,\n  className,\n  gap,\n  justify,\n  style,\n  ...rest\n}) => (\n  <div\n    className={classNames('grid', className)}\n    style={{\n      gridRowGap: (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap,\n      justifyItems: justify && justify,\n      ...style,\n    }}\n    {...rest}\n  >\n    {children}\n  </div>\n)\n\nexport default Column\n","import { ChainId, Currency, WNATIVE } from '@mistswapdex/sdk'\nimport React, { FunctionComponent, useMemo } from 'react'\n\nimport Logo from '../Logo'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport useHttpLocations from '../../hooks/useHttpLocations'\n\nconst BLOCKCHAIN = {\n  [ChainId.SMARTBCH]: 'smartbch',\n  [ChainId.SMARTBCH_AMBER]: 'amber',\n}\n\nfunction getCurrencySymbol(currency) {\n  if (currency.symbol === 'WBCH') {\n    return 'bch'\n  }\n  return currency.symbol.toLowerCase()\n}\n\nexport function getCurrencyLogoUrls(currency) {\n  const urls = []\n\n  urls.push(`https://raw.githubusercontent.com/mistswapdex/icons/master/token/${getCurrencySymbol(currency)}.jpg`)\n  if (currency.chainId in BLOCKCHAIN) {\n    urls.push(\n      `https://raw.githubusercontent.com/mistswapdex/assets/master/blockchains/${BLOCKCHAIN[currency.chainId]}/assets/${\n        currency.address\n      }/logo.png`\n    )\n    urls.push(\n      `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/${BLOCKCHAIN[currency.chainId]}/assets/${\n        currency.address\n      }/logo.png`\n    )\n  }\n\n  return urls\n}\n\nconst BitcoinCashLogo = 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/bch.jpg'\n\nconst LOGO: { readonly [chainId in ChainId]?: string } = {\n  [ChainId.SMARTBCH]: BitcoinCashLogo,\n  [ChainId.SMARTBCH_AMBER]: BitcoinCashLogo,\n}\n\ninterface CurrencyLogoProps {\n  currency?: Currency\n  size?: string | number\n  style?: React.CSSProperties\n  className?: string\n  squared?: boolean\n}\n\nconst unknown = 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/unknown.png'\n\nconst CurrencyLogo: FunctionComponent<CurrencyLogoProps> = ({\n  currency,\n  size = '24px',\n  style,\n  className = '',\n  ...rest\n}) => {\n  const uriLocations = useHttpLocations(\n    currency instanceof WrappedTokenInfo ? currency.logoURI || currency.tokenInfo.logoURI : undefined\n  )\n\n  const srcs = useMemo(() => {\n    if (!currency) {\n      return [unknown]\n    }\n\n    if (currency.isNative || currency.equals(WNATIVE[currency.chainId])) {\n      return [LOGO[currency.chainId], unknown]\n    }\n\n    if (currency.isToken) {\n      const defaultUrls = [...getCurrencyLogoUrls(currency)]\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, ...defaultUrls, unknown]\n      }\n      return defaultUrls\n    }\n  }, [currency, uriLocations])\n\n  return <Logo srcs={srcs} width={size} height={size} alt={currency?.symbol} className={className} {...rest} />\n}\n\nexport default CurrencyLogo\n","import React, { FC, useState } from 'react'\n\nimport { IconProps } from 'react-feather'\nimport Image from '../Image'\nimport { classNames } from '../../functions'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport type LogoProps = {\n  srcs: string[]\n  width: string | number\n  height: string | number\n  alt?: string\n} & IconProps\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: FC<LogoProps> = ({ srcs, width, height, style, alt = '', className, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n  const src = srcs.find((src) => !BAD_SRCS[src])\n  return (\n    <div className=\"rounded\" style={{ width, height, ...style }}>\n      <Image\n        src={src || 'https://raw.githubusercontent.com/mistswapdex/icons/master/token/unknown.png'}\n        loader={() => src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n        width={width}\n        height={height}\n        alt={alt}\n        layout=\"fixed\"\n        className={classNames('rounded', className)}\n        {...rest}\n      />\n    </div>\n  )\n}\n\nexport default Logo\n","import React, { FC } from 'react'\n\nimport { classNames } from '../../functions'\nimport styled from 'styled-components'\n\ninterface RowProps {\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}\n\nexport const Row: FC<React.HTMLAttributes<HTMLDivElement> & RowProps> = ({\n  children,\n  className,\n  width,\n  align,\n  justify,\n  padding,\n  border,\n  borderRadius,\n  ...rest\n}) => (\n  <div\n    className={classNames('w-full flex p-0', className)}\n    style={{\n      width,\n      alignItems: align,\n      justifyContent: justify,\n      padding,\n      border,\n      borderRadius,\n    }}\n    {...rest}\n  >\n    {children}\n  </div>\n)\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { contenthashToUri, uriToHttp } from '../functions/convert'\n\nimport { parseENSAddress } from '../functions/ens'\nimport useENSContentHash from './useENSContentHash'\nimport { useMemo } from 'react'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    } else {\n      return uri ? uriToHttp(uri) : []\n    }\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\nimport { isZero } from '../functions'\nimport { namehash } from '@ethersproject/hash'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): {\n  loading: boolean\n  contenthash: string | null\n} {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\n\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useArgentWalletDetectorContract } from './useContract'\nimport { useMemo } from 'react'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useActiveWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return call?.result?.[0] ?? false\n}\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, Token } from '@mistswapdex/sdk'\nimport { Field, typeInput } from './actions'\nimport { useAppDispatch, useAppSelector } from '../hooks'\n\nimport { AppState } from '../index'\nimport { t } from '@lingui/macro'\nimport { tryParseAmount } from '../../functions/parse'\nimport { useActiveWeb3React } from '../../hooks/useActiveWeb3React'\nimport { useCallback } from 'react'\nimport { useLingui } from '@lingui/react'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\n\nexport function useBurnState(): AppState['burn'] {\n  return useAppSelector((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { i18n } = useLingui()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = useV2Pair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\n      : undefined\n\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\n      : undefined\n\n  const liquidityValues: {\n    [Field.CURRENCY_A]?: CurrencyAmount<Token>\n    [Field.CURRENCY_B]?: CurrencyAmount<Token>\n  } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? CurrencyAmount.fromRawAmount(\n            userLiquidity.currency,\n            percentToRemove.multiply(userLiquidity.quotient).quotient\n          )\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\n        : undefined,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = i18n._(t`Connect Wallet`)\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? i18n._(t`Enter an amount`)\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import Input from '../Input'\nimport React from 'react'\n\ninterface PercentInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  id: string\n}\n\nexport default function PercentInputPanel({ value, onUserInput, id }: PercentInputPanelProps) {\n  return (\n    <div id={id} className=\"p-5 rounded bg-dark-800\">\n      <div className=\"flex flex-col justify-between space-y-3 sm:space-y-0 sm:flex-row\">\n        <div className=\"w-full text-white sm:w-2/5\" style={{ margin: 'auto 0px' }}>\n          Amount to Remove\n        </div>\n        <div className=\"flex items-center w-full p-3 space-x-3 text-xl font-bold rounded bg-dark-900 sm:w-3/5\">\n          <Input.Percent\n            className=\"token-amount-input\"\n            value={value}\n            onUserInput={(val) => {\n              onUserInput(val)\n            }}\n            align=\"right\"\n          />\n          <div className=\"text-xl font-bold percent-translate\">%</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { ChainId, Currency, CurrencyAmount, JSBI, Percent, Token, TradeType, Trade as V2Trade } from '@mistswapdex/sdk'\nimport { MIST } from '../config/tokens'\nimport { useMemo, useState } from 'react'\n\nimport { splitSignature } from '@ethersproject/bytes'\nimport { useActiveWeb3React } from './useActiveWeb3React'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nenum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\ninterface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.SMARTBCH]: {\n    [MIST[ChainId.SMARTBCH].address]: { type: PermitType.AMOUNT, name: 'MistToken' },\n  },\n  [ChainId.SMARTBCH_AMBER]: {\n    [MIST[ChainId.SMARTBCH_AMBER].address]: { type: PermitType.AMOUNT, name: 'MistToken' },\n  },\n}\n\nexport enum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ninterface BaseSignatureData {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n}\n\nexport interface StandardSignatureData extends BaseSignatureData {\n  amount: string\n}\n\nexport interface AllowedSignatureData extends BaseSignatureData {\n  allowed: true\n}\n\nexport type SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const { account, chainId, library } = useActiveWeb3React()\n  const transactionDeadline = useTransactionDeadline()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      !account ||\n      !chainId ||\n      !transactionDeadline ||\n      !library ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData || JSBI.equal(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return library\n          .send('eth_signTypedData_v4', [account, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId,\n              owner: account,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    currencyAmount,\n    eip2612Contract,\n    account,\n    chainId,\n    isArgentWallet,\n    transactionDeadline,\n    library,\n    tokenNonceState.loading,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'MISTswap LP Token',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  return useERC20Permit(liquidityAmount, spender, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n\nexport function useERC20PermitFromTrade(\n  trade: V2Trade<Currency, Currency, TradeType> | undefined,\n  allowedSlippage: Percent\n) {\n  const { chainId } = useActiveWeb3React()\n\n  const amountToApprove = useMemo(\n    () => (trade ? trade.maximumAmountIn(allowedSlippage) : undefined),\n    [trade, allowedSlippage]\n  )\n\n  return useERC20Permit(\n    amountToApprove,\n    // v2 router does not support\n    trade instanceof V2Trade ? undefined : trade,\n    null\n  )\n}\n","import { ApprovalState, useApproveCallback } from '../../../hooks/useApproveCallback'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { AutoRow, RowBetween } from '../../../components/Row'\nimport { ButtonConfirmed, ButtonError } from '../../../components/Button'\nimport { ChainId, Currency, NATIVE, Percent, WNATIVE, WNATIVE_ADDRESS } from '@mistswapdex/sdk'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../../modals/TransactionConfirmationModal'\nimport { calculateGasMargin, calculateSlippageAmount, getGasPrice } from '../../../functions/trade'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../../state/burn/hooks'\nimport { usePairContract, useRouterContract } from '../../../hooks/useContract'\n\nimport Alert from '../../../components/Alert'\nimport { ArrowDownIcon } from '@heroicons/react/solid'\nimport { AutoColumn } from '../../../components/Column'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport Button from '../../../components/Button'\nimport Container from '../../../components/Container'\nimport { Contract } from '@ethersproject/contracts'\nimport CurrencyLogo from '../../../components/CurrencyLogo'\nimport Dots from '../../../components/Dots'\nimport DoubleGlowShadow from '../../../components/DoubleGlowShadow'\nimport { Field } from '../../../state/burn/actions'\nimport Head from 'next/head'\nimport Header from '../../../features/trade/Header'\nimport Link from 'next/link'\nimport LiquidityHeader from '../../../features/exchange-v1/liquidity/LiquidityHeader'\nimport LiquidityPrice from '../../../features/exchange-v1/liquidity/LiquidityPrice'\nimport { MinimalPositionCard } from '../../../components/PositionCard'\nimport NavLink from '../../../components/NavLink'\nimport PercentInputPanel from '../../../components/PercentInputPanel'\nimport RemoveLiquidityReceiveDetails from '../../../features/exchange-v1/liquidity/RemoveLiquidityReceiveDetails'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport Web3Connect from '../../../components/Web3Connect'\nimport { currencyId } from '../../../functions/currency'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { t } from '@lingui/macro'\nimport { useActiveWeb3React } from '../../../hooks/useActiveWeb3React'\nimport { useCurrency } from '../../../hooks/Tokens'\nimport useDebouncedChangeHandler from '../../../hooks/useDebouncedChangeHandler'\nimport { useDerivedMintInfo } from '../../../state/mint/hooks'\nimport useIsArgentWallet from '../../../hooks/useIsArgentWallet'\nimport { useLingui } from '@lingui/react'\nimport { useRouter } from 'next/router'\nimport { useTransactionAdder } from '../../../state/transactions/hooks'\nimport useTransactionDeadline from '../../../hooks/useTransactionDeadline'\nimport { useUserSlippageToleranceWithDefault } from '../../../state/user/hooks'\nimport { useV2LiquidityTokenPermit } from '../../../hooks/useERC20Permit'\nimport { useWalletModalToggle } from '../../../state/application/hooks'\n\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\n\nconst REMOVE_TIPS = {}\n\nexport default function Remove() {\n  const { i18n } = useLingui()\n  const router = useRouter()\n  const tokens = router.query.tokens\n  const [currencyIdA, currencyIdB] = tokens || [undefined, undefined]\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  const { price } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // router contract\n  const routerContract = useRouterContract()\n\n  // allowance handling\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\n    parsedAmounts[Field.LIQUIDITY],\n    routerContract?.address\n  )\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], routerContract?.address)\n\n  /*\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n    }\n  }\n  */\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyAInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyBInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n    [onUserInput]\n  )\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline || !router) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB.isNative\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        routerContract.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((error) => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await routerContract[methodName](...args, {\n        gasLimit: safeGasEstimate,\n        gasPrice: getGasPrice(),\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: t`Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error)\n        })\n    }\n  }\n\n  // const isArgentWallet = useIsArgentWallet();\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline)\n      throw new Error(\"missing dependencies\");\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error(\"missing liquidity amount\");\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" },\n    ];\n    const domain = {\n      name: \"MISTswap LP Token\",\n      version: \"1\",\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address,\n    };\n    const Permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n    const message = {\n      owner: account,\n      spender: routerContract.address,\n      value: liquidityAmount.toFixed(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber(),\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: \"Permit\",\n      message,\n    });\n\n    /*\n    library\n      .send(\"eth_signTypedData_v4\", [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber(),\n        });\n      })\n      .catch((error) => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback();\n        }\n      });\n    */\n    approveCallback();\n  }\n\n  // // wrapped onUserInput to clear signatures\n  // const onUserInput = useCallback(\n  //   (field: Field, typedValue: string) => {\n  //     setSignatureData(null);\n  //     return _onUserInput(field, typedValue);\n  //   },\n  //   [_onUserInput]\n  // );\n\n  // const onLiquidityPercentInput = useCallback(\n  //   (typedValue: string): void =>\n  //     onUserInput(Field.LIQUIDITY_PERCENT, typedValue),\n  //   [onUserInput]\n  // );\n  // const onLiquidityInput = useCallback(\n  //   (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n  //   [onUserInput]\n  // );\n  // const onCurrencyAInput = useCallback(\n  //   (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n  //   [onUserInput]\n  // );\n  // const onCurrencyBInput = useCallback(\n  //   (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n  //   [onUserInput]\n  // );\n\n  // // tx sending\n  // const addTransaction = useTransactionAdder();\n  // async function onRemove() {\n  //   if (!chainId || !library || !account || !deadline)\n  //     throw new Error(\"missing dependencies\");\n  //   const {\n  //     [Field.CURRENCY_A]: currencyAmountA,\n  //     [Field.CURRENCY_B]: currencyAmountB,\n  //   } = parsedAmounts;\n  //   if (!currencyAmountA || !currencyAmountB) {\n  //     throw new Error(\"missing currency amounts\");\n  //   }\n  //   const router = getRouterContract(chainId, library, account);\n\n  //   const amountsMin = {\n  //     [Field.CURRENCY_A]: calculateSlippageAmount(\n  //       currencyAmountA,\n  //       allowedSlippage\n  //     )[0],\n  //     [Field.CURRENCY_B]: calculateSlippageAmount(\n  //       currencyAmountB,\n  //       allowedSlippage\n  //     )[0],\n  //   };\n\n  //   if (!currencyA || !currencyB) throw new Error(\"missing tokens\");\n  //   const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n  //   if (!liquidityAmount) throw new Error(\"missing liquidity amount\");\n\n  //   const currencyBIsETH = currencyB === Currency.getNativeCurrency(chainId);\n  //   const oneCurrencyIsETH =\n  //     currencyA === Currency.getNativeCurrency(chainId) || currencyBIsETH;\n\n  //   if (!tokenA || !tokenB) throw new Error(\"could not wrap\");\n\n  //   let methodNames: string[];\n  //   let args: Array<string | string[] | number | boolean>;\n  //   // we have approval, use normal remove liquidity\n  //   if (approval === ApprovalState.APPROVED) {\n  //     // removeLiquidityETH\n  //     if (oneCurrencyIsETH && ![ChainId.CELO].includes(chainId)) {\n  //       methodNames = [\n  //         \"removeLiquidityETH\",\n  //         \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n  //       ];\n  //       args = [\n  //         currencyBIsETH ? tokenA.address : tokenB.address,\n  //         liquidityAmount.raw.toString(),\n  //         amountsMin[\n  //           currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B\n  //         ].toString(),\n  //         amountsMin[\n  //           currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A\n  //         ].toString(),\n  //         account,\n  //         deadline.toHexString(),\n  //       ];\n  //     }\n  //     // removeLiquidity\n  //     else {\n  //       methodNames = [\"removeLiquidity\"];\n  //       args = [\n  //         tokenA.address,\n  //         tokenB.address,\n  //         liquidityAmount.raw.toString(),\n  //         amountsMin[Field.CURRENCY_A].toString(),\n  //         amountsMin[Field.CURRENCY_B].toString(),\n  //         account,\n  //         deadline.toHexString(),\n  //       ];\n  //     }\n  //   }\n  //   // we have a signataure, use permit versions of remove liquidity\n  //   else if (signatureData !== null) {\n  //     // removeLiquidityETHWithPermit\n  //     if (oneCurrencyIsETH && ![ChainId.CELO].includes(chainId)) {\n  //       methodNames = [\n  //         \"removeLiquidityETHWithPermit\",\n  //         \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n  //       ];\n  //       args = [\n  //         currencyBIsETH ? tokenA.address : tokenB.address,\n  //         liquidityAmount.raw.toString(),\n  //         amountsMin[\n  //           currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B\n  //         ].toString(),\n  //         amountsMin[\n  //           currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A\n  //         ].toString(),\n  //         account,\n  //         signatureData.deadline,\n  //         false,\n  //         signatureData.v,\n  //         signatureData.r,\n  //         signatureData.s,\n  //       ];\n  //     }\n  //     // removeLiquidityETHWithPermit\n  //     else {\n  //       methodNames = [\"removeLiquidityWithPermit\"];\n  //       args = [\n  //         tokenA.address,\n  //         tokenB.address,\n  //         liquidityAmount.raw.toString(),\n  //         amountsMin[Field.CURRENCY_A].toString(),\n  //         amountsMin[Field.CURRENCY_B].toString(),\n  //         account,\n  //         signatureData.deadline,\n  //         false,\n  //         signatureData.v,\n  //         signatureData.r,\n  //         signatureData.s,\n  //       ];\n  //     }\n  //   } else {\n  //     throw new Error(\n  //       \"Attempting to confirm without approval or a signature. Please contact support.\"\n  //     );\n  //   }\n\n  //   const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n  //     methodNames.map((methodName) =>\n  //       router.estimateGas[methodName](...args)\n  //         .then(calculateGasMargin)\n  //         .catch((error) => {\n  //           console.error(`estimateGas failed`, methodName, args, error);\n  //           return undefined;\n  //         })\n  //     )\n  //   );\n\n  //   const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(\n  //     (safeGasEstimate) => BigNumber.isBigNumber(safeGasEstimate)\n  //   );\n\n  //   // all estimations failed...\n  //   if (indexOfSuccessfulEstimation === -1) {\n  //     console.error(\"This transaction would fail. Please contact support.\");\n  //   } else {\n  //     const methodName = methodNames[indexOfSuccessfulEstimation];\n  //     const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n\n  //     setAttemptingTxn(true);\n  //     await router[methodName](...args, {\n  //       gasLimit: safeGasEstimate,\n  //       gasPrice: getGasPrice(),\n  //     })\n  //       .then((response: TransactionResponse) => {\n  //         setAttemptingTxn(false);\n\n  //         addTransaction(response, {\n  //           summary:\n  //             \"Remove \" +\n  //             parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n  //             \" \" +\n  //             currencyA?.symbol +\n  //             \" and \" +\n  //             parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n  //             \" \" +\n  //             currencyB?.symbol,\n  //         });\n\n  //         setTxHash(response.hash);\n\n  //       })\n  //       .catch((error: Error) => {\n  //         setAttemptingTxn(false);\n  //         // we only care if the error is something _other_ than the user rejected the tx\n  //         console.error(error);\n  //       });\n  //   }\n  // }\n\n  function modalHeader() {\n    return (\n      <div className=\"grid gap-4 pt-3 pb-4\">\n        <div className=\"grid gap-2\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <CurrencyLogo currency={currencyA} size={48} />\n              <div className=\"text-2xl font-bold text-high-emphesis\">\n                {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n              </div>\n            </div>\n            <div className=\"ml-3 text-2xl font-medium text-high-emphesis\">{currencyA?.symbol}</div>\n          </div>\n          <div className=\"ml-3 mr-3 min-w-[24px]\">\n            <Plus size={24} />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <CurrencyLogo currency={currencyB} size={48} />\n              <div className=\"text-2xl font-bold text-high-emphesis\">\n                {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n              </div>\n            </div>\n            <div className=\"ml-3 text-2xl font-medium text-high-emphesis\">{currencyB?.symbol}</div>\n          </div>\n        </div>\n        <div className=\"justify-start text-sm text-secondary\">\n          {t`Output is estimated. If the price changes by more than ${allowedSlippage.toSignificant(\n            4\n          )}% your transaction will revert.`}\n        </div>\n      </div>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <div className=\"p-6 mt-0 -m-6 bg-dark-800\">\n        {pair && (\n          <>\n            <div className=\"grid gap-1\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-high-emphesis\">{i18n._(t`Rates`)}</div>\n                <div className=\"text-sm font-bold justify-center items-center flex right-align pl-1.5 text-high-emphesis\">\n                  {`1 ${currencyA?.symbol} = ${tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} ${\n                    currencyB?.symbol\n                  }`}\n                </div>\n              </div>\n              <div className=\"flex items-center justify-end\">\n                <div className=\"text-sm font-bold justify-center items-center flex right-align pl-1.5 text-high-emphesis\">\n                  {`1 ${currencyB?.symbol} = ${tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} ${\n                    currencyA?.symbol\n                  }`}\n                </div>\n              </div>\n            </div>\n            <div className=\"h-px my-6 bg-gray-700\" />\n          </>\n        )}\n        <div className=\"grid gap-1 pb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-secondary\">{i18n._(t`${currencyA?.symbol}/${currencyB?.symbol} Burned`)}</div>\n            <div className=\"text-sm font-bold justify-center items-center flex right-align pl-1.5 text-high-emphasis\">\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n            </div>\n          </div>\n        </div>\n        <Button\n          color=\"gradient\"\n          size=\"lg\"\n          disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)}\n          onClick={onRemove}\n        >\n          {i18n._(t`Confirm`)}\n        </Button>\n      </div>\n    )\n  }\n\n  const pendingText = i18n._(\n    t`Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${currencyA?.symbol} and ${parsedAmounts[\n      Field.CURRENCY_B\n    ]?.toSignificant(6)} ${currencyB?.symbol}`\n  )\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: string) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value)\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId && WNATIVE[chainId] && (currencyA?.equals(WNATIVE[chainId]) || currencyB?.equals(WNATIVE[chainId]))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        router.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        router.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, router]\n  )\n\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        router.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        router.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, router]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <Container id=\"remove-liquidity-page\" className=\"py-4 space-y-4 md:py-8 lg:py-12\" maxWidth=\"2xl\">\n      <Head>\n        <title>Remove Liquidity | Mist</title>\n        <meta key=\"description\" name=\"description\" content=\"Remove liquidity from the MISTswap AMM\" />\n      </Head>\n      <div className=\"px-4 mb-5\">\n        <NavLink href=\"/pool\">\n          <a className=\"flex items-center space-x-2 text-base font-medium text-center cursor-pointer text-secondary hover:text-high-emphesis\">\n            <span>{i18n._(t`View Liquidity Positions`)}</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"w-4 h-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n            </svg>\n          </a>\n        </NavLink>\n      </div>\n\n      <DoubleGlowShadow>\n        <div className=\"p-4 space-y-4 rounded bg-dark-900\" style={{ zIndex: 1 }}>\n          {/* <AddRemoveTabs\n          creating={false}\n          adding={false}\n          defaultSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE}\n        /> */}\n          <Header input={currencyA} output={currencyB} allowedSlippage={allowedSlippage} />\n          <div>\n            <TransactionConfirmationModal\n              isOpen={showConfirm}\n              onDismiss={handleDismissConfirmation}\n              attemptingTxn={attemptingTxn}\n              hash={txHash ? txHash : ''}\n              content={() => (\n                <ConfirmationModalContent\n                  title={i18n._(t`You will receive`)}\n                  onDismiss={handleDismissConfirmation}\n                  topContent={modalHeader}\n                  bottomContent={modalBottom}\n                />\n              )}\n              pendingText={pendingText}\n            />\n            <AutoColumn gap=\"md\">\n              {/* <LiquidityHeader input={currencyA} output={currencyB} /> */}\n\n              <div>\n                <PercentInputPanel\n                  value={innerLiquidityPercentage}\n                  onUserInput={setInnerLiquidityPercentage}\n                  id=\"liquidity-percent\"\n                />\n\n                <AutoColumn justify=\"space-between\" className=\"py-2.5\">\n                  <AutoRow justify={'flex-start'} style={{ padding: '0 1rem' }}>\n                    <button className=\"z-10 -mt-6 -mb-6 rounded-full cursor-default bg-dark-900 p-3px\">\n                      <div className=\"p-3 rounded-full bg-dark-800\">\n                        <ArrowDownIcon width=\"32px\" height=\"32px\" />\n                      </div>\n                    </button>\n                  </AutoRow>\n                </AutoColumn>\n\n                <div id=\"remove-liquidity-output\" className=\"p-5 rounded bg-dark-800\">\n                  <div className=\"flex flex-col justify-between space-y-3 sm:space-y-0 sm:flex-row\">\n                    <div className=\"w-full text-white sm:w-2/5\" style={{ margin: 'auto 0px' }}>\n                      <AutoColumn>\n                        <div>You Will Receive:</div>\n                        {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                          <RowBetween className=\"text-sm\">\n                            {oneCurrencyIsETH ? (\n                              <Link\n                                href={`/remove/${currencyA?.isNative ? WNATIVE_ADDRESS[chainId] : currencyIdA}/${\n                                  currencyB?.isNative ? WNATIVE_ADDRESS[chainId] : currencyIdB\n                                }`}\n                              >\n                                <a className=\"text-baseline text-blue opacity-80 hover:opacity-100 focus:opacity-100 whitespace-nowrap\">\n                                  Receive W{NATIVE[chainId].symbol}\n                                </a>\n                              </Link>\n                            ) : oneCurrencyIsWETH ? (\n                              <Link\n                                href={`/remove/${currencyA?.equals(WNATIVE[chainId]) ? 'BCH' : currencyIdA}/${\n                                  currencyB?.equals(WNATIVE[chainId]) ? 'BCH' : currencyIdB\n                                }`}\n                              >\n                                <a className=\"text-baseline text-blue opacity-80 hover:opacity-100 whitespace-nowrap\">\n                                  Receive {NATIVE[chainId].symbol}\n                                </a>\n                              </Link>\n                            ) : null}\n                          </RowBetween>\n                        ) : null}\n                      </AutoColumn>\n                    </div>\n\n                    <div className=\"flex flex-col space-y-3 md:flex-row md:space-x-6 md:space-y-0\">\n                      <div className=\"flex flex-row items-center w-full p-3 pr-8 space-x-3 rounded bg-dark-900\">\n                        <CurrencyLogo currency={currencyA} size=\"46px\" />\n                        <AutoColumn>\n                          <div className=\"text-white\">{formattedAmounts[Field.CURRENCY_A] || '-'}</div>\n                          <div className=\"text-sm\">{currencyA?.symbol}</div>\n                        </AutoColumn>\n                      </div>\n                      <div className=\"flex flex-row items-center w-full p-3 pr-8 space-x-3 rounded bg-dark-900\">\n                        <CurrencyLogo currency={currencyB} size=\"46px\" />\n                        <AutoColumn>\n                          <div className=\"text-white\">{formattedAmounts[Field.CURRENCY_B] || '-'}</div>\n                          <div className=\"text-sm\">{currencyB?.symbol}</div>\n                        </AutoColumn>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                {!account ? (\n                  <Web3Connect size=\"lg\" color=\"blue\" className=\"w-full\" />\n                ) : (\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <ButtonConfirmed\n                      onClick={onAttemptToApprove}\n                      confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    >\n                      {approval === ApprovalState.PENDING ? (\n                        <Dots>{i18n._(t`Approving`)}</Dots>\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                        i18n._(t`Approved`)\n                      ) : (\n                        i18n._(t`Approve`)\n                      )}\n                    </ButtonConfirmed>\n                    <ButtonError\n                      onClick={() => {\n                        setShowConfirm(true)\n                      }}\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                      error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                    >\n                      {error || i18n._(t`Confirm Withdrawal`)}\n                    </ButtonError>\n                  </div>\n                )}\n              </div>\n            </AutoColumn>\n          </div>\n\n          {pair ? <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} /> : null}\n        </div>\n      </DoubleGlowShadow>\n    </Container>\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/exchange/remove/[[...tokens]]\",\n      function () {\n        return require(\"private-next-pages/exchange/remove/[[...tokens]].tsx\");\n      }\n    ]);\n  "],"names":["Column","children","className","rest","classNames","AutoColumn","gap","justify","style","gridRowGap","justifyItems","BLOCKCHAIN","ChainId","BitcoinCashLogo","LOGO","unknown","currency","size","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","tokenInfo","undefined","srcs","useMemo","isNative","equals","WNATIVE","chainId","isToken","defaultUrls","urls","push","symbol","toLowerCase","getCurrencySymbol","address","getCurrencyLogoUrls","width","height","alt","BAD_SRCS","refresh","useState","src","find","loader","onError","i","layout","Row","align","padding","border","borderRadius","alignItems","justifyContent","RowBetween","styled","AutoRow","RowFixed","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","useSingleCallResult","resolverAddress","result","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri","useIsArgentWallet","account","useActiveWeb3React","argentWalletDetector","useArgentWalletDetectorContract","inputs","call","NEVER_RELOAD","useBurnState","useAppSelector","state","burn","PercentInputPanel","value","onUserInput","id","margin","Input","val","PermitType","UseERC20PermitState","PERMITTABLE_TOKENS","MIST","type","AMOUNT","name","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","currencyAmount","spender","overridePermitInfo","library","transactionDeadline","useTransactionDeadline","tokenAddress","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","valid","NOT_APPLICABLE","gatherPermitSignature","nonceNumber","toNumber","LOADING","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","SIGNED","NOT_SIGNED","allowed","ALLOWED","signatureDeadline","toString","message","holder","expiry","domain","version","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","REMOVE_V2_LIQUIDITY_PERMIT_INFO","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","Remove","liquidityAmount","i18n","useLingui","router","useRouter","query","tokens","currencyIdA","currencyIdB","currencyA","useCurrency","currencyB","wrapped","tokenA","tokenB","useWalletModalToggle","useDerivedMintInfo","price","independentField","typedValue","useV2Pair","pair","relevantTokenBalances","useTokenBalances","liquidityToken","userLiquidity","Field","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","independentAmount","tryParseAmount","greaterThan","liquidityValue","parsedAmounts","multiply","_","useDerivedBurnInfo","_onUserInput","dispatch","useAppDispatch","useCallback","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txHash","setTxHash","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","pairContract","usePairContract","routerContract","useRouterContract","useApproveCallback","approval","approveCallback","addTransaction","useTransactionAdder","onRemove","Error","currencyAmountA","currencyAmountB","calculateSlippageAmount","amountsMin","currencyBIsETH","oneCurrencyIsETH","ApprovalState","methodNames","args","toHexString","Promise","all","map","methodName","estimateGas","calculateGasMargin","catch","console","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","gasLimit","gasPrice","getGasPrice","response","summary","hash","nonces","modalHeader","CurrencyLogo","modalBottom","priceOf","Button","color","disabled","onClick","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","handleDismissConfirmation","currencyId","onChange","debouncedMs","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","useDebouncedChangeHandler","innerLiquidityPercentage","setInnerLiquidityPercentage","Container","maxWidth","content","NavLink","href","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","DoubleGlowShadow","zIndex","Header","input","output","TransactionConfirmationModal","isOpen","onDismiss","title","topContent","bottomContent","WNATIVE_ADDRESS","NATIVE","position","confirmed","Dots","Web3Connect","showUnwrapped","window","__NEXT_P"],"sourceRoot":""}